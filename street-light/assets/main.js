!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const r of e)if("childList"===r.type)for(const e of r.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class e{constructor(e,t,r){this.elements=new Float32Array(3),this.set(e,t,r)}get x(){return this.elements[0]}get y(){return this.elements[1]}get z(){return this.elements[2]}set x(e){this.elements[0]=e}set y(e){this.elements[1]=e}set z(e){this.elements[2]=e}get magnitude(){return Math.max(1e-4,Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z))}set(e,t,r){return this.elements=new Float32Array([e,t,r]),this}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}normalize(){const e=this.magnitude;return this.x=this.x/e,this.y=this.y/e,this.z=this.z/e,this}add(e){return this.x+=e,this.y+=e,this.z+=e,this}addVector(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}sub(e){return this.x-=e,this.y-=e,this.z-=e,this}subVector(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}negate(){return this.x*=-1,this.y*=-1,this.z*=-1,this}scale(e){return this.x*=e,this.y*=e,this.z*=e,this}scaleVector(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}clone(){return new e(this.x,this.y,this.z)}multiplyMatrix4(e){const t=this.x,r=this.y,a=this.z,i=e.m00*t+e.m01*r+e.m02*a+1*e.m03,s=e.m10*t+e.m11*r+e.m12*a+1*e.m13,n=e.m20*t+e.m21*r+e.m22*a+1*e.m23;return this.x=i,this.y=s,this.z=n,this}static multiplyVectors(t,r){return new e(t.x*r.x,t.y*r.y,t.z*r.z)}equals(e){const t=1e-7;return Math.abs(this.x-e.x)<t&&Math.abs(this.y-e.y)<t&&Math.abs(this.z-e.z)<t}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}static dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z}static get zero(){return new e(0,0,0)}static get one(){return new e(1,1,1)}static get up(){return new e(0,1,0)}static get down(){return new e(0,-1,0)}static get back(){return new e(0,0,-1)}static get forward(){return new e(0,0,1)}static get right(){return new e(1,0,0)}static get left(){return new e(-1,0,0)}static fromArray(t){return new e(t[0],t[1],t[2])}static addVectors(...t){const r=e.zero;return t.forEach((e=>{r.x+=e.x,r.y+=e.y,r.z+=e.z})),r}static subVectors(t,r){return new e(t.x-r.x,t.y-r.y,t.z-r.z)}static crossVectors(t,r){return new e(t.y*r.z-t.z*r.y,t.z*r.x-t.x*r.z,t.x*r.y-t.y*r.x)}static rotateVectorX(t,r){const a=t.x,i=t.y,s=t.z,n=r/180*Math.PI,o=Math.cos(n),u=Math.sin(n);return new e(a,i*o+s*-u,i*u+s*o)}static rotateVectorY(t,r){const a=t.x,i=t.y,s=t.z,n=r/180*Math.PI,o=Math.cos(n),u=Math.sin(n);return new e(a*o+s*u,i,a*-u+s*o)}static rotateVectorZ(t,r){const a=t.x,i=t.y,s=t.z,n=r/180*Math.PI,o=Math.cos(n),u=Math.sin(n);return new e(a*o+i*-u,a*u+i*u,s)}static getTangent(t){return t.equals(e.up)||t.equals(e.down)?e.right:e.crossVectors(t,e.down)}static getBinormalFromTangent(t,r){return e.crossVectors(t,r.clone().negate())}static fill(t){return new e(t,t,t)}static lerpVectors(t,r,a){return new e(t.x+(r.x-t.x)*a,t.y+(r.y-t.y)*a,t.z+(r.z-t.z)*a)}log(){}}class t{constructor(e,t,r,a,i,s,n,o,u,l,h,c,m,d,f,p){this.elements=new Float32Array(16),this.set(e,t,r,a,i,s,n,o,u,l,h,c,m,d,f,p)}get m00(){return this.elements[0]}get m01(){return this.elements[4]}get m02(){return this.elements[8]}get m03(){return this.elements[12]}get m10(){return this.elements[1]}get m11(){return this.elements[5]}get m12(){return this.elements[9]}get m13(){return this.elements[13]}get m20(){return this.elements[2]}get m21(){return this.elements[6]}get m22(){return this.elements[10]}get m23(){return this.elements[14]}get m30(){return this.elements[3]}get m31(){return this.elements[7]}get m32(){return this.elements[11]}get m33(){return this.elements[15]}set m00(e){this.elements[0]=e}set m01(e){this.elements[4]=e}set m02(e){this.elements[8]=e}set m03(e){this.elements[12]=e}set m10(e){this.elements[1]=e}set m11(e){this.elements[5]=e}set m12(e){this.elements[9]=e}set m13(e){this.elements[13]=e}set m20(e){this.elements[2]=e}set m21(e){this.elements[6]=e}set m22(e){this.elements[10]=e}set m23(e){this.elements[14]=e}set m30(e){this.elements[3]=e}set m31(e){this.elements[7]=e}set m32(e){this.elements[11]=e}set m33(e){this.elements[15]=e}get position(){return new e(this.m03,this.m13,this.m23)}set(e,t,r,a,i,s,n,o,u,l,h,c,m,d,f,p){return this.elements=new Float32Array([e,i,u,m,t,s,l,d,r,n,h,f,a,o,c,p]),this}static get identity(){return new t(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)}setTranslation(e){return this.m03=e.x,this.m13=e.y,this.m23=e.z,this}static translationMatrix(e){return new t(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1)}static scalingMatrix(e){return new t(e.x,0,0,0,0,e.y,0,0,0,0,e.z,0,0,0,0,1)}static rotationXMatrix(e){const r=Math.cos(e),a=Math.sin(e);return new t(1,0,0,0,0,r,-a,0,0,a,r,0,0,0,0,1)}static rotationYMatrix(e){const r=Math.cos(e),a=Math.sin(e);return new t(r,0,a,0,0,1,0,0,-a,0,r,0,0,0,0,1)}static rotationZMatrix(e){const r=Math.cos(e),a=Math.sin(e);return new t(r,-a,0,0,a,r,0,0,0,0,1,0,0,0,0,1)}static multiplyMatrices(...e){const r=t.identity;return e.forEach((e=>r.multiply(e))),r}multiply(e){const r=this.elements,a=e.elements,i=r[0],s=r[4],n=r[8],o=r[12],u=r[1],l=r[5],h=r[9],c=r[13],m=r[2],d=r[6],f=r[10],p=r[14],g=r[3],v=r[7],x=r[11],T=r[15],y=a[0],w=a[4],b=a[8],P=a[12],S=a[1],M=a[5],E=a[9],C=a[13],R=a[2],B=a[6],D=a[10],A=a[14],V=a[3],_=a[7],F=a[11],U=a[15],I=new t(i*y+s*S+n*R+o*V,i*w+s*M+n*B+o*_,i*b+s*E+n*D+o*F,i*P+s*C+n*A+o*U,u*y+l*S+h*R+c*V,u*w+l*M+h*B+c*_,u*b+l*E+h*D+c*F,u*P+l*C+h*A+c*U,m*y+d*S+f*R+p*V,m*w+d*M+f*B+p*_,m*b+d*E+f*D+p*F,m*P+d*C+f*A+p*U,g*y+v*S+x*R+T*V,g*w+v*M+x*B+T*_,g*b+v*E+x*D+T*F,g*P+v*C+x*A+T*U);return this.copy(I),this}copy(e){return this.m00=e.m00,this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m10=e.m10,this.m11=e.m11,this.m12=e.m12,this.m13=e.m13,this.m20=e.m20,this.m21=e.m21,this.m22=e.m22,this.m23=e.m23,this.m30=e.m30,this.m31=e.m31,this.m32=e.m32,this.m33=e.m33,this}clone(){const e=t.identity;return e.m00=this.m00,e.m01=this.m01,e.m02=this.m02,e.m03=this.m03,e.m10=this.m10,e.m11=this.m11,e.m12=this.m12,e.m13=this.m13,e.m20=this.m20,e.m21=this.m21,e.m22=this.m22,e.m23=this.m23,e.m30=this.m30,e.m31=this.m31,e.m32=this.m32,e.m33=this.m33,e}transpose(){const e=this.m01,t=this.m10;this.m01=t,this.m10=e;const r=this.m02,a=this.m20;this.m02=a,this.m20=r;const i=this.m03,s=this.m30;this.m03=s,this.m30=i;const n=this.m12,o=this.m21;this.m12=o,this.m21=n;const u=this.m13,l=this.m31;this.m13=l,this.m31=u;const h=this.m23,c=this.m32;return this.m23=c,this.m32=h,this}invert(){const e=this.elements,r=e[0],a=e[1],i=e[2],s=e[3],n=e[4],o=e[5],u=e[6],l=e[7],h=e[8],c=e[9],m=e[10],d=e[11],f=e[12],p=e[13],g=e[14],v=e[15],x=c*g*l-p*m*l+p*u*d-o*g*d-c*u*v+o*m*v,T=f*m*l-h*g*l-f*u*d+n*g*d+h*u*v-n*m*v,y=h*p*l-f*c*l+f*o*d-n*p*d-h*o*v+n*c*v,w=f*c*u-h*p*u-f*o*m+n*p*m+h*o*g-n*c*g,b=r*x+a*T+i*y+s*w;if(0===b)return new t(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/b;return e[0]=x*P,e[1]=(p*m*s-c*g*s-p*i*d+a*g*d+c*i*v-a*m*v)*P,e[2]=(o*g*s-p*u*s+p*i*l-a*g*l-o*i*v+a*u*v)*P,e[3]=(c*u*s-o*m*s-c*i*l+a*m*l+o*i*d-a*u*d)*P,e[4]=T*P,e[5]=(h*g*s-f*m*s+f*i*d-r*g*d-h*i*v+r*m*v)*P,e[6]=(f*u*s-n*g*s-f*i*l+r*g*l+n*i*v-r*u*v)*P,e[7]=(n*m*s-h*u*s+h*i*l-r*m*l-n*i*d+r*u*d)*P,e[8]=y*P,e[9]=(f*c*s-h*p*s-f*a*d+r*p*d+h*a*v-r*c*v)*P,e[10]=(n*p*s-f*o*s+f*a*l-r*p*l-n*a*v+r*o*v)*P,e[11]=(h*o*s-n*c*s-h*a*l+r*c*l+n*a*d-r*o*d)*P,e[12]=w*P,e[13]=(h*p*i-f*c*i+f*a*m-r*p*m-h*a*g+r*c*g)*P,e[14]=(f*o*i-n*p*i-f*a*u+r*p*u+n*a*g-r*o*g)*P,e[15]=(n*c*i-h*o*i+h*a*u-r*c*u-n*a*m+r*o*m)*P,this}static getOrthographicMatrix(e,r,a,i,s,n){return new t(2/(r-e),0,0,-(r+e)/(r-e),0,2/(i-a),0,-(i+a)/(i-a),0,0,-2/(n-s),-(n+s)/(n-s),0,0,0,1)}static getPerspectiveMatrix(e,r,a,i){const s=1/Math.tan(e/2),n=t.identity;if(n.m00=s/r,n.m10=0,n.m20=0,n.m30=0,n.m01=0,n.m11=s,n.m21=0,n.m31=0,n.m02=0,n.m12=0,n.m32=-1,n.m03=0,n.m13=0,n.m33=0,null!=i&&i!==1/0){const e=1/(a-i);n.m22=(i+a)*e,n.m23=2*i*a*e}else n.m22=-1,n.m23=-2*a;return n}static getLookAtMatrix(r,a,i=new e(0,1,0),s=!1){const n=s?e.subVectors(r,a).normalize():e.subVectors(a,r).normalize(),o=e.crossVectors(i.normalize(),n).normalize(),u=e.crossVectors(n,o);return new t(o.x,u.x,n.x,r.x,o.y,u.y,n.y,r.y,o.z,u.z,n.z,r.z,0,0,0,1)}static fromTRS(e,r,a){const i=r.getAxesRadians();return t.multiplyMatrices(t.translationMatrix(e),t.rotationYMatrix(i.y),t.rotationXMatrix(i.x),t.rotationZMatrix(i.z),t.scalingMatrix(a))}static fromQuaternion(e){const r=e.toEulerRadian();return t.multiplyMatrices(t.rotationYMatrix(r.y),t.rotationXMatrix(r.x),t.rotationZMatrix(r.z))}static fromArray(e){return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}log(){}getPrettyLine(){return`--------------------\n${this.m00}, ${this.m01}, ${this.m02}, ${this.m03},\n${this.m10}, ${this.m11}, ${this.m12}, ${this.m13},\n${this.m20}, ${this.m21}, ${this.m22}, ${this.m23},\n${this.m30}, ${this.m31}, ${this.m32}, ${this.m33},\n--------------------`}}const r=0,a=1,i=4,s=1,n=2,o=3,u=0,l=1,h=0,c=1,m=2,d="s",f="o",p="a",g="t",v={[d]:0,[f]:1,[p]:2,[g]:3},x=0,T=0,y=1,w=0,b=1,P=2,S=3,M=4,E=5,C=0,R=1,B=0,D=1,A=2,V=3,_=4,F=5,U=0,I=1,z=2,N=0,L=1,O=2,k=3,G=4,j=5,X={Repeat:0,ClampToEdge:1,MirroredRepeat:2},H={Nearest:0,Linear:1,NearestMipmapNearest:2,NearestMipmapLinear:3,LinearMipmapNearest:4,LinearMipmapLinear:5},W=1,$=0,Y=1,J=2,K=3,q=4,Q=5,Z=0,ee=1,te=0,re=1,ae=2,ie={Position:"aPosition",Color:"aColor",Uv:"aUv",Normal:"aNormal",Tangent:"aTangent",Binormal:"aBinormal",BoneIndices:"aBoneIndices",BoneWeights:"aBoneWeighs",InstancePosition:"aInstancePosition",InstanceScale:"aInstanceScale",InstanceRotation:"aInstanceRotation",InstanceAnimationOffset:"aInstanceAnimationOffset",InstanceVertexColor:"aInstanceVertexColor",InstanceVelocity:"aInstanceVelocity"},se=0,ne=1,oe=2,ue=3,le=4,he=5,ce=6,me=7,de=8,fe=9,pe=10,ge=11,ve=12,xe=13,Te=14,ye=15,we=16,be=17,Pe="uWorldMatrix",Se="uViewMatrix",Me="uProjectionMatrix",Ee="uViewProjectionMatrix",Ce="uNormalMatrix",Re="uInverseWorldMatrix",Be="uInverseViewMatrix",De="uInverseViewProjectionMatrix",Ae="uInverseProjectionMatrix",Ve="uTransposeInverseViewMatrix",_e="uViewPosition",Fe="uViewDirection",Ue="uAspect",Ie="uFov",ze="uGBufferATexture",Ne="uGBufferBTexture",Le="uGBufferCTexture",Oe="uGBufferDTexture",ke="uShadingModelId",Ge="uDepthTexture",je="uMetallic",Xe="uRoughness",He="uJointTexture",We="uBoneCount",$e="uJointTextureColNum",Ye="uTotalFrameCount",Je="uSrcTexture",Ke="uTime",qe="uViewport",Qe="uTargetWidth",Ze="uTargetHeight",et="uAspect",tt="uTexelSize",rt="uNearClip",at="uFarClip",it="uCubeTexture",st="uDirectionalLight",nt="uSpotLight",ot="direction",ut="intensity",lt="color",ht="shadowMapProjectionMatrix",ct="uDirectionalLightShadowMap",mt="uSpotLightShadowMap",dt="position",ft="distance",pt="attenuation",gt="coneCos",vt="penumbraCos",xt="uSkybox",Tt="uRotationOffset",yt="ubCommon",wt="ubTransformations",bt="ubCamera",Pt="ubDirectionalLight",St="ubSpotLight",Mt={BEGIN_MAIN:"BEGIN_MAIN",END_MAIN:"END_MAIN",APPEND_ATTRIBUTES:"APPEND_ATTRIBUTES",APPEND_UNIFORMS:"APPEND_UNIFORMS"},Et={LOCAL_POSITION_POST_PROCESS:"LOCAL_POSITION_POST_PROCESS",INSTANCE_TRANSFORM_PRE_PROCESS:"INSTANCE_TRANSFORM_PRE_PROCESS",WORLD_POSITION_POST_PROCESS:"WORLD_POSITION_POST_PROCESS",VIEW_POSITION_POST_PROCESS:"VIEW_POSITION_POST_PROCESS",OUT_CLIP_POSITION_PRE_PROCESS:"OUT_CLIP_POSITION_PRE_PROCESS",...Mt},Ct={...Mt},Rt={DEPTH_FUNCTIONS:"DEPTH_FUNCTIONS",ENGINE_UNIFORMS:"ENGINE_UNIFORMS",TRANSFORM_VERTEX_UNIFORMS:"TRANSFORM_VERTEX_UNIFORMS",CAMERA_UNIFORMS:"CAMERA_UNIFORMS",PSEUDO_HDR:"PSEUDO_HDR"},Bt={DEFINES:"DEFINES",ATTRIBUTES:"ATTRIBUTES",...Mt,...Rt},Dt=36064,At=36053,Vt="EXT_color_buffer_float",_t={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_NEAREST:9985,LINEAR_MIPMAP_LINEAR:9987};class Ft{constructor(e,t,r){this.elements=new Float32Array(3),this.rawMatrix=null,this.set(e,t,r)}get x(){return this.elements[0]}get y(){return this.elements[1]}get z(){return this.elements[2]}set x(e){this.elements[0]=e}set y(e){this.elements[1]=e}set z(e){this.elements[2]=e}get roll(){return this.elements[2]}get pitch(){return this.elements[0]}get yaw(){return this.elements[1]}getAxes(){return{x:this.elements[0],y:this.elements[1],z:this.elements[2]}}getAxesRadians(){return{x:this.elements[0]*Math.PI/180,y:this.elements[1]*Math.PI/180,z:this.elements[2]*Math.PI/180}}set(e,t,r){return this.elements=new Float32Array([e,t,r]),this}setV(e){return this.elements=new Float32Array([e.x,e.y,e.z]),this}copy(e){return this.set(e.x,e.y,e.z),this}setRadian(e,t,r){const a=Ft.fromRadian(e,t,r);return this.copy(a)}static get zero(){return new Ft(0,0,0)}static fromRadian(e,t,r){return Ft.zero.set(180*e/Math.PI,180*t/Math.PI,180*r/Math.PI)}static fromQuaternion(e){const t=e.toEulerDegree();return new Ft(t.x,t.y,t.z)}static fromMatrix4(e){const t=new Ft(0,0,0);return t.rawMatrix=e,t}setRotationX(e){this.elements[0]=e}setRotationY(e){this.elements[1]=e}setRotationZ(e){this.elements[2]=e}}class Ut{constructor(r){this.parent=null,this.children=[],this.#e=t.identity,this.#t=t.identity,this.#r=t.identity,this.position=e.zero,this.rotation=Ft.zero,this.scale=e.one,this.lookAtTarget=null,this.#a=t.identity,this.actor=r}#e;#t;#r;#a;get childCount(){return this.children.length}get hasChild(){return this.childCount>0}get inverseWorldMatrix(){return this.#e}get worldMatrix(){return this.#t}get normalMatrix(){return this.#a}get localMatrix(){return this.#r}get worldPosition(){return this.#t.position}get worldRight(){return new e(this.#t.m00,this.#t.m10,this.#t.m20).normalize()}get worldUp(){return new e(this.#t.m01,this.#t.m11,this.#t.m21).normalize()}get worldForward(){return new e(this.#t.m02,this.#t.m12,this.#t.m22).normalize()}addChild(e){this.children.push(e)}updateMatrix(){if(this.lookAtTarget){const r=this.actor.type===E?t.getLookAtMatrix(this.position,this.lookAtTarget,e.up,!0):t.getLookAtMatrix(this.position,this.lookAtTarget),a=t.scalingMatrix(this.scale);this.#r=t.multiplyMatrices(r,a)}else{const e=t.translationMatrix(this.position),r=this.rotation.getAxes(),a=t.rotationXMatrix(r.x/180*Math.PI),i=t.rotationYMatrix(r.y/180*Math.PI),s=t.rotationZMatrix(r.z/180*Math.PI),n=t.multiplyMatrices(i,a,s),o=t.scalingMatrix(this.scale);this.#r=t.multiplyMatrices(e,n,o)}this.#t=this.parent?t.multiplyMatrices(this.parent.worldMatrix,this.#r):this.#r,this.#e=this.#t.clone().invert(),this.#a=this.#t.clone().invert().transpose()}setScaling(e){this.scale=e}setRotationX(e){this.rotation.setRotationX(e)}setRotationY(e){this.rotation.setRotationY(e)}setRotationZ(e){this.rotation.setRotationZ(e)}setTranslation(e){this.position=e}lookAt(e){this.lookAtTarget=e}}class It{constructor(e=[]){this.playingAnimationClip=null,this._animationClips=e}get animationClips(){return this._animationClips}setAnimationClips(e){this._animationClips=e}play(e,t=!1){const r=this._animationClips.find((t=>e===t.name));r&&(r.play(),r.loop=t,this.playingAnimationClip=r)}update(e){this.playingAnimationClip&&(this.playingAnimationClip.loop=!0,this.playingAnimationClip.update(e))}}class zt{constructor({name:e="",type:t=w}={}){this.isStarted=!1,this._onStart=[],this._onFixedUpdate=null,this._onUpdate=null,this._enabled=!0,this.name=e,this.transform=new Ut(this),this.type=t||w,this.uuid=([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))),this.animator=new It}set enabled(e){this._enabled=e}get enabled(){return this._enabled}subscribeOnStart(e){this._onStart.push(e)}set onFixedUpdate(e){this._onFixedUpdate=e}set onUpdate(e){this._onUpdate=e}addChild(e){this.transform.addChild(e),e.transform.parent=this.transform}setSize(e,t){}#i({gpu:e}){this.isStarted||(this.isStarted=!0,this.start({gpu:e}))}updateTransform(e){this.transform.updateMatrix()}start({gpu:e}){this._onStart.forEach((t=>{t({actor:this,gpu:e})}))}fixedUpdate({gpu:e,fixedTime:t,fixedDeltaTime:r}){this.#i({gpu:e}),this.animator&&this.animator.update(r),this._onFixedUpdate&&this._onFixedUpdate({actor:this,gpu:e,fixedTime:t,fixedDeltaTime:r})}update({gpu:e,time:t,deltaTime:r}){this.#i({gpu:e}),this._onUpdate&&this._onUpdate({actor:this,gpu:e,time:t,deltaTime:r})}beforeRender({gpu:e}){}}class Nt{constructor(e=0,t=0,r=0,a=1){this.elements=new Float32Array(4),this.set(e,t,r,a)}get r(){return this.elements[0]}get g(){return this.elements[1]}get b(){return this.elements[2]}get a(){return this.elements[3]}get r255(){return 255*this.elements[0]}get g255(){return 255*this.elements[1]}get b255(){return 255*this.elements[2]}get a255(){return 255*this.elements[3]}get rgbArray(){return[this.r,this.g,this.b]}set r(e){this.elements[0]=e}set g(e){this.elements[1]=e}set b(e){this.elements[2]=e}set a(e){this.elements[3]=e}set(e,t,r,a){this.elements=new Float32Array([e,t,r,a])}multiplyScalar(e,t=!1){return this.elements[0]*=e,this.elements[1]*=e,this.elements[2]*=e,t&&(this.elements[3]*=e),this}getRGB(){return{r:this.r255,g:this.g255,b:this.b255}}getHexCoord(e=!0){const t=this.getRGB(),r=t.r.toString(16).padStart(2,"0"),a=t.g.toString(16).padStart(2,"0"),i=t.b.toString(16).padStart(2,"0");return e?`#${r}${a}${i}`:`${r}${a}${i}`}static get white(){return new Nt(1,1,1,1)}static get black(){return new Nt(0,0,0,1)}static get green(){return new Nt(0,0,1,1)}static fromRGB(e,t,r,a=255){return new Nt(e/255,t/255,r/255,a/255)}static fromArray(e){return new Nt(e[0],e[1],e[2],e[3]?e[3]:1)}static fromHex(e){const t="#"===e.slice(0,1)?e.slice(1):e,r=t.slice(0,2),a=t.slice(2,4),i=t.slice(4,6);return new Nt(Number.parseInt(r,16)/255,Number.parseInt(a,16)/255,Number.parseInt(i,16)/255,1)}}class Lt extends zt{constructor({name:e,intensity:r,color:a,lightType:i}){super({name:e,type:S}),this.intensity=1,this.color=Nt.white,this.castShadow=!1,this.shadowCamera=null,this.shadowMap=null,this.lightViewProjectionMatrix=t.identity,this.shadowMapProjectionMatrix=t.identity,this.intensity=r,this.color=a,this.lightType=i}setSize(e,t){super.setSize(e,t)}setShadowSize(){throw"should implementation"}updateShadowCamera(){if(!this.shadowCamera)return;const e=new t(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);this.lightViewProjectionMatrix=t.multiplyMatrices(this.shadowCamera.projectionMatrix.clone(),this.shadowCamera.viewMatrix.clone()),this.shadowMapProjectionMatrix=t.multiplyMatrices(e,this.lightViewProjectionMatrix.clone())}}class Ot{constructor(e,t,r,a){this.elements=new Float32Array(4),this.set(e,t,r,a)}static get one(){return new Ot(1,1,1,1)}static get zero(){return new Ot(0,0,0,0)}get x(){return this.elements[0]}get y(){return this.elements[1]}get z(){return this.elements[2]}get w(){return this.elements[3]}set x(e){this.elements[0]=e}set y(e){this.elements[1]=e}set z(e){this.elements[2]=e}set w(e){this.elements[3]=e}set(e,t,r,a){this.elements=new Float32Array([e,t,r,a])}multiplyMatrix4(e){const t=this.x,r=this.y,a=this.z,i=this.w,s=e.m00*t+e.m01*r+e.m02*a+e.m03*i,n=e.m10*t+e.m11*r+e.m12*a+e.m13*i,o=e.m20*t+e.m21*r+e.m22*a+e.m23*i,u=e.m30*t+e.m31*r+e.m32*a+e.m33*i;return this.x=s,this.y=n,this.z=o,this.w=u,this}}class kt{get glObject(){throw"[GLObject.glObject] should implementation"}bind(){throw"[GLObject.bind] should implementation"}unbind(){throw"[GLObject.unbind] should implementation"}dispose(){throw"[GLObject.dispose] should implementation"}}function Gt(e,t,r){const a=e.createShader(t);if(!a)throw new Error("invalid shader");e.shaderSource(a,r),e.compileShader(a);const i=e.getShaderInfoLog(a);if(i&&i.length>0)throw jt.buildErrorInfo(i,r,"[Shader] shader has error");return a}class jt extends kt{constructor({gpu:e,vertexShader:t,fragmentShader:r,transformFeedbackVaryings:a}){super(),this.gpu=e;const{gl:i}=e,s=i.createProgram();if(!s)throw new Error("invalid program");const n=Gt(i,i.VERTEX_SHADER,t);i.attachShader(s,n);const o=Gt(i,i.FRAGMENT_SHADER,r);i.attachShader(s,o),a&&a.length>0&&i.transformFeedbackVaryings(s,a,i.SEPARATE_ATTRIBS),i.linkProgram(s);const u=i.getProgramInfoLog(s);if(u&&u.length>0)throw u;this.program=s}get glObject(){return this.program}dispose(){this.gpu.gl.deleteShader(this.program),this.program=null}static buildErrorInfo(e,t,r){return`${r}\n            \n---\n\n${e}\n\n---\n            \n${t.split("\n").map(((e,t)=>`${t+1}: ${e}`)).join("\n")}       \n`}}const Xt={[Rt.DEPTH_FUNCTIONS]:"float viewZToLinearDepth(float z, float near, float far) {\r\n    return (z + near) / (near - far);\r\n}\n\nfloat perspectiveDepthToLinearDepth(float rawDepth, float near, float far) {\r\n    float nz = near * rawDepth;\r\n    return -nz / (far * (rawDepth - 1.) - nz);\r\n}\n\nfloat perspectiveDepthToEyeDepth(float rawDepth, float near, float far) {\r\n    float depth = perspectiveDepthToLinearDepth(rawDepth, near, far);\r\n    return mix(near, far, depth);\r\n}\r\n\nvec3 reconstructWorldPositionFromDepth(vec2 screenUV, float rawDepth, mat4 inverseViewProjectionMatrix) {\r\n    \n    vec4 clipPos = vec4(screenUV * 2. - 1., rawDepth * 2. - 1., 1.);\r\n    vec4 worldPos = inverseViewProjectionMatrix * clipPos;\r\n    return worldPos.xyz / worldPos.w;\r\n}\n\nvec3 reconstructViewPositionFromDepth(vec2 screenUV, float rawDepth, mat4 inverseProjectionMatrix) {\r\n    \n    vec4 clipPos = vec4(screenUV * 2. - 1., rawDepth * 2. - 1., 1.);\r\n    vec4 viewPos = inverseProjectionMatrix * clipPos;\r\n    return viewPos.xyz / viewPos.w;\r\n}\n\nfloat sampleRawDepthByViewPosition(\r\n    sampler2D depthTexture,\r\n    vec3 viewPosition,\r\n    mat4 projectionMatrix,\r\n    vec3 offset\r\n) {\r\n    vec4 offsetPosition = vec4(viewPosition + offset, 1.);\r\n    vec4 projectedPosition = projectionMatrix * offsetPosition;\r\n    vec3 projectedPositionNDC = projectedPosition.xyz / projectedPosition.w;\r\n    vec2 projectedPositionUV = projectedPositionNDC.xy * .5 + .5;\r\n    \n    return textureLod(depthTexture, projectedPositionUV, 0.).x;\r\n}",[Rt.ENGINE_UNIFORMS]:"layout (std140) uniform ubCommon {\r\n    float uTime;\r\n    vec4 uViewport;\r\n};",[Rt.TRANSFORM_VERTEX_UNIFORMS]:"layout (std140) uniform ubTransformations {\r\n    mat4 uWorldMatrix;\r\n    mat4 uViewMatrix;\r\n    mat4 uProjectionMatrix;\r\n    mat4 uNormalMatrix;\r\n    mat4 uInverseWorldMatrix;\n\n    mat4 uViewProjectionMatrix;\r\n    mat4 uInverseViewMatrix;\r\n    mat4 uInverseProjectionMatrix;\r\n    mat4 uInverseViewProjectionMatrix;\r\n    mat4 uTransposeInverseViewMatrix;\r\n};",[Rt.CAMERA_UNIFORMS]:"layout (std140) uniform ubCamera {\r\n    vec3 uViewPosition;\r\n    vec3 uViewDirection;\r\n    float uNearClip;\r\n    float uFarClip;\r\n    float uAspect;\r\n    float uFov;\r\n};",[Rt.PSEUDO_HDR]:"vec4 encodePseudoHDR(vec3 color) {\r\n    float base = .25;\r\n    float l = max(max(color.r, color.g), max(color.b, base));\r\n    return vec4(\r\n        color.r / l,\r\n        color.g / l,\r\n        color.b / l,\r\n        base / l\r\n    );\r\n}\n\nvec4 decodePseudoHDR(vec4 encodedColor) {\r\n    float base = .25;\r\n    float rl = encodedColor.a;\r\n    return vec4(\r\n        (encodedColor.r / rl) * base,\r\n        (encodedColor.g / rl) * base,\r\n        (encodedColor.b / rl) * base,\r\n        rl * base\r\n    );\r\n}"},Ht=({receiveShadow:e,isSkinning:t,gpuSkinning:r,useNormalMap:a,useEnvMap:i,useVertexColor:s,useAlphaTest:n,isInstancing:o,useInstanceLookDirection:u})=>{const l=[];return e&&l.push("#define USE_RECEIVE_SHADOW"),t&&(r?l.push("#define USE_SKINNING_GPU"):l.push("#define USE_SKINNING_CPU")),a&&l.push("#define USE_NORMAL_MAP"),i&&l.push("#define USE_ENV_MAP"),s&&l.push("#define USE_VERTEX_COLOR"),n&&l.push("#define USE_ALPHA_TEST"),o&&l.push("#define USE_INSTANCING"),u&&l.push("#define USE_INSTANCE_LOOK_DIRECTION"),l},Wt=(e,t,r,a)=>{let i=e;return i=i.replaceAll(new RegExp(`#pragma ${Bt.DEFINES}`,"g"),(()=>Ht(r).join("\n"))),i=i.replaceAll(new RegExp(`#pragma ${Bt.ATTRIBUTES}`,"g"),(()=>{const e=(e=>[...e].sort(((e,t)=>e.location-t.location)).map((({location:e,size:t,name:r,dataType:a})=>{let i;switch(a){case Float32Array:switch(t){case 1:i="float";break;case 2:i="vec2";break;case 3:i="vec3";break;case 4:i="vec4";break;default:throw"[buildVertexAttributeLayouts] invalid attribute float"}break;case Uint16Array:switch(t){case 1:i="uint";break;case 2:i="uvec2";break;case 3:i="uvec3";break;case 4:i="uvec4";break;default:throw"[buildVertexAttributeLayouts] invalid attribute int"}break;default:throw"[buildVertexAttributeLayouts] invalid attribute data type"}return`layout(location = ${e}) in ${i} ${r};`})))(t);return e.join("\n")})),Object.values(Et).forEach((e=>{const t=e;i=i.replaceAll(new RegExp(`#pragma ${t}`,"g"),(()=>a[t]&&a[t]||""))})),Object.values(Rt).forEach((e=>{const t=e;i=i.replaceAll(new RegExp(`#pragma ${t}`,"g"),(()=>Xt[t]))})),i};class $t{constructor(...e){this.uniformBlocks=[],this.data=[];for(let t=0;t<e.length;t++)for(let r=0;r<e[t].length;r++){const a=e[t][r],i=this.data.findIndex((e=>e.name===a.name));i<0?this.data.push(a):this.data[i].value=a.value}}find(e){return this.data.find((t=>t.name===e))}addValue(e,t,r){this.data.push({name:e,type:t,value:r})}setValue(e,t,r=!1){const a=this.find(e);a&&(a.type===fe?t.forEach((e=>{const t=a.value.findIndex((t=>t.name===e.name));t>=0&&(a.value[t].value=e.value)})):a.type===pe?t.forEach(((e,t)=>{e.forEach((e=>{const r=a.value[t].findIndex((t=>t.name===e.name));r>=0&&(a.value[t][r].value=e.value)}))})):a.value=t)}setValues(){}addUniformBlock(e,t,r){this.uniformBlocks.push({blockIndex:e,uniformBufferObject:t,data:r})}}const Yt=0;class Jt{constructor({name:e="",type:r=Yt,vertexShader:a="",fragmentShader:s="",depthFragmentShader:n,rawVertexShader:o,rawFragmentShader:l,vertexShaderGenerator:d,fragmentShaderGenerator:p,depthFragmentShaderGenerator:x,vertexShaderModifier:T,fragmentShaderModifier:y,primitiveType:w,depthTest:b=!0,depthWrite:P=!0,skipDepthPrePass:S=!1,depthFuncType:M=u,alphaTest:E=null,faceSide:C=U,receiveShadow:R=!1,blendType:B=h,renderQueue:D,useNormalMap:A=null,isSkinning:V=null,gpuSkinning:_=null,jointNum:F=null,isInstancing:I=!1,useInstanceLookDirection:z=!1,useVertexColor:N=!1,useEnvMap:L=!1,queue:O,uniforms:k=[],uniformBlockNames:G=[],depthUniforms:j=[],showLog:X=!1}){if(this.name="",this.type=Yt,this.shader=null,this.uniformBlockNames=[],this.isAddedUniformBlock=!1,this.depthFragmentShader=null,this.rawVertexShader=null,this.rawFragmentShader=null,this.rawDepthFragmentShader=null,this.vertexShaderGenerator=null,this.fragmentShaderGenerator=null,this.depthFragmentShaderGenerator=null,this._vertexShaderModifier={},this._fragmentShaderModifier={},this.boundUniformBufferObjects=!1,this.name=e||"",this.type=r,this.vertexShader=a||"",this.fragmentShader=s||"",n&&(this.depthFragmentShader=n),o&&(this.rawVertexShader=o),l&&(this.rawFragmentShader=l),d&&(this.vertexShaderGenerator=d),p&&(this.fragmentShaderGenerator=p),x&&(this.depthFragmentShaderGenerator=x),T&&(this._vertexShaderModifier=T),y&&(this._fragmentShaderModifier=y),this.primitiveType=w||i,this.blendType=B||h,this.depthTest=!!b,this.depthWrite=!!P,this.depthFuncType=M,this.skipDepthPrePass=!!S,this.alphaTest="number"==typeof E?E:null,this.faceSide=C||U,this.receiveShadow=!!R,D)this.renderQueue=D;else switch(this.blendType){case h:this.renderQueue=v[f];break;case c:case m:this.renderQueue=v[g]}this.renderQueue,this.isSkinning=!!V,this.gpuSkinning=!!_,this.jointNum="number"==typeof F?F:null,this.isInstancing=!!I,this.useInstanceLookDirection=!!z,this.useVertexColor=!!N,this.useNormalMap=!!A,this.useEnvMap=!!L;const H=[{name:Re,type:se,value:t.identity},{name:Ke,type:ge,value:0},...this.alphaTest?[{name:"uAlphaTestThreshold",type:ge,value:this.alphaTest}]:[]],W=(this.receiveShadow,[]);this.queue=O||null,this.uniforms=new $t(H,W,k),this.depthUniforms=new $t(H,j),this.uniformBlockNames=G,this.showLog=X}get isCompiledShader(){return!!this.shader}get vertexShaderModifier(){return this._vertexShaderModifier}get fragmentShaderModifier(){return this._fragmentShaderModifier}get useAlphaTest(){return null!==this.alphaTest}start({gpu:e,attributeDescriptors:t}){!this.depthFragmentShader&&this.depthFragmentShaderGenerator&&(this.depthFragmentShader=this.depthFragmentShaderGenerator());const r={receiveShadow:!!this.receiveShadow,isSkinning:!!this.isSkinning,gpuSkinning:!!this.gpuSkinning,useNormalMap:!!this.useNormalMap,useEnvMap:!!this.useEnvMap,useReceiveShadow:!!this.receiveShadow,useVertexColor:!!this.useVertexColor,isInstancing:!!this.isInstancing,useAlphaTest:!!this.alphaTest,useInstanceLookDirection:!!this.useInstanceLookDirection};if(!this.rawVertexShader){!this.vertexShader&&this.vertexShaderGenerator&&(this.vertexShader=this.vertexShaderGenerator({attributeDescriptors:t,isSkinning:!!this.isSkinning,jointNum:this.jointNum,gpuSkinning:this.gpuSkinning,isInstancing:this.isInstancing,useInstanceLookDirection:this.useInstanceLookDirection}));const e=Wt(this.vertexShader,t,r,this.vertexShaderModifier);this.rawVertexShader=e}if(!this.rawFragmentShader){!this.fragmentShader&&this.fragmentShaderGenerator&&(this.fragmentShader=this.fragmentShaderGenerator({attributeDescriptors:t}));const e=((e,t,r)=>{let a=e;return a=a.replaceAll(new RegExp(`#pragma ${Bt.DEFINES}`,"g"),(()=>Ht(t).join("\n"))),Object.values(Ct).forEach((e=>{const t=e;a=a.replaceAll(new RegExp(`#pragma ${t}`,"g"),(()=>r[t]&&r[t]||""))})),Object.values(Rt).forEach((e=>{const t=e;a=a.replaceAll(new RegExp(`#pragma ${t}`,"g"),(()=>Xt[t]))})),a})(this.fragmentShader,r,this.fragmentShaderModifier);this.rawFragmentShader=e}this.showLog,this.shader=new jt({gpu:e,vertexShader:this.rawVertexShader,fragmentShader:this.rawFragmentShader})}updateUniforms(){}}class Kt{constructor({name:e,data:t,location:r,size:a,offset:i=0,usageType:s=te,divisor:n=0}){this.name=e,this.data=t,this.location=r||0,this.size=a,this.offset=i||0,this.usageType=s||te,this.divisor=n||0}getDescriptor(){return{name:this.name,location:this.location,size:this.size,dataType:this.data.constructor}}}class qt extends kt{constructor({gpu:e,indices:t}){super(),this.gpu=e;const r=this.gpu.gl;this.ibo=r.createBuffer(),this.bind(),r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array(t),r.STATIC_DRAW)}get glObject(){return this.ibo}bind(){const e=this.gpu.gl;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.ibo)}unbind(){const e=this.gpu.gl;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)}}function Qt(e){switch(e){case _t.NEAREST:return H.Nearest;case _t.LINEAR:return H.Linear;case _t.NEAREST_MIPMAP_NEAREST:return H.NearestMipmapNearest;case _t.LINEAR_MIPMAP_NEAREST:return H.LinearMipmapNearest;case _t.NEAREST_MIPMAP_LINEAR:return H.NearestMipmapLinear;case _t.LINEAR_MIPMAP_LINEAR:return H.LinearMipmapLinear;default:throw"[resolveGLEnumTextureFilterType] invalid glTextureFilter"}}function Zt(e){switch(e){case WebGLRenderingContext.CLAMP_TO_EDGE:return X.ClampToEdge;case WebGLRenderingContext.REPEAT:return X.Repeat;case WebGLRenderingContext.MIRRORED_REPEAT:return X.MirroredRepeat;default:throw"[resolveGLEnumTextureWrapType] invalid glTextureWrap"}}class er extends kt{constructor({gpu:e,img:t,type:r=N,width:a,height:i,mipmap:s=!1,minFilter:n=H.Nearest,magFilter:o=H.Nearest,wrapS:u=X.Repeat,wrapT:l=X.Repeat,flipY:h,depthPrecision:c}){super(),this.img=null,this.gpu=e;const m=this.gpu.gl;this.img=t||null,this.type=r,this.mipmap=s,this.minFilter=n,this.magFilter=o,this.wrapS=u,this.wrapT=l,this.width=a,this.height=i,this.flipY=!(!this.img||void 0!==h)||!!h,this.depthPrecision=this.type===L&&void 0!==c?c:void 0,this.img,this.img;const d=m.createTexture();if(!d)throw"[Texture.constructor] invalid texture";switch(this.texture=d,m.bindTexture(m.TEXTURE_2D,this.texture),s&&m.generateMipmap(m.TEXTURE_2D),this.type){case N:case O:case k:case G:case j:switch(this.minFilter){case H.Nearest:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);break;case H.Linear:default:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.LINEAR)}switch(this.magFilter){case H.Nearest:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);break;case H.Linear:default:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.LINEAR)}break;case L:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);break;default:throw"[Texture.constructor] invalid texture type"}switch(u){case X.ClampToEdge:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);break;case X.Repeat:default:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.REPEAT)}switch(l){case X.ClampToEdge:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);break;case X.Repeat:default:m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.REPEAT)}switch(this.flipY?m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,!0):m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,!1),this.type){case N:a&&i?this.img?m.texImage2D(m.TEXTURE_2D,0,m.RGBA,a,i,0,m.RGBA,m.UNSIGNED_BYTE,this.img):m.texImage2D(m.TEXTURE_2D,0,m.RGBA,a,i,0,m.RGBA,m.UNSIGNED_BYTE,null):this.img&&m.texImage2D(m.TEXTURE_2D,0,m.RGBA,m.RGBA,m.UNSIGNED_BYTE,this.img);break;case L:a&&i?this.img?m.texImage2D(m.TEXTURE_2D,0,this.depthPrecision===W?m.DEPTH_COMPONENT32F:m.DEPTH_COMPONENT16,a,i,0,m.DEPTH_COMPONENT,this.depthPrecision===W?m.FLOAT:m.UNSIGNED_SHORT,this.img):m.texImage2D(m.TEXTURE_2D,0,this.depthPrecision===W?m.DEPTH_COMPONENT32F:m.DEPTH_COMPONENT16,a,i,0,m.DEPTH_COMPONENT,this.depthPrecision===W?m.FLOAT:m.UNSIGNED_SHORT,null):this.img&&m.texImage2D(m.TEXTURE_2D,0,this.depthPrecision===W?m.DEPTH_COMPONENT32F:m.DEPTH_COMPONENT16,m.DEPTH_COMPONENT,this.depthPrecision===W?m.FLOAT:m.UNSIGNED_SHORT,this.img);break;case O:a&&i?this.img?m.texImage2D(m.TEXTURE_2D,0,m.RGBA16F,a,i,0,m.RGBA,m.FLOAT,this.img):m.texImage2D(m.TEXTURE_2D,0,m.RGBA16F,a,i,0,m.RGBA,m.FLOAT,null):this.img&&m.texImage2D(m.TEXTURE_2D,0,m.RGBA16F,m.RGBA,m.FLOAT,this.img);break;case k:a&&i?this.img?m.texImage2D(m.TEXTURE_2D,0,m.RGBA32F,a,i,0,m.RGBA,m.FLOAT,this.img):m.texImage2D(m.TEXTURE_2D,0,m.RGBA32F,a,i,0,m.RGBA,m.FLOAT,null):this.img&&m.texImage2D(m.TEXTURE_2D,0,m.RGBA32F,m.RGBA,m.FLOAT,this.img);break;case G:a&&i?this.img?m.texImage2D(m.TEXTURE_2D,0,m.R11F_G11F_B10F,a,i,0,m.RGB,m.FLOAT,this.img):m.texImage2D(m.TEXTURE_2D,0,m.R11F_G11F_B10F,a,i,0,m.RGB,m.FLOAT,null):this.img&&m.texImage2D(m.TEXTURE_2D,0,m.R11F_G11F_B10F,m.RGB,m.FLOAT,this.img);break;case j:a&&i?this.img?m.texImage2D(m.TEXTURE_2D,0,m.R16F,a,i,0,m.RED,m.FLOAT,this.img):m.texImage2D(m.TEXTURE_2D,0,m.R16F,a,i,0,m.RED,m.FLOAT,null):this.img&&m.texImage2D(m.TEXTURE_2D,0,m.R16F,m.RED,m.FLOAT,this.img);break;default:throw"[Texture.constructor] invalid type"}m.bindTexture(m.TEXTURE_2D,null)}get glObject(){return this.texture}setSize(e,t){this.width=Math.floor(e),this.height=Math.floor(t);const r=this.gpu.gl;switch(r.bindTexture(r.TEXTURE_2D,this.texture),this.type){case N:this.img?r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e,t,0,r.RGBA,r.UNSIGNED_BYTE,this.img):r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e,t,0,r.RGBA,r.UNSIGNED_BYTE,null);break;case L:this.img?r.texImage2D(r.TEXTURE_2D,0,this.depthPrecision===W?r.DEPTH_COMPONENT32F:r.DEPTH_COMPONENT16,e,t,0,r.DEPTH_COMPONENT,this.depthPrecision===W?r.FLOAT:r.UNSIGNED_SHORT,this.img):r.texImage2D(r.TEXTURE_2D,0,this.depthPrecision===W?r.DEPTH_COMPONENT32F:r.DEPTH_COMPONENT16,e,t,0,r.DEPTH_COMPONENT,this.depthPrecision===W?r.FLOAT:r.UNSIGNED_SHORT,null);break;case O:this.img?r.texImage2D(r.TEXTURE_2D,0,r.RGBA16F,e,t,0,r.RGBA,r.FLOAT,this.img):r.texImage2D(r.TEXTURE_2D,0,r.RGBA16F,e,t,0,r.RGBA,r.FLOAT,null);break;case k:this.img?r.texImage2D(r.TEXTURE_2D,0,r.RGBA32F,e,t,0,r.RGBA,r.FLOAT,this.img):r.texImage2D(r.TEXTURE_2D,0,r.RGBA32F,e,t,0,r.RGBA,r.FLOAT,null);break;case G:this.img?r.texImage2D(r.TEXTURE_2D,0,r.R11F_G11F_B10F,e,t,0,r.RGB,r.FLOAT,this.img):r.texImage2D(r.TEXTURE_2D,0,r.R11F_G11F_B10F,e,t,0,r.RGB,r.FLOAT,null);break;case j:this.img?r.texImage2D(r.TEXTURE_2D,0,r.R16F,e,t,0,r.RED,r.FLOAT,this.img):r.texImage2D(r.TEXTURE_2D,0,r.R16F,e,t,0,r.RED,r.FLOAT,null);break;default:throw"[Texture.setSize] invalid type"}r.bindTexture(r.TEXTURE_2D,null)}update({width:e,height:t,data:r}){this.width=e,this.height=t;const a=this.gpu.gl;if(a.bindTexture(a.TEXTURE_2D,this.texture),this.type!==k)throw"[Texture.update] invalid type";a.texImage2D(a.TEXTURE_2D,0,a.RGBA32F,e,t,0,a.RGBA,a.FLOAT,r),a.bindTexture(a.TEXTURE_2D,null)}generate(){return new er({gpu:this.gpu,img:this.img,type:this.type,width:this.width,height:this.height,mipmap:this.mipmap,minFilter:this.minFilter,magFilter:this.magFilter,wrapS:this.wrapS,wrapT:this.wrapT,flipY:this.flipY})}}async function tr(e){return new Promise(((t,r)=>{const a=new Image;a.onload=()=>{t(a)},a.onerror=()=>{r(a)},a.src=e}))}class rr extends kt{constructor(e,t,r,a,i,s,n,o,u){super();const l=e.gl;this.width=t,this.height=r,this.maxLodLevel=Math.log2(Math.max(this.width,this.height)),this.#s=l.createTexture(),l.bindTexture(l.TEXTURE_CUBE_MAP,this.#s),l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,!1),l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,a),l.texImage2D(l.TEXTURE_CUBE_MAP_NEGATIVE_X,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,i),l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_Y,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,s),l.texImage2D(l.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,n),l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_Z,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,o),l.texImage2D(l.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,u),l.texParameteri(l.TEXTURE_CUBE_MAP,l.TEXTURE_MIN_FILTER,l.LINEAR_MIPMAP_LINEAR),l.texParameteri(l.TEXTURE_CUBE_MAP,l.TEXTURE_MAG_FILTER,l.LINEAR),l.texParameteri(l.TEXTURE_CUBE_MAP,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_CUBE_MAP,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)}#s;get glObject(){return this.#s}}function ar(e,t,r,a,i,s,n){return new rr(e,t.width,t.height,t,r,a,i,s,n)}function ir(e,t){const r=[];switch(e){case ge:case xe:r.push(t),r.push(0),r.push(0),r.push(0);break;case be:r.push(t?1:0),r.push(0),r.push(0),r.push(0);break;case le:case ce:r.push(...t.elements),r.push(0);break;case me:case se:case Te:r.push(...t.elements);break;default:throw`invalid uniform type: ${e}`}return r}class sr extends kt{constructor(e,t,r,a,i,s,n,o){super(),this.gpu=e,this.blockName=t,this.blockSize=r,this.dataSize=n,this.bindingPoint=o;const{gl:u}=this.gpu;this.ubo=u.createBuffer(),this.bind(),u.bufferData(u.UNIFORM_BUFFER,this.dataSize,u.DYNAMIC_DRAW),this.unbind(),u.bindBufferBase(u.UNIFORM_BUFFER,this.bindingPoint,this.ubo),this.variableInfo=a.map(((e,t)=>({name:e,index:i[t],offset:s[t]})))}get glObject(){return this.ubo}bind(){const{gl:e}=this.gpu;e.bindBuffer(e.UNIFORM_BUFFER,this.ubo)}unbind(){const{gl:e}=this.gpu;e.bindBuffer(e.UNIFORM_BUFFER,null)}updateBufferData(e,t){const r=this.variableInfo.find((t=>t.name===e));if(!r)throw new Error(`variableName ${e} not found`);this.bind(),this.gpu.gl.bufferSubData(this.gpu.gl.UNIFORM_BUFFER,r.offset,t,0),this.unbind()}updateUniformValue(e,t,r){switch(t){case fe:r.forEach((t=>{const r=`${e}.${t.name}`,a=ir(t.type,t.value);this.updateBufferData(r,new Float32Array(a))}));break;case pe:r.forEach(((t,r)=>{t.forEach((t=>{const a=`${e}[${r}].${t.name}`,i=ir(t.type,t.value);this.updateBufferData(a,new Float32Array(i))}))}));break;default:if(Array.isArray(r)){const t=[];r.forEach((e=>{"number"==typeof e?(t.push(e),t.push(0),t.push(0),t.push(0)):"boolean"==typeof e?(t.push(e?1:0),t.push(0),t.push(0),t.push(0)):t.push(...e.elements)})),this.updateBufferData(e,new Float32Array(t))}else this.updateBufferData(e,"number"==typeof r?new Float32Array([r]):r.elements)}}}const nr=(e="black")=>{const t=document.createElement("canvas"),r=t.getContext("2d");if(!r)throw"invalid context";return t.width=1,t.height=1,r.fillStyle=e,r.fillRect(0,0,1,1),t};class or extends kt{constructor({gpu:e,attributes:t=[],indices:r}){super(),this.vboList=[],this.ibo=null,this.gpu=e;const a=this.gpu.gl.createVertexArray();if(!a)throw"invalid vao";this.vao=a,this.bind(),t.forEach((e=>{this.setAttribute(e)})),r&&(this.ibo=new qt({gpu:e,indices:r})),this.unbind(),this.ibo&&this.ibo.unbind()}get hasIndices(){return!!this.ibo}get glObject(){return this.vao}bind(){const{gl:e}=this.gpu;e.bindVertexArray(this.glObject)}unbind(){const{gl:e}=this.gpu;e.bindVertexArray(null)}setAttribute(e){const t=this.gpu.gl;t.bindVertexArray(this.vao);const{name:r,data:a,size:i,location:s,usageType:n,divisor:o}=e,u=null!=s?s:this.vboList.length,l=t.createBuffer();if(!l)throw"invalid vbo";t.bindBuffer(t.ARRAY_BUFFER,l);const h=((e,t)=>{switch(t){case te:return e.STATIC_DRAW;case re:return e.DYNAMIC_DRAW;case ae:return e.DYNAMIC_COPY;default:throw"[getAttributeUsage] invalid usage"}})(t,n);switch(t.bufferData(t.ARRAY_BUFFER,a,h),t.enableVertexAttribArray(u),a.constructor){case Float32Array:t.vertexAttribPointer(u,i,t.FLOAT,!1,0,0);break;case Uint16Array:t.vertexAttribIPointer(u,i,t.UNSIGNED_SHORT,0,0);break;default:throw"[VertexArrayObject.setAttribute] invalid data type"}o&&t.vertexAttribDivisor(u,o),this.vboList.push({name:r,vbo:l,usage:h,location:s,size:i,divisor:o}),t.bindVertexArray(null),t.bindBuffer(t.ARRAY_BUFFER,null)}updateBufferData(e,t){const{gl:r}=this.gpu,a=this.findVertexBufferObjectInfo(e);r.bindBuffer(r.ARRAY_BUFFER,a.vbo),r.bufferSubData(r.ARRAY_BUFFER,0,t),r.bindBuffer(r.ARRAY_BUFFER,null)}replaceBuffer(e,t){const{gl:r}=this.gpu,a=this.findVertexBufferObjectInfoIndex(e),{location:i,size:s}=this.vboList[a];this.bind(),r.bindBuffer(r.ARRAY_BUFFER,t),r.enableVertexAttribArray(i),r.vertexAttribPointer(i,s,r.FLOAT,!1,0,0),r.bindBuffer(r.ARRAY_BUFFER,null),this.unbind(),this.vboList[a].vbo=t}getBuffers(){return this.vboList.map((({vbo:e})=>e))}findVertexBufferObjectInfo(e){const t=this.vboList.find((({name:t})=>e===t));if(!t)throw"invalid target vbo";return t}findVertexBufferObjectInfoIndex(e){for(let t=0;t<this.vboList.length;t++)if(e===this.vboList[t].name)return t;throw"invalid target vbo"}findBuffer(e){const t=this.findVertexBufferObjectInfo(e);if(!t)throw"invalid name";return t.vbo}}class ur{constructor({gpu:e,attributes:t,indices:r,drawCount:a,instanceCount:i=null}){this.attributes=[],this.vertexCount=0,this.indices=null,this.gpu=e,this.instanceCount="number"==typeof i?i:null,this.drawCount=a,r&&(this.indices=r),t.forEach(((e,t)=>{e.location=t,e.divisor=e.divisor||0})),this.vertexArrayObject=new or({gpu:e,attributes:[],indices:this.indices}),t.filter((e=>Object.keys(e).length>0)).forEach((e=>{this.setAttribute(e)}))}setAttribute(e){const t=e.location?e.location:this.attributes.length,r=new Kt({name:e.name,data:e.data,location:t,size:e.size,offset:e.offset,usageType:e.usageType||te,divisor:e.divisor});this.attributes.push(r),this.vertexArrayObject.setAttribute(r)}#n({gpu:e}){this.attributes.forEach(((e,t)=>{e.location=t,e.divisor=0})),this.vertexArrayObject=new or({gpu:e,attributes:this.attributes,indices:this.indices})}start(){this.vertexArrayObject||this.#n({gpu:this.gpu})}update(){this.vertexArrayObject||this.#n({gpu:this.gpu})}updateAttribute(e,t){const r=this.attributes.find((({name:t})=>t===e));if(!r)throw"invalid attribute";r.data=t,this.vertexArrayObject.updateBufferData(e,r.data)}getAttribute(e){return this.attributes.find((({name:t})=>t===e))}getAttributeDescriptors(){return this.attributes.map((e=>e.getDescriptor()))}static createTangentsAndBinormals(t){const r=[],a=[];for(let i=0;i<t.length/3;i++){const s=t[3*i+0],n=t[3*i+1],o=t[3*i+2],u=new e(s,n,o),l=e.getTangent(u),h=e.getBinormalFromTangent(l,u);r.push(...l.elements),a.push(...h.elements)}return{tangents:r,binormals:a}}static createBinormals(t,r){const a=[];for(let i=0;i<t.length/3;i++){const s=new e(t[3*i+0],t[3*i+1],t[3*i+2]),n=new e(r[3*i+0],r[3*i+1],r[3*i+2]),o=e.getBinormalFromTangent(n,s);a.push(...o.elements)}return a}}class lr extends zt{constructor({name:e,geometry:t,material:r,materials:a=[],depthMaterial:i,actorType:s,castShadow:n=!1,instanced:o=!1,autoGenerateDepthMaterial:u=!0}){super({name:e,type:s||b}),this.materials=[],this.geometry=t,this.materials=r?[r]:a||[],this.depthMaterial=i||null,this.castShadow=!!n,this.instanced=!!o,this.autoGenerateDepthMaterial=!!u}get material(){return this.hasMaterials,this.mainMaterial}set material(e){this.materials=[e]}get mainMaterial(){return this.materials[0]}get hasMaterials(){return this.materials.length>1}start({gpu:e}){super.start({gpu:e}),this.geometry.start(),this.materials.forEach((t=>{t.isCompiledShader||t.start({gpu:e,attributeDescriptors:this.geometry.getAttributeDescriptors()})})),!this.depthMaterial&&this.autoGenerateDepthMaterial&&(this.depthMaterial=new Jt({name:`${this.material.name}/depth`,vertexShader:this.mainMaterial.rawVertexShader,fragmentShader:this.mainMaterial.depthFragmentShader||"#version 300 es\nprecision mediump float;out vec4 outColor;void main(){outColor=vec4(1);}",uniforms:this.mainMaterial.depthUniforms.data,faceSide:this.mainMaterial.faceSide,depthTest:!0,depthWrite:!0,depthFuncType:u,alphaTest:this.mainMaterial.alphaTest,skipDepthPrePass:!!this.mainMaterial.skipDepthPrePass,uniformBlockNames:this.mainMaterial.uniformBlockNames})),this.depthMaterial&&!this.depthMaterial.isCompiledShader&&this.depthMaterial.start({gpu:e,attributeDescriptors:this.geometry.getAttributeDescriptors()})}updateMaterial(e){}updateDepthMaterial(e){}}class hr{constructor(e,t){this.origin=e,this.dir=t}}const cr={nearLeftTop:"nearLeftTop",nearRightTop:"nearRightTop",nearLeftBottom:"nearLeftBottom",nearRightBottom:"nearRightBottom",farLeftTop:"farLeftTop",farRightTop:"farRightTop",farLeftBottom:"farLeftBottom",farRightBottom:"farRightBottom"};class mr extends zt{constructor({name:e,cameraType:r,clearColor:a,postProcess:i}){super({name:e,type:E}),this.viewMatrix=t.identity,this.projectionMatrix=t.identity,this.viewProjectionMatrix=t.identity,this.inverseViewProjectionMatrix=t.identity,this.inverseViewMatrix=t.identity,this.inverseProjectionMatrix=t.identity,this.#o=null,this.near=1,this.far=10,this.visibleFrustum=!1,this.visibleFrustumMesh=null,this.cameraType=r,this.clearColor=a||new Ot(0,0,0,1),this.#u=i||null}#o;#u;get cameraForward(){return this.transform.worldForward.negate()}get postProcess(){return this.#u}get enabledPostProcess(){return!!this.postProcess&&this.postProcess.enabled}get hasEnabledPostProcessPass(){return!!this.enabledPostProcess&&this.postProcess.hasEnabledPass}get renderTarget(){return this.#o}get writeRenderTarget(){return this.#o?this.#o.isSwappable?this.#o.write:this.#o:null}setSize(e,t){this.#o&&this.#o.setSize(e,t),this.#u&&this.#u.setSize(e,t)}setPostProcess(e){this.#u=e}setClearColor(e){this.clearColor=e}update({gpu:e,time:t,deltaTime:r}){if(super.update({gpu:e,time:t,deltaTime:r}),this.visibleFrustumMesh||(this.visibleFrustumMesh=new lr({geometry:new ur({gpu:e,attributes:[new Kt({name:ie.Position,data:new Float32Array(new Array(24).fill(0)),size:3,usageType:re})],drawCount:36,indices:[6,7,4,4,7,5,0,1,2,2,1,3,0,4,5,5,1,0,0,2,4,2,6,4,2,3,6,6,3,7,1,5,7,7,1,3]}),material:new Jt({vertexShader:`#version 300 es\n                    \n                    layout (location = 0) in vec3 ${ie.Position};\n\n                    #pragma TRANSFORM_VERTEX_UNIFORMS\n                   \n                    void main() {\n                        gl_Position = ${Me} * ${Se} * ${Pe} * vec4(${ie.Position}, 1.);\n                    }\n                    `,fragmentShader:"#version 300 es\n                   \n                    precision mediump float;\n                    \n                    out vec4 outColor;\n                    \n                    void main() {\n                        outColor = vec4(0, 1., 0, 1.);\n                    }\n                    ",primitiveType:a,blendType:c,depthWrite:!1})}),this.addChild(this.visibleFrustumMesh)),this.visibleFrustumMesh){const e=this.getFrustumLocalPositions();this.visibleFrustumMesh.geometry.updateAttribute(ie.Position,new Float32Array([...e.nearLeftTop.elements,...e.nearLeftBottom.elements,...e.nearRightTop.elements,...e.nearRightBottom.elements,...e.farLeftTop.elements,...e.farLeftBottom.elements,...e.farRightTop.elements,...e.farRightBottom.elements])),this.visibleFrustumMesh.enabled=this.visibleFrustum}}updateTransform(){super.updateTransform(),this.viewMatrix=this.transform.worldMatrix.clone().invert(),this.inverseProjectionMatrix=this.projectionMatrix.clone().invert(),this.inverseViewMatrix=this.viewMatrix.clone().invert(),this.viewProjectionMatrix=t.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.inverseViewProjectionMatrix=this.viewProjectionMatrix.clone().invert()}isPerspective(){return this.cameraType===C}transformScreenPoint(r){const a=t.multiplyMatrices(this.projectionMatrix,this.viewMatrix,t.translationMatrix(r)),i=a.position,s=0===a.m33?1e-4:a.m33;return new e(i.x/s,i.y/s,i.z/s)}setRenderTarget(e){this.#o=e}updateProjectionMatrix(){throw"[Camera.updateProjectionMatrix] should implementation"}getFrustumLocalPositions(){throw"[Camera.getFrustumLocalPosition] should implementation"}getFrustumWorldPositions(){throw"[Camera.getFrustumWorldPositions] should implementation"}getWorldForward(){return this.transform.worldForward.clone().negate()}viewpointToRay(t){const r=new Ot(2*t.x-1,2*t.y-1,1,1).multiplyMatrix4(this.inverseViewProjectionMatrix);r.x=r.x/r.w,r.y=r.y/r.w,r.z=r.z/r.w;const a=new e(r.x,r.y,r.z),i=this.transform.worldPosition,s=a.subVector(i).normalize();return new hr(i,s)}}class dr extends mr{constructor(e,t,r,a,i,s){super({cameraType:R}),this.left=0,this.right=0,this.bottom=0,this.top=0,this.near=0,this.far=0,this.aspect=1,this.left=e,this.right=t,this.bottom=r,this.top=a,this.near=i,this.far=s,this.setOrthoSize(1,1,e,t,r,a)}setOrthoSize(e,t,r,a,i,s){r&&a&&s&&i&&(this.left=r,this.right=a,this.bottom=i,this.top=s),null!==e&&null!==t&&this.setSize(e,t),this.aspect=(a-r)/(s-i)}setSize(e,t){super.setSize(e,t),this.updateProjectionMatrix()}updateProjectionMatrix(){this.projectionMatrix=t.getOrthographicMatrix(this.left,this.right,this.bottom,this.top,this.near,this.far)}getFrustumLocalPositions(){const t=e.back,r=e.right,a=e.up,i=(Math.abs(this.left)+Math.abs(this.right))/2,s=(Math.abs(this.top)+Math.abs(this.right))/2,n=t.clone().scale(this.near),o=t.clone().scale(this.far),u=r.clone().scale(i),l=a.clone().scale(s);return{nearLeftTop:e.addVectors(n,u.clone().negate(),l),nearRightTop:e.addVectors(n,u,l),nearLeftBottom:e.addVectors(n,u.clone().negate(),l.clone().negate()),nearRightBottom:e.addVectors(n,u,l.clone().negate()),farLeftTop:e.addVectors(o,u.clone().negate(),l),farRightTop:e.addVectors(o,u,l),farLeftBottom:e.addVectors(o,u.clone().negate(),l.clone().negate()),farRightBottom:e.addVectors(o,u,l.clone().negate())}}getFrustumWorldPositions(){const t={nearLeftTop:e.zero,nearRightTop:e.zero,nearLeftBottom:e.zero,nearRightBottom:e.zero,farLeftTop:e.zero,farRightTop:e.zero,farLeftBottom:e.zero,farRightBottom:e.zero},r=this.getFrustumLocalPositions();for(const e in cr){const a=e,i=r[a].multiplyMatrix4(this.transform.worldMatrix);t[a]=i}return t}static CreateFullQuadOrthographicCamera(){const t=new dr(-1,1,-1,1,0,2);return t.transform.setTranslation(new e(0,0,1)),t}}class fr extends mr{constructor(e,t,r,a,i){super({name:i,cameraType:C}),this.aspect=1,this.fixedAspect=!1,this.fov=e,this.aspect=t,this.near=r,this.far=a,this.setPerspectiveSize(t)}setPerspectiveSize(e){this.aspect=e,this.updateProjectionMatrix()}setSize(e,t){super.setSize(e,t),this.fixedAspect||this.setPerspectiveSize(e/t)}updateProjectionMatrix(){this.projectionMatrix=t.getPerspectiveMatrix(this.fov*Math.PI/180,this.aspect,this.near,this.far)}getFrustumLocalPositions(){const t=e.back,r=e.right,a=e.up,i=this.fov/2*Math.PI/180,s=this.near*i,n=s*this.aspect,o=this.far*i,u=o*this.aspect,l=t.clone().scale(this.near),h=t.clone().scale(this.far),c=r.clone().scale(n),m=a.clone().scale(s),d=r.clone().scale(u),f=a.clone().scale(o);return{nearLeftTop:e.addVectors(l,c.clone().negate(),m),nearRightTop:e.addVectors(l,c,m),nearLeftBottom:e.addVectors(l,c.clone().negate(),m.clone().negate()),nearRightBottom:e.addVectors(l,c,m.clone().negate()),farLeftTop:e.addVectors(h,d.clone().negate(),f),farRightTop:e.addVectors(h,d,f),farLeftBottom:e.addVectors(h,d.clone().negate(),f.clone().negate()),farRightBottom:e.addVectors(h,d,f.clone().negate())}}}class pr extends lr{constructor({gpu:e,cubeMap:t,diffuseIntensity:r,specularIntensity:a,rotationOffset:s=0,renderMesh:n=!0}){const u=function(e){const t=[],r=[],a=[],i=[];e.split("\n").forEach((e=>{const s=e.split(" ");switch(s[0]){case"v":t.push([Number.parseFloat(s[1]),Number.parseFloat(s[2]),Number.parseFloat(s[3])]);break;case"vn":r.push([Number.parseFloat(s[1]),Number.parseFloat(s[2]),Number.parseFloat(s[3])]);break;case"vt":a.push([Number.parseFloat(s[1]),Number.parseFloat(s[2])]);break;case"f":i.push([s[1],s[2],s[3]])}}));const s=[],n=[],o=[],u=[];return i.forEach(((e,i)=>{const l=e[0].split("/"),h=e[1].split("/"),c=e[2].split("/"),m=Number.parseInt(l[0],10)-1,d=Number.parseInt(l[1],10)-1,f=Number.parseInt(l[2],10)-1,p=Number.parseInt(h[0],10)-1,g=Number.parseInt(h[1],10)-1,v=Number.parseInt(h[2],10)-1,x=Number.parseInt(c[0],10)-1,T=Number.parseInt(c[1],10)-1,y=Number.parseInt(c[2],10)-1;s.push(t[m],t[p],t[x]),n.push(a[d],a[g],a[T]),o.push(r[f],r[v],r[y]);const w=2*i;u.push(i+w,i+w+1,i+w+2)})),{positions:s.flat(),uvs:n.flat(),normals:o.flat(),indices:u}}("\n# Blender 3.3.1\n# www.blender.org\nmtllib skybox-cube.mtl\nv -1.000000 -1.000000 1.000000\nv -1.000000 1.000000 1.000000\nv -1.000000 -1.000000 -1.000000\nv -1.000000 1.000000 -1.000000\nv 1.000000 -1.000000 1.000000\nv 1.000000 1.000000 1.000000\nv 1.000000 -1.000000 -1.000000\nv 1.000000 1.000000 -1.000000\nvn 0.5774 0.5774 0.5774\nvn 0.5774 -0.5774 -0.5774\nvn 0.5774 0.5774 -0.5774\nvn -0.5774 0.5774 0.5774\nvn 0.5774 -0.5774 0.5774\nvn -0.5774 0.5774 -0.5774\nvn -0.5774 -0.5774 0.5774\nvn -0.5774 -0.5774 -0.5774\nvt 0.375000 0.000000\nvt 0.375000 1.000000\nvt 0.125000 0.750000\nvt 0.625000 0.000000\nvt 0.625000 1.000000\nvt 0.875000 0.750000\nvt 0.125000 0.500000\nvt 0.375000 0.250000\nvt 0.625000 0.250000\nvt 0.875000 0.500000\nvt 0.375000 0.750000\nvt 0.625000 0.750000\nvt 0.375000 0.500000\nvt 0.625000 0.500000\ns 1\nf 3/8/1 2/4/2 1/1/3\nf 7/13/4 4/9/5 3/8/1\nf 5/11/6 8/14/7 7/13/4\nf 1/2/3 6/12/8 5/11/6\nf 1/3/3 7/13/4 3/7/1\nf 6/12/8 4/10/5 8/14/7\nf 3/8/1 4/9/5 2/4/2\nf 7/13/4 8/14/7 4/9/5\nf 5/11/6 6/12/8 8/14/7\nf 1/2/3 2/5/2 6/12/8\nf 1/3/3 5/11/6 7/13/4\nf 6/12/8 2/6/2 4/10/5\n");super({geometry:new ur({gpu:e,attributes:[new Kt({name:ie.Position,data:new Float32Array(u.positions),size:3}),new Kt({name:ie.Uv,data:new Float32Array(u.uvs),size:2}),new Kt({name:ie.Normal,data:new Float32Array(u.normals),size:3})],indices:u.indices,drawCount:u.indices.length}),material:new Jt({name:"Skybox",vertexShader:"#version 300 es\n#pragma APPEND_ATTRIBUTES\n#pragma DEFINES\n#pragma ATTRIBUTES\nlayout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};\n#pragma APPEND_UNIFORMS\nout vec2 vUv;out vec3 vNormal,vWorldPosition;void main(){vUv=aUv;vNormal=(uNormalMatrix*vec4(aNormal,1)).xyz;vec4 u=uWorldMatrix*vec4(aPosition,1);vWorldPosition=u.xyz;gl_Position=uProjectionMatrix*uViewMatrix*u;}",fragmentShader:"#version 300 es\nprecision highp float;\n#pragma DEFINES\nin vec2 vUv;in vec3 vNormal,vWorldPosition;layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};uniform samplerCube uCubeTexture;uniform float uRotationOffset;uniform int uShadingModelId;vec3 u(vec3 u,float v){u.x*=-1.;float o=cos(3.14+v),n=sin(3.14+v);u.xz*=mat2(o,n,-n,o);return u;}\n#define SHADING_MODEL_NUM 3.\nstruct GBufferA{vec3 baseColor;};struct GBufferB{vec3 normal;float shadingModelId;};struct GBufferC{float metallic;float roughness;};struct GBufferD{vec3 emissiveColor;};vec4 u(int u){float v=float(u)/SHADING_MODEL_NUM;return vec4(vec3(0)*.5+.5,v);}layout(location=0) out vec4 outGBufferA;layout(location=1) out vec4 outGBufferB;layout(location=2) out vec4 outGBufferC;layout(location=3) out vec4 outGBufferD;void main(){vec3 v=u(-normalize(vNormal),uRotationOffset),l=textureLod(uCubeTexture,v,0.).xyz;l=pow(l,vec3(2.2));outGBufferA=vec4(l,1);outGBufferB=u(uShadingModelId);outGBufferC=vec4(0,0,0,1);outGBufferD=vec4(vec3(0),1);}",primitiveType:i,depthTest:!0,depthWrite:!1,useEnvMap:!0,uniforms:[{name:it,type:ue,value:t},{name:Tt,type:ge,value:s},{name:ke,type:xe,value:o}],uniformBlockNames:[wt,bt]}),actorType:M}),this.diffuseIntensity=1,this.specularIntensity=1,this.rotationOffset=0,this.renderMesh=!0,this.cubeMap=t,this.diffuseIntensity=r,this.specularIntensity=a,this.rotationOffset=s,this.renderMesh=n}updateTransform(t){t&&(this.transform.setTranslation(t.transform.position),this.transform.setScaling(e.fill(t.far/1.733))),super.updateTransform()}}class gr{constructor(e,t){this.lastTime=-1/0,this.targetFPS=e,this.callback=t}start(e){this.lastTime=e}exec(e){const t=1/this.targetFPS;if(e-t>=this.lastTime){const r=e-this.lastTime,a=t*Math.floor(r/t);this.lastTime+=a,this.callback(this.lastTime,a)}}}class vr{constructor(e,t,r=60){this.lastTime=-1/0,this.targetFPS=e,this.callback=t,this.maxChaseCount=r}start(e){this.lastTime=e}exec(e){const t=1/this.targetFPS;if(e-t>=this.lastTime){const r=e-this.lastTime,a=Math.floor(r/t);if(a>this.maxChaseCount)return this.lastTime+=t*a,void this.callback(this.lastTime,t);const i=Math.min(this.maxChaseCount,a);for(let e=0;e<i;e++)this.lastTime+=t,this.callback(this.lastTime,t)}}}class xr{constructor(e=1){this.renderCount=0,this.startCountTime=-1/0,this.calculateInterval=1,this._currentFPS=0,this.calculateInterval=e}get currentFPS(){return this._currentFPS}start(e){this.renderCount=0,this.startCountTime=e}calculate(e){if(this.startCountTime<0)return void this.start(e);this.renderCount++;const t=e-this.startCountTime;t>this.calculateInterval&&(this._currentFPS=this.renderCount/t,this.start(e))}}class Tr{constructor(e={}){this.passes=[],this.drawVertexCount=0,this.drawCallCount=0,this.showPassDetails=!1,this.showStats=!0,this.showFPS=!0,this.showPipeline=!0;const{wrapperElement:t,showStats:r=!0,showPipeline:a=!0,showPassDetails:i=!0}=e;this.showStats=!!r,this.showPipeline=!!a,this.showPassDetails=!!i,this.domElement=document.createElement("div"),this.domElement.style.cssText="\nposition: absolute;\ntop: 0;\nleft: 0;\npadding: 0.2em 0.5em;\nfont-size: 9px;\ncolor: white;\nfont-weight: bold;\ntext-shadow: rgba(0, 0, 0, 0.7) 1px 1px;\nwhite-space: break-spaces;\n",this.fpsCounterView=document.createElement("p"),this.domElement.appendChild(this.fpsCounterView),this.pipelineWrapper=document.createElement("div"),this.domElement.appendChild(this.pipelineWrapper),this.passInfoView=document.createElement("p"),this.pipelineWrapper.appendChild(this.passInfoView),this.drawVertexCountView=document.createElement("p"),this.pipelineWrapper.appendChild(this.drawVertexCountView),this.drawCallCountView=document.createElement("p"),this.pipelineWrapper.appendChild(this.drawCallCountView),(t||document.body).appendChild(this.domElement),this.showPassDetails=!!e.showPassDetails,this.fpsCounter=new xr}clear(){this.passes=[],this.drawVertexCount=0,this.drawCallCount=0}addPassInfo(e,t,r){const a=this.passes.findIndex((t=>t.groupLabel===e)),i=r.getAttribute(ie.Position);if(!i)throw"invalid position attribute";const s=i.data.length/3;a<0?this.addPassGroup(e,{passLabel:t,vertexCount:s}):this.passes[a].passInfos.push({passLabel:t,vertexCount:s})}addDrawVertexCount(e){const t=e.getAttribute(ie.Position);t&&(this.drawVertexCount+=t.data.length/3)}incrementDrawCall(){this.drawCallCount++}update(e){this.fpsCounter.calculate(e),this.updateView()}updateView(){this.domElement.style.display=this.showStats?"block":"none",this.fpsCounterView.style.display=this.showFPS?"block":"none",this.pipelineWrapper.style.display=this.showPipeline?"block":"none",this.fpsCounterView.textContent=`FPS: ${Math.floor(this.fpsCounter.currentFPS)}`;const e=[];e.push("-------------");for(let t=0;t<this.passes.length;t++){let r=0,a=0;const i=[];for(let e=0;e<this.passes[t].passInfos.length;e++){const s=this.passes[t].passInfos[e];if(this.showPassDetails){const e=`${s.passLabel} - vertex count: ${s.vertexCount}`;i.push(e)}r++,a+=s.vertexCount}i.unshift(`[${this.passes[t].groupLabel}]\ndraw calls: ${r}, vertex count: ${a}`),e.push(...i)}e.push("-------------"),this.passInfoView.textContent=e.join("\n"),this.drawVertexCountView.textContent=`vertex count: ${this.drawVertexCount}`,this.drawCallCountView.textContent=`draw call count: ${this.drawCallCount}`}addPassGroup(e,t){this.passes.push({groupLabel:e,passInfos:[t]})}}class yr{constructor(e){this.passes=[],this.#l=!0,this.#h=e||dr.CreateFullQuadOrthographicCamera()}#h;#l;get enabled(){if(!this.#l)return!1;for(let e=0;e<this.passes.length;e++)if(this.passes[e].enabled)return!0;return!1}get postProcessCamera(){return this.#h}set enabled(e){this.#l=e}get hasEnabledPass(){for(let e=0;e<this.passes.length;e++)if(this.passes[e].enabled)return!0;return!1}get lastRenderTarget(){let e=null;for(let t=this.passes.length-1;t>=0;t--)if(this.passes[t].enabled){e=this.passes[t];break}return null==e?null:e.renderTarget}setSize(e,t){this.#h.setSize(e,t),this.passes.forEach((r=>r.setSize(e,t)))}addPass(e){this.passes.push(e)}update(){this.passes.forEach((e=>{e.update()}))}static updatePassMaterial({pass:e,renderer:t,targetCamera:r,lightActors:a}){e.materials.forEach((e=>{a&&ua(e,a),e.uniforms.setValue(Ee,r.viewProjectionMatrix),e.uniforms.setValue(De,r.inverseViewProjectionMatrix),e.uniforms.setValue(Be,r.inverseViewMatrix),e.uniforms.setValue(Ae,r.inverseProjectionMatrix),e.uniforms.setValue(Ve,r.viewMatrix.clone().invert().transpose()),e.uniforms.setValue(ze,t.gBufferRenderTargets.gBufferATexture),e.uniforms.setValue(Ne,t.gBufferRenderTargets.gBufferBTexture),e.uniforms.setValue(Le,t.gBufferRenderTargets.gBufferCTexture),e.uniforms.setValue(Oe,t.gBufferRenderTargets.gBufferDTexture),e.uniforms.setValue(Ge,t.depthPrePassRenderTarget.depthTexture)}))}static renderPass({pass:e,gpu:t,renderer:r,camera:a,prevRenderTarget:i,targetCamera:s,gBufferRenderTargets:n,time:o,isLastPass:u,lightActors:l}){yr.updatePassMaterial({pass:e,renderer:r,targetCamera:s,lightActors:l}),r.updateCameraUniforms(s),e.render({gpu:t,renderer:r,camera:a,prevRenderTarget:i,isLastPass:u,targetCamera:s,gBufferRenderTargets:n,time:o,lightActors:l})}render({gpu:e,renderer:t,prevRenderTarget:r,gBufferRenderTargets:a,targetCamera:i,time:s,isCameraLastPass:n,lightActors:o}){this.#h.updateTransform();const u=this.passes.filter((e=>e.enabled));u.forEach(((l,h)=>{const c=n&&h===u.length-1;yr.renderPass({pass:l,gpu:e,renderer:t,camera:this.#h,prevRenderTarget:r,isLastPass:c,targetCamera:i,gBufferRenderTargets:a,time:s,lightActors:o}),r=l.renderTarget}))}}class wr extends kt{#c;#m=[];#d;get drawBufferList(){return this.#m}get glObject(){return this.#c}get hasMultipleDrawBuffers(){return this.#m.length>=2}registerDrawBuffer(e){this.#m.push(e)}constructor({gpu:e}){super(),this.#d=e;const t=this.#d.gl.createFramebuffer();if(!t)throw"invalid framebuffer";this.#c=t}bind(){const e=this.#d.gl;e.bindFramebuffer(e.FRAMEBUFFER,this.#c)}unbind(){const e=this.#d.gl;e.bindFramebuffer(e.FRAMEBUFFER,null)}}class br extends kt{#d;#f;#p;get glObject(){return this.#p}constructor({gpu:e,type:t,width:r,height:a}){super(),this.#d=e,this.#f=t;const i=this.#d.gl,s=i.createRenderbuffer();if(!s)throw"invalid render buffer";if(this.#p=s,i.bindRenderbuffer(i.RENDERBUFFER,this.#p),this.#f!==x)throw"[Renderbuffer.constructor] invalid render buffer type.";i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_COMPONENT16,r,a),i.bindRenderbuffer(i.RENDERBUFFER,null)}setSize(e,t){const r=this.#d.gl;if(r.bindRenderbuffer(r.RENDERBUFFER,this.#p),this.#f===x)r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_COMPONENT16,e,t);r.bindRenderbuffer(r.RENDERBUFFER,null)}}class Pr{constructor({isSwappable:e=!1}={isSwappable:!1}){this.isSwappable=e}get read(){throw"[AbstractRenderTarget] should implementation 'read' getter"}get write(){throw"[AbstractRenderTarget] should implementation 'write' getter"}}class Sr extends Pr{constructor({gpu:e,name:t="",type:r=$,width:a=1,height:i=1,useDepthBuffer:s=!1,writeDepthTexture:n=!1,minFilter:o=H.Linear,magFilter:u=H.Linear,wrapT:l=X.ClampToEdge,wrapS:h=X.ClampToEdge,mipmap:c=!1,depthPrecision:m}){super(),this.depthRenderbuffer=null,this._texture=null,this._depthTexture=null,this.gpu=e;const d=this.gpu.gl;switch(this.name=t,this.type=r,this.width=a,this.height=i,this._framebuffer=new wr({gpu:e}),this._framebuffer.bind(),s&&(this.depthRenderbuffer=new br({gpu:e,type:x,width:a,height:i})),this.depthRenderbuffer&&d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,d.RENDERBUFFER,this.depthRenderbuffer.glObject),this.type){case $:this._texture=new er({gpu:e,width:this.width,height:this.height,mipmap:c,type:N,minFilter:o,magFilter:u,wrapS:h,wrapT:l}),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,this._texture.glObject,0);break;case K:if(!e.checkExtension(Vt))throw"EXT_color_buffer_float not supported";this._texture=new er({gpu:e,width:this.width,height:this.height,mipmap:c,type:O,minFilter:o,magFilter:u,wrapS:h,wrapT:l}),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,this._texture.glObject,0);break;case q:if(!e.checkExtension(Vt))throw"EXT_color_buffer_float not supported";this._texture=new er({gpu:e,width:this.width,height:this.height,mipmap:c,type:G,minFilter:o,magFilter:u,wrapS:h,wrapT:l}),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,this._texture.glObject,0);break;case Q:this._texture=new er({gpu:e,width:this.width,height:this.height,mipmap:c,type:j,minFilter:o,magFilter:u,wrapS:h,wrapT:l}),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,this._texture.glObject,0)}if(this._texture){if(d.checkFramebufferStatus(d.FRAMEBUFFER)!==At)throw"framebuffer not completed";this._framebuffer.registerDrawBuffer(Dt)}if((this.type===Y||n)&&(this._depthTexture=new er({gpu:e,width:this.width,height:this.height,mipmap:!1,type:L,minFilter:o,magFilter:u,wrapS:h,wrapT:l,depthPrecision:m}),d.framebufferTexture2D(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,d.TEXTURE_2D,this._depthTexture.glObject,0)),this._depthTexture&&this.depthRenderbuffer)throw"[RenderTarget.constructor] depth texture and depth render buffer are active.";d.bindTexture(d.TEXTURE_2D,null),this.depthRenderbuffer&&d.bindRenderbuffer(d.RENDERBUFFER,null),this._framebuffer.unbind()}get texture(){return this._texture}get depthTexture(){return this._depthTexture}get framebuffer(){return this._framebuffer}get read(){return this}get write(){return this}setSize(e,t){this.width=Math.floor(e),this.height=Math.floor(t),this._texture&&this._texture.setSize(this.width,this.height),this._depthTexture&&this._depthTexture.setSize(this.width,this.height),this.depthRenderbuffer&&this.depthRenderbuffer.setSize(e,t)}setTexture(e){const t=this.gpu.gl;this._texture=e,t.bindFramebuffer(t.FRAMEBUFFER,this._framebuffer.glObject),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this._texture.glObject,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}setDepthTexture(e){const t=this.gpu.gl;this._depthTexture=e,this._framebuffer.bind(),t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,this._depthTexture.glObject,0),this._framebuffer.unbind()}static blitDepth({gpu:e,sourceRenderTarget:t,destRenderTarget:r,width:a,height:i}){const s=e.gl;s.bindFramebuffer(s.READ_FRAMEBUFFER,t.framebuffer.glObject),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,r.framebuffer.glObject),s.clear(s.DEPTH_BUFFER_BIT),s.checkFramebufferStatus(s.READ_FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE&&(s.blitFramebuffer(0,0,a,i,0,0,a,i,s.DEPTH_BUFFER_BIT,s.NEAREST),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null))}}class Mr extends Pr{constructor({gpu:e,name:t,width:r=1,height:a=1}){super(),this._gBufferTextures=[],this._depthTexture=null,this.gpu=e;const i=H.Linear,s=H.Linear,n=e.gl;this.name=t,this.width=r,this.height=a,this._framebuffer=new wr({gpu:e}),this._framebuffer.bind();const o=n.COLOR_ATTACHMENT0+0;this._gBufferATexture=new er({gpu:e,width:this.width,height:this.height,mipmap:!1,type:N,minFilter:i,magFilter:s}),n.framebufferTexture2D(n.FRAMEBUFFER,o,n.TEXTURE_2D,this._gBufferATexture.glObject,0),this._gBufferTextures.push(this._gBufferATexture),this.framebuffer.registerDrawBuffer(o);const u=n.COLOR_ATTACHMENT0+1;this._gBufferBTexture=new er({gpu:e,width:this.width,height:this.height,mipmap:!1,type:N,minFilter:i,magFilter:s}),n.framebufferTexture2D(n.FRAMEBUFFER,u,n.TEXTURE_2D,this._gBufferBTexture.glObject,0),this.framebuffer.registerDrawBuffer(u),this._gBufferTextures.push(this._gBufferBTexture);const l=n.COLOR_ATTACHMENT0+2;this._gBufferCTexture=new er({gpu:e,width:this.width,height:this.height,mipmap:!1,type:N,minFilter:i,magFilter:s}),n.framebufferTexture2D(n.FRAMEBUFFER,l,n.TEXTURE_2D,this._gBufferCTexture.glObject,0),this.framebuffer.registerDrawBuffer(l),this._gBufferTextures.push(this._gBufferCTexture);const h=n.COLOR_ATTACHMENT0+3;this._gBufferDTexture=new er({gpu:e,width:this.width,height:this.height,mipmap:!1,type:G,minFilter:i,magFilter:s}),n.framebufferTexture2D(n.FRAMEBUFFER,h,n.TEXTURE_2D,this._gBufferDTexture.glObject,0),this.framebuffer.registerDrawBuffer(h),this._gBufferTextures.push(this._gBufferDTexture),n.bindTexture(n.TEXTURE_2D,null),this.framebuffer.unbind()}get gBufferATexture(){return this._gBufferATexture}get gBufferBTexture(){return this._gBufferBTexture}get gBufferCTexture(){return this._gBufferCTexture}get gBufferDTexture(){return this._gBufferDTexture}get depthTexture(){return this._depthTexture}get framebuffer(){return this._framebuffer}get read(){return this}get write(){return this}setSize(e,t){this.width=e,this.height=t,this._gBufferTextures.forEach((e=>e.setSize(this.width,this.height))),this._depthTexture&&this._depthTexture.setSize(this.width,this.height)}setDepthTexture(e){const t=this.gpu.gl;this._depthTexture=e,this._framebuffer.bind(),t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,this._depthTexture.glObject,0),this._framebuffer.unbind()}}function Er(t){const r=function({calculateTangent:t,calculateBinormal:r,flipUvY:a,width:i=2,height:s=2,offset:n=e.zero}){const o=[0,0,1,0,0,1,0,0,1,0,0,1],u=i/2,l=s/2,h=new Float32Array([-u+n.x,l+n.y,0+n.z,-u+n.x,-l+n.y,0+n.z,u+n.x,l+n.y,0+n.z,u+n.x,-l+n.y,0+n.z]),c=new Float32Array(a?[0,0,0,1,1,0,1,1]:[0,1,0,0,1,1,1,0]),m=new Float32Array(o);let d=new Float32Array,f=new Float32Array;if(t||r){const e=ur.createTangentsAndBinormals(o);t&&(d=new Float32Array(e.tangents)),r&&(f=new Float32Array(e.binormals))}return{positions:h,uvs:c,normals:m,tangents:d,binormals:f,indices:[0,1,2,2,1,3],drawCount:6}}(t),a=[new Kt({name:ie.Position,data:r.positions,size:3}),new Kt({name:ie.Uv,data:r.uvs,size:2}),new Kt({name:ie.Normal,data:r.normals,size:3})];return t.calculateTangent&&a.push(new Kt({name:ie.Tangent,data:r.tangents,size:3})),t.calculateBinormal&&a.push(new Kt({name:ie.Binormal,data:r.binormals,size:3})),{attributes:a,indices:[0,1,2,2,1,3],drawCount:6}}class Cr extends ur{constructor({gpu:e,...t}){const{attributes:r,indices:a,drawCount:i}=Er(t);super({gpu:e,attributes:r,indices:a,drawCount:i})}}class Rr{constructor({gpu:e,vertexShader:t,fragmentShader:r,rawVertexShader:a,rawFragmentShader:s,uniforms:n=[],uniformBlockNames:o=[],useEnvMap:u=!1,receiveShadow:l=!1,name:h="",renderTargetType:c=$,minFilter:m=H.Linear,magFilter:d=H.Linear,wrapT:f=X.ClampToEdge,wrapS:p=X.ClampToEdge,srcTextureEnabled:g=!0}){this.enabled=!0,this.width=1,this.height=1,this.materials=[],this.beforeRender=null,this.name=h;t=t||Rr.baseVertexShader,this.geometry=new Cr({gpu:e}),this.material=new Jt({name:h,vertexShader:t,fragmentShader:r,rawVertexShader:a,rawFragmentShader:s,uniforms:[...n,...Rr.commonUniforms,...g?[{name:Je,type:oe,value:null}]:[]],uniformBlockNames:o,useEnvMap:!!u,receiveShadow:!!l,primitiveType:i}),this.materials.push(this.material),this.mesh=new lr({geometry:this.geometry,material:this.material}),this._renderTarget=new Sr({gpu:e,width:1,height:1,type:c,minFilter:m,magFilter:d,wrapS:p,wrapT:f})}get renderTarget(){return this._renderTarget}static get baseVertexShader(){return"#version 300 es\n#pragma DEFINES\n#pragma ATTRIBUTES\nout vec2 vUv;void main(){vUv=aUv;gl_Position=vec4(aPosition,1);}"}static get commonUniforms(){return[{name:Qe,type:ge,value:1},{name:Ze,type:ge,value:1},{name:Ke,type:ge,value:0}]}setSize(e,t){this.width=e,this.height=t,this._renderTarget.setSize(e,t),this.material.uniforms.setValue("uTargetWidth",this.width),this.material.uniforms.setValue("uTargetHeight",this.height)}setRenderTarget(e,t,r){r?e.setRenderTarget(t.renderTarget,!0):e.setRenderTarget(this._renderTarget,!0)}update(){}render({gpu:e,targetCamera:t,renderer:r,prevRenderTarget:a,isLastPass:i}){this.setRenderTarget(r,t,i),this.mesh.updateTransform(),this.materials.forEach((t=>{t.isCompiledShader||(t.start({gpu:e,attributeDescriptors:this.geometry.getAttributeDescriptors()}),r.checkNeedsBindUniformBufferObjectToMaterial(t))})),a&&this.material.uniforms.setValue(Je,a.texture),this.beforeRender&&this.beforeRender(),r.renderMesh(this.geometry,this.material)}}function Br(e,t){const r=[...e];for(let a=0;a<e.length;a++)r[a]=t;return r}function Dr(e,t=!1){const r=new Array(e).fill(0);return t?r.map(((e,t)=>t)):r}const Ar=(e=[])=>function(e){const t=e;return{value:()=>t,fill:function(...e){return Br(t,e[0]),this},range:function(e){return Dr(e),this}}}(e);Ar.fill=Br,Ar.range=Dr;class Vr extends Rr{constructor({gpu:e}){super({gpu:e,name:"DeferredShadingPass",fragmentShader:"#version 300 es\nprecision highp float;\n#pragma DEFINES\n#define MAX_SPOT_LIGHT_COUNT 4\nlayout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};struct DirectionalLight{vec3 direction;float intensity;vec4 color;mat4 shadowMapProjectionMatrix;};layout(std140) uniform ubDirectionalLight{DirectionalLight uDirectionalLight;};struct SpotLight{vec4 color;vec3 position;vec3 direction;float intensity;float distance;float attenuation;float coneCos;float penumbraCos;mat4 shadowMapProjectionMatrix;};layout(std140) uniform ubSpotLight{SpotLight uSpotLight[MAX_SPOT_LIGHT_COUNT];};\n#define saturate(a)clamp(a,0.,1.)\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\nstruct IncidentLight{vec3 color;vec3 direction;bool visible;float intensity;};struct IncidentSkyboxLight{vec3 diffuseDirection;float diffuseIntensity;vec3 specularDirection;float specularIntensity;float maxLodLevel;};struct ReflectedLight{vec3 directDiffuse;vec3 directSpecular;vec3 indirectDiffuse;vec3 indirectSpecular;};struct GeometricContext{vec3 position;vec3 normal;vec3 viewDir;};struct Material{vec3 baseColor;vec3 diffuseColor;vec3 specularColor;float roughness;float metallic;};bool u(const float u,const float s){return any(bvec2(s==0.,u<s));}float u(const float u,const float e,const float v){return v>0.?pow(saturate(-u/e+1.),v):1.;}void f(const DirectionalLight u,const GeometricContext s,out IncidentLight v){v.color=u.color.xyz;v.direction=-u.direction;v.visible=true;v.intensity=u.intensity;}struct PointLight{vec3 position;vec4 color;float distance;float attenuation;};void v(const SpotLight v,const GeometricContext s,out IncidentLight f){vec3 d=v.position-s.position,n=normalize(d);f.direction=n;f.intensity=v.intensity;float r=length(d),c=dot(-n,v.direction);if(all(bvec2(c>v.coneCos,u(r,v.distance))))f.color=v.color.xyz,f.color*=smoothstep(v.coneCos,v.penumbraCos,c)*u(r,v.distance,v.attenuation),f.visible=true;else f.color=vec3(0),f.visible=false;}struct SkyboxLight{float diffuseIntensity;float specularIntensity;float rotationOffset;float maxLodLevel;};vec3 f(vec3 v,float u){v.x*=-1.;float s=cos(3.14+u),n=sin(3.14+u);v.xz*=mat2(s,n,-n,s);return v;}void s(const SkyboxLight u,const GeometricContext s,out IncidentSkyboxLight v){vec3 n=f(s.normal,u.rotationOffset),r=f(reflect(-s.viewDir,normalize(s.normal)),u.rotationOffset);v.diffuseDirection=n;v.diffuseIntensity=u.diffuseIntensity;v.specularDirection=r;v.specularIntensity=u.specularIntensity;v.maxLodLevel=u.maxLodLevel;}vec3 t(vec3 u,vec3 v,vec3 s){return u+(1.-u)*pow(1.-saturate(dot(s,v)),5.);}vec3 s(vec3 u,float s){return u+(1.-u)*pow(1.-s,5.);}float t(float u,float s){float v=u*u,n=s*s*(v-1.)+1.;return v/(PI*n*n);}float e(float u,float s,float v){float n=u*u*.5+EPSILON;return v/(v*(1.-n)+n)*(s/(s*(1.-n)+n));}vec3 e(const vec3 u,const GeometricContext v,vec3 s,float n){vec3 r=normalize(v.normal),c=normalize(v.viewDir),f=normalize(u);float d=saturate(dot(r,f)),l=saturate(dot(r,c));vec3 G=normalize(f+c);float y=saturate(dot(r,G)),a=n*n,m=t(a,y),I=e(a,l,d);vec3 S=t(s,c,G);return I*m*S/(4.*d*l+EPSILON);}void e(const IncidentLight u,const GeometricContext v,const Material s,inout ReflectedLight f,const float n){float r=saturate(dot(v.normal,u.direction));vec3 d=r*u.color;d*=PI;d*=u.intensity;d*=1.-n;f.directDiffuse+=d*(s.diffuseColor/PI);f.directSpecular+=d*e(u.direction,v,s.specularColor,s.roughness);}void f(samplerCube u,const IncidentSkyboxLight v,const GeometricContext f,const Material n,inout ReflectedLight r){r.directDiffuse+=n.diffuseColor*textureLod(u,v.diffuseDirection,v.maxLodLevel).xyz*v.diffuseIntensity;vec3 c=textureLod(u,v.specularDirection,log2(n.roughness*pow(2.,v.maxLodLevel))).xyz,l=s(n.specularColor,max(0.,dot(f.viewDir,f.normal)));r.directSpecular+=mix(c*v.specularIntensity*n.specularColor,c*v.specularIntensity,l);}struct Camera{vec3 worldPosition;};struct Surface{vec3 worldNormal;vec3 worldPosition;vec4 diffuseColor;float specularAmount;};struct Skybox{samplerCube cubeMap;float diffuseIntensity;float specularIntensity;float rotationOffset;float maxLodLevel;};vec3 p(vec2 u,float v,mat4 s){vec4 r=s*vec4(u*2.-1.,v*2.-1.,1);return r.xyz/r.w;}const vec2 d[4]=vec2[](vec2(-.94201624,-.39906216),vec2(.94558609,-.76890725),vec2(-.094184101,-.9293887),vec2(.34495938,.2938776));float e(vec3 u,vec3 s,vec3 v,mat4 n,sampler2D r,float f){float c=.005*tan(acos(max(dot(s,-v),0.)));c=clamp(c,.1,.5);vec4 t=n*vec4(u,1);vec2 G=t.xy;float l=t.z,y=1.;for(int m=0;m<4;m++){vec2 I=d[m]/8e2;float a=texture(r,G+I).x;if(a<t.z-c)y-=.25;}float e=(1.-y)*(smoothstep(0.,.25,G.x)*(1.-smoothstep(.75,1.,G.x))*smoothstep(0.,.25,G.y)*(1.-smoothstep(.75,1.,G.y))*step(0.,l)*(1.-step(1.,l)))*.5;return clamp(e,0.,1.);}float f(vec3 u,vec3 s,vec3 v,mat4 n,sampler2D r,float f){float c=.005*tan(acos(max(dot(s,-v),0.)));c=clamp(c,.01,.02);vec4 t=n*vec4(u,1);vec2 G=t.xy/t.w;float l=t.z/t.w,y=1.;for(int m=0;m<4;m++){vec2 I=d[m]/1e2;float a=texture(r,G+I).x;if(a<l-c)y-=.25;}float e=(1.-y)*(smoothstep(0.,.25,G.x)*(1.-smoothstep(.75,1.,G.x))*smoothstep(0.,.25,G.y)*(1.-smoothstep(.75,1.,G.y))*step(0.,l)*(1.-step(1.,l)))*.5;return clamp(e,0.,1.);}in vec2 vUv;\n#ifdef USE_RECEIVE_SHADOW\nin vec4 vShadowMapProjectionUv;\n#endif\nuniform sampler2D uDirectionalLightShadowMap,uSpotLightShadowMap[MAX_SPOT_LIGHT_COUNT];\n#ifdef USE_RECEIVE_SHADOW\nuniform sampler2D uShadowMap;uniform float uShadowBias;\n#endif\nuniform sampler2D uGBufferATexture,uGBufferBTexture,uGBufferCTexture,uGBufferDTexture,uDepthTexture,uAmbientOcclusionTexture;uniform float uTime;uniform Skybox uSkybox;\n#define SHADING_MODEL_NUM 3.\nstruct GBufferA{vec3 baseColor;};struct GBufferB{vec3 normal;float shadingModelId;};struct GBufferC{float metallic;float roughness;};struct GBufferD{vec3 emissiveColor;};GBufferA e(sampler2D u,vec2 v){GBufferA f;f.baseColor=texture(u,v).xyz;return f;}GBufferB p(sampler2D u,vec2 v){vec4 s=texture(u,v);GBufferB f;f.normal=normalize(s.xyz*2.-1.);f.shadingModelId=s.w*SHADING_MODEL_NUM;return f;}GBufferC v(sampler2D u,vec2 v){vec4 s=texture(u,v);GBufferC f;f.metallic=s.x;f.roughness=s.y;return f;}GBufferD n(sampler2D u,vec2 v){GBufferD f;f.emissiveColor=texture(u,v).xyz;return f;}layout(location=0) out vec4 outColor;void main(){vec4 u=vec4(0,0,0,1);vec2 c=vUv;GBufferA r=e(uGBufferATexture,c);GBufferB t=p(uGBufferBTexture,c);GBufferC d=v(uGBufferCTexture,c);GBufferD G=n(uGBufferDTexture,c);vec3 y=r.baseColor;float l=d.metallic;vec3 x=G.emissiveColor;float I=t.shadingModelId,a=texture(uDepthTexture,c).x;vec3 m=p(c,a,uInverseViewProjectionMatrix);if(step(a,.9999)<.5){outColor=vec4(y,1);return;}if(1.5<I&&I<2.5){u=vec4(x,1);outColor=u;return;}Surface i;i.worldPosition=m;i.worldNormal=t.normal;i.diffuseColor=vec4(y,1);i.specularAmount=.5;Camera S;S.worldPosition=uViewPosition;GeometricContext o;o.position=i.worldPosition;o.normal=i.worldNormal;o.viewDir=normalize(S.worldPosition-i.worldPosition);Material M;vec3 R=y;M.baseColor=R;M.diffuseColor=mix(R,vec3(0),l);M.specularColor=mix(vec3(.04),R,l);M.roughness=d.roughness;M.metallic=l;ReflectedLight P=ReflectedLight(vec3(0),vec3(0),vec3(0),vec3(0));IncidentLight w;float D=0.;DirectionalLight b;b.direction=uDirectionalLight.direction;b.color=uDirectionalLight.color;b.intensity=uDirectionalLight.intensity;f(b,o,w);D=e(m,i.worldNormal,uDirectionalLight.direction,uDirectionalLight.shadowMapProjectionMatrix,uDirectionalLightShadowMap,uShadowBias);e(w,o,M,P,D);v(uSpotLight[0],o,w);D=f(m,i.worldNormal,uSpotLight[0].direction,uSpotLight[0].shadowMapProjectionMatrix,uSpotLightShadowMap[0],uShadowBias);e(w,o,M,P,D);v(uSpotLight[1],o,w);D=f(m,i.worldNormal,uSpotLight[1].direction,uSpotLight[1].shadowMapProjectionMatrix,uSpotLightShadowMap[1],uShadowBias);e(w,o,M,P,D);v(uSpotLight[2],o,w);D=f(m,i.worldNormal,uSpotLight[2].direction,uSpotLight[2].shadowMapProjectionMatrix,uSpotLightShadowMap[2],uShadowBias);e(w,o,M,P,D);v(uSpotLight[3],o,w);D=f(m,i.worldNormal,uSpotLight[3].direction,uSpotLight[3].shadowMapProjectionMatrix,uSpotLightShadowMap[3],uShadowBias);e(w,o,M,P,D);SkyboxLight z;z.diffuseIntensity=uSkybox.diffuseIntensity;z.specularIntensity=uSkybox.specularIntensity;z.rotationOffset=uSkybox.rotationOffset;z.maxLodLevel=uSkybox.maxLodLevel;IncidentSkyboxLight N;s(z,o,N);f(uSkybox.cubeMap,N,o,M,P);vec3 U=P.directDiffuse+P.directSpecular+P.indirectDiffuse+P.indirectSpecular;u=vec4(U,1);u.xyz*=texture(uAmbientOcclusionTexture,c).x;u.xyz+=x;outColor=u;}",uniforms:[{name:ze,type:oe,value:null},{name:Ne,type:oe,value:null},{name:Le,type:oe,value:null},{name:Oe,type:oe,value:null},{name:Ge,type:oe,value:null},{name:"uAmbientOcclusionTexture",type:oe,value:null},{name:ct,type:oe,value:null},{name:mt,type:we,value:Ar.range(4).map((()=>null))},{name:xt,type:fe,value:[{name:"cubeMap",type:ue,value:null},{name:"diffuseIntensity",type:ge,value:0},{name:"specularIntensity",type:ge,value:0},{name:"rotationOffset",type:ge,value:0},{name:"maxLodLevel",type:ge,value:0}]}],receiveShadow:!0,renderTargetType:q,uniformBlockNames:[bt,Pt,St]})}updateSkyboxUniforms(e){this.material.uniforms.setValue(xt,[{name:"cubeMap",type:ue,value:e.cubeMap},{name:"diffuseIntensity",type:ge,value:e.diffuseIntensity},{name:"specularIntensity",type:ge,value:e.specularIntensity},{name:"rotationOffset",type:ge,value:e.rotationOffset},{name:"maxLodLevel",type:ge,value:e.cubeMap.maxLodLevel}])}render(e){super.render(e)}}function _r(e,t,r){return Math.min(r,Math.max(e,t))}const Fr=e=>{const t=[.1*Math.PI,Math.PI*(1/3*4+.1),Math.PI*(1/3*2+.1),Math.PI*(1/3*1+.1),1.1*Math.PI,Math.PI*(1/3*5+.1)],r=1/16*Math.PI*2,a=new Array(16).fill(0).map(((e,t)=>[function(e,t,r){return e+(t-e)*Math.random()}(r*(4*t),r*(4*t+4))%(2*Math.PI),1+.0625*t,1,1])).flat(),i=new er({gpu:e,width:4,height:4,type:k,wrapS:X.Repeat,wrapT:X.Repeat});return i.update({width:4,height:4,data:new Float32Array(a)}),{samplingRotations:t,samplingDistances:[.1,.8/6*4+.1,.8/6*2+.1,.8/6*1+.1,.5,.8/6*5+.1],samplingTexture:i}};class Ur extends Rr{constructor({gpu:e}){const{samplingRotations:t,samplingDistances:r,samplingTexture:a}=Fr(e);super({gpu:e,fragmentShader:"#version 300 es\nprecision highp float;\n#pragma DEFINES\nin vec2 vUv;out vec4 outColor;layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};uniform sampler2D uDepthTexture,uGBufferBTexture;uniform float[6] uSamplingRotations,uSamplingDistances;uniform mat4 uSamplingTableMatrix;uniform sampler2D uSamplingTexture;uniform float uOcclusionSampleLength,uOcclusionBias,uOcclusionMinDistance,uOcclusionMaxDistance;uniform vec4 uOcclusionColor;uniform float uOcclusionPower,uOcclusionStrength,uBlendRate;float u(float u,float e,float f){float m=e*u;return-m/(f*(u-1.)-m);}vec3 e(vec2 u,float e,mat4 f){vec4 m=f*vec4(u*2.-1.,e*2.-1.,1);return m.xyz/m.w;}float e(sampler2D u,vec3 e,mat4 f,vec3 x){vec4 m=f*vec4(e+x,1);return textureLod(u,(m.xyz/m.w).xy*.5+.5,0.).x;}mat2 e(float u){float e=cos(u),m=sin(u);return mat2(e,-m,m,e);}void main(){float m=0.;vec2 f=vUv;vec4 x=vec4(1,1,1,0);float s=u(texture(uDepthTexture,f).x,uNearClip,uFarClip);vec3 v=normalize((uTransposeInverseViewMatrix*vec4(normalize(texture(uGBufferBTexture,f).xyz*2.-1.),1)).xyz),r=e(f,texture(uDepthTexture,f).x,uInverseProjectionMatrix);vec2 t=gl_FragCoord.xy/4.;vec4 d=texture(uSamplingTexture,t);float w=d.x,c=d.y;if(s>.9999){outColor=x;return;}for(int i=0;i<6;i++){mat2 D=e(uSamplingRotations[i]+w);float n=uSamplingDistances[i]*c*uOcclusionSampleLength;vec3 h=vec3(D*vec2(1,0),0)*n;float o=e(uDepthTexture,r,uProjectionMatrix,h),p=e(uDepthTexture,r,uProjectionMatrix,-h);vec3 A=e(f,o,uInverseProjectionMatrix),B=e(f,p,uInverseProjectionMatrix);float z=distance(A,r),C=distance(B,r);if(z<uOcclusionMinDistance||uOcclusionMaxDistance<z)continue;if(C<uOcclusionMinDistance||uOcclusionMaxDistance<C)continue;vec3 E=-normalize(r),F=normalize(A-r),G=normalize(B-r);m+=max(0.,dot(F,E)-min(dot(v,F),0.)+(dot(G,E)-min(dot(v,G),0.)));}float i=m/float(6);i=clamp(i,0.,1.);i=pow(i,uOcclusionPower);vec4 n=mix(x,uOcclusionColor,clamp(i*uBlendRate*uOcclusionStrength,0.,1.));n.w=1.;outColor=n;}",uniforms:[{name:Ne,type:oe,value:null},{name:Ge,type:oe,value:null},{name:"uSamplingRotations",type:ve,value:new Float32Array(t)},{name:"uSamplingDistances",type:ve,value:new Float32Array(r)},{name:"uSamplingTexture",type:oe,value:a},{name:"uOcclusionSampleLength",type:ge,value:1},{name:"uOcclusionBias",type:ge,value:1},{name:"uOcclusionMinDistance",type:ge,value:1},{name:"uOcclusionMaxDistance",type:ge,value:1},{name:"uOcclusionColor",type:Te,value:new Nt(0,0,0,1)},{name:"uOcclusionPower",type:ge,value:1},{name:"uOcclusionStrength",type:ge,value:1},{name:"uBlendRate",type:ge,value:1}],uniformBlockNames:[wt,bt]}),this.occlusionSampleLength=.121,this.occlusionBias=1e-4,this.occlusionMinDistance=.006,this.occlusionMaxDistance=.2,this.occlusionColor=new Nt(0,0,0,1),this.occlusionPower=1.85,this.occlusionStrength=.448,this.blendRate=1,this.samplingTexture=a}setSize(e,t){super.setSize(e,t),this.material.uniforms.setValue(Qe,e),this.material.uniforms.setValue(Ze,t)}render(e){this.material.uniforms.setValue("uOcclusionSampleLength",this.occlusionSampleLength),this.material.uniforms.setValue("uOcclusionBias",this.occlusionBias),this.material.uniforms.setValue("uOcclusionMinDistance",this.occlusionMinDistance),this.material.uniforms.setValue("uOcclusionMaxDistance",this.occlusionMaxDistance),this.material.uniforms.setValue("uOcclusionColor",this.occlusionColor),this.material.uniforms.setValue("uOcclusionPower",this.occlusionPower),this.material.uniforms.setValue("uOcclusionStrength",this.occlusionStrength),this.material.uniforms.setValue("uBlendRate",this.blendRate),this.material.uniforms.setValue("uSamplingTexture",this.samplingTexture),super.render(e)}}class Ir extends Rr{constructor({gpu:e}){super({gpu:e,fragmentShader:"#version 300 es\nprecision highp float;\n#pragma DEFINES\nin vec2 vUv;out vec4 outColor;\n#define saturate(a)clamp(a,0.,1.)\nfloat u(vec2 u){return fract(sin(dot(u,vec2(12.9898,78.233)))*43758.5453);}layout(std140) uniform ubCommon{float uTime;vec4 uViewport;};layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};\n#define SHADING_MODEL_NUM 3.\nstruct GBufferA{vec3 baseColor;};struct GBufferB{vec3 normal;float shadingModelId;};struct GBufferC{float metallic;float roughness;};struct GBufferD{vec3 emissiveColor;};GBufferA u(sampler2D u,vec2 v){GBufferA f;f.baseColor=texture(u,v).xyz;return f;}GBufferB e(sampler2D u,vec2 v){vec4 s=texture(u,v);GBufferB f;f.normal=normalize(s.xyz*2.-1.);f.shadingModelId=s.w*SHADING_MODEL_NUM;return f;}GBufferC t(sampler2D u,vec2 v){vec4 f=texture(u,v);GBufferC x;x.metallic=f.x;x.roughness=f.y;return x;}uniform sampler2D uSrcTexture,uDepthTexture,uGBufferATexture,uGBufferBTexture,uGBufferCTexture;uniform float uBlendRate,uRayDepthBias,uRayNearestDistance,uRayMaxDistance,uReflectionRayThickness,uReflectionRayJitterSizeX,uReflectionRayJitterSizeY,uReflectionFadeMinDistance,uReflectionFadeMaxDistance,uReflectionScreenEdgeFadeFactorMinX,uReflectionScreenEdgeFadeFactorMaxX,uReflectionScreenEdgeFadeFactorMinY,uReflectionScreenEdgeFadeFactorMaxY,uReflectionRoughnessPower,uReflectionAdditionalRate;float e(float u,float e,float v){float f=e*u;return-f/(v*(u-1.)-f);}vec3 t(vec2 u,float e,mat4 v){vec4 f=v*vec4(u*2.-1.,e*2.-1.,1);return f.xyz/f.w;}float u(sampler2D u,vec3 e,mat4 v){vec4 f=v*vec4(e+vec3(0),1);return textureLod(u,(f.xyz/f.w).xy*.5+.5,0.).x;}void main(){vec2 v=vUv;GBufferA f=u(uGBufferATexture,v);GBufferB s=e(uGBufferBTexture,v);GBufferC G=t(uGBufferCTexture,v);vec3 x=normalize((uTransposeInverseViewMatrix*vec4(s.normal,1)).xyz);vec4 r=texture(uSrcTexture,v),m=vec4(0,0,0,1);vec3 n=t(vUv,texture(uDepthTexture,v).x,uInverseProjectionMatrix),w=normalize(vec3(u(v+.1),u(v+.2),u(v+.3))*2.-1.),c=reflect(normalize(n),x)+w*G.roughness*uReflectionRoughnessPower,z=n;float Y=uRayMaxDistance/float(16);vec3 X=z;bool a=false;float b=1.,d=u(v+uTime)*2.-1.;vec2 i=vec2(d*uReflectionRayJitterSizeX,d*uReflectionRayJitterSizeY);float D=e(texture(uDepthTexture,v).x,uNearClip,uFarClip);if(D>.999){outColor=r;return;}for(int l=0;l<16;l++){float S=Y*(float(l)+1.)+uRayNearestDistance;X=z+vec3(i,0)+c*S;float h=u(uDepthTexture,X,uProjectionMatrix);vec3 o=t(v,h,uInverseProjectionMatrix);vec4 A=uProjectionMatrix*vec4(X,1);A.xyz=A.xyz/A.w;if(abs(A.x)>1.||abs(A.y)>1.)break;float B=o.z-X.z;if(uRayDepthBias<B&&B<uReflectionRayThickness){a=true;break;}}if(a){X-=c*Y;float S=Y,l=1.;vec3 A=n;for(int o=0;o<4;o++){S*=.5*l;X+=c*S;float h=u(uDepthTexture,X,uProjectionMatrix);A=t(v,h,uInverseProjectionMatrix);float B=A.z-X.z;l=uRayDepthBias<B?-1.:1.;}vec4 h=uProjectionMatrix*vec4(X,1);float o=(abs(v.x*2.-1.)-uReflectionScreenEdgeFadeFactorMinX)/max(uReflectionScreenEdgeFadeFactorMaxX-uReflectionScreenEdgeFadeFactorMinX,.001),p=(abs(v.y*2.-1.)-uReflectionScreenEdgeFadeFactorMinY)/max(uReflectionScreenEdgeFadeFactorMaxY-uReflectionScreenEdgeFadeFactorMinY,.001);o=1.-clamp(o,0.,1.);p=1.-clamp(p,0.,1.);float B=distance(n,A),y=(B-uReflectionFadeMinDistance)/max(uReflectionFadeMaxDistance-uReflectionFadeMinDistance,.001);y=clamp(y,0.,1.);y=1.-y*y;b=y*o*p;m+=texture(uSrcTexture,h.xy/h.w*.5+.5)*vec4(mix(vec3(.04),f.baseColor*G.metallic,G.metallic),1)*b*uReflectionAdditionalRate;}vec4 o=mix(r,r+m,uBlendRate);outColor=o;}",uniforms:[{name:ze,type:oe,value:null},{name:Ne,type:oe,value:null},{name:Le,type:oe,value:null},{name:Ge,type:oe,value:null},{name:"uRayDepthBias",type:ge,value:0},{name:"uRayNearestDistance",type:ge,value:0},{name:"uRayMaxDistance",type:ge,value:0},{name:"uReflectionAdditionalRate",type:ge,value:0},{name:"uReflectionRayThickness",type:ge,value:0},{name:"uReflectionRayJitterSizeX",type:ge,value:0},{name:"uReflectionRayJitterSizeY",type:ge,value:0},{name:"uReflectionFadeMinDistance",type:ge,value:0},{name:"uReflectionFadeMaxDistance",type:ge,value:0},{name:"uReflectionScreenEdgeFadeFactorMinX",type:ge,value:0},{name:"uReflectionScreenEdgeFadeFactorMaxX",type:ge,value:0},{name:"uReflectionScreenEdgeFadeFactorMinY",type:ge,value:0},{name:"uReflectionScreenEdgeFadeFactorMaxY",type:ge,value:0},{name:"uReflectionRoughnessPower",type:ge,value:0},{name:"uBlendRate",type:ge,value:1}],renderTargetType:q,uniformBlockNames:[yt]}),this.rayDepthBias=.0099,this.rayNearestDistance=.13,this.rayMaxDistance=3.25,this.reflectionRayThickness=.3,this.reflectionRayJitterSizeX=.05,this.reflectionRayJitterSizeY=.05,this.reflectionFadeMinDistance=0,this.reflectionFadeMaxDistance=4.2,this.reflectionScreenEdgeFadeFactorMinX=.42,this.reflectionScreenEdgeFadeFactorMaxX=.955,this.reflectionScreenEdgeFadeFactorMinY=.444,this.reflectionScreenEdgeFadeFactorMaxY=1,this.reflectionRoughnessPower=.5,this.reflectionAdditionalRate=.355,this.blendRate=1}setSize(e,t){super.setSize(e,t),this.material.uniforms.setValue(Qe,e),this.material.uniforms.setValue(Ze,t)}render(e){this.material.uniforms.setValue("uRayDepthBias",this.rayDepthBias),this.material.uniforms.setValue("uRayNearestDistance",this.rayNearestDistance),this.material.uniforms.setValue("uRayMaxDistance",this.rayMaxDistance),this.material.uniforms.setValue("uReflectionRayThickness",this.reflectionRayThickness),this.material.uniforms.setValue("uReflectionRayJitterSizeX",this.reflectionRayJitterSizeX),this.material.uniforms.setValue("uReflectionRayJitterSizeY",this.reflectionRayJitterSizeY),this.material.uniforms.setValue("uReflectionFadeMinDistance",this.reflectionFadeMinDistance),this.material.uniforms.setValue("uReflectionFadeMaxDistance",this.reflectionFadeMaxDistance),this.material.uniforms.setValue("uReflectionScreenEdgeFadeFactorMinX",this.reflectionScreenEdgeFadeFactorMinX),this.material.uniforms.setValue("uReflectionScreenEdgeFadeFactorMaxX",this.reflectionScreenEdgeFadeFactorMaxX),this.material.uniforms.setValue("uReflectionScreenEdgeFadeFactorMinY",this.reflectionScreenEdgeFadeFactorMinY),this.material.uniforms.setValue("uReflectionScreenEdgeFadeFactorMaxY",this.reflectionScreenEdgeFadeFactorMaxY),this.material.uniforms.setValue("uReflectionAdditionalRate",this.reflectionAdditionalRate),this.material.uniforms.setValue("uReflectionRoughnessPower",this.reflectionRoughnessPower),this.material.uniforms.setValue("uBlendRate",this.blendRate),super.render(e)}}class zr extends Rr{constructor({gpu:e}){super({gpu:e,name:"ToneMappingPass",fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;vec3 v(vec3 v){return clamp(v*(2.51*v+.03)/(v*(2.43*v+.59)+.14),0.,1.);}void main(){vec3 o=texture(uSrcTexture,vUv).xyz;o=v(o);o=pow(o,vec3(1./2.2));if(o.x>1.||o.y>1.||o.z>1.)o=vec3(1,0,1);outColor=vec4(o,1);}",uniforms:[{name:Je,type:oe,value:null}]})}render(e){super.render(e)}}class Nr extends Rr{constructor({gpu:e,fragmentShader:t,uniforms:r=[],uniformBlockNames:a=[],name:i,renderTargetType:s,srcTextureEnabled:n}){super({gpu:e,fragmentShader:t,uniforms:r,uniformBlockNames:a,name:i,renderTargetType:s,srcTextureEnabled:n})}}function Lr(e,t){const r=Math.floor(e/2);let a=0;const i=new Array(e).fill(0).map(((e,i)=>{const s=function(e,t){const r=e*e;return Math.exp(-t*t/(2*r))}(t,i-r);return a+=s,s}));return i.map((e=>e/a))}const Or="#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform float uTargetWidth,uTargetHeight;uniform float[7] uBlurWeights;uniform float uIsHorizontal;void main(){vec4 u=vec4(0);vec2 f=vec2(1./uTargetWidth,1./uTargetHeight);float v=floor(float(7)/2.);for(int i=0;i<7;i++){float l=float(i)-v,r=uBlurWeights[i];u+=texture(uSrcTexture,vUv+vec2(step(.5,uIsHorizontal)>.5?l:0.,step(.5,uIsHorizontal)>.5?0.:l)*f)*r;}outColor=u;}";class kr{constructor({gpu:e,threshold:t=0,tone:r=1,bloomAmount:a=1}){this.name="BloomPass",this.enabled=!0,this.width=1,this.height=1,this.materials=[],this.threshold=0,this.tone=1,this.bloomAmount=.8,this.threshold=t,this.tone=r,this.bloomAmount=a,this.geometry=new Cr({gpu:e}),this.renderTargetBlurMip4_Horizontal=new Sr({gpu:e,type:q}),this.renderTargetBlurMip4_Vertical=new Sr({gpu:e,type:q}),this.renderTargetBlurMip8_Horizontal=new Sr({gpu:e,type:q}),this.renderTargetBlurMip8_Vertical=new Sr({gpu:e,type:q}),this.renderTargetBlurMip16_Horizontal=new Sr({gpu:e,type:q}),this.renderTargetBlurMip16_Vertical=new Sr({gpu:e,type:q}),this.renderTargetBlurMip32_Horizontal=new Sr({gpu:e,type:q}),this.renderTargetBlurMip32_Vertical=new Sr({gpu:e,type:q}),this.renderTargetBlurMip64_Horizontal=new Sr({gpu:e,type:q}),this.renderTargetBlurMip64_Vertical=new Sr({gpu:e,type:q}),this.extractBrightnessPass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;out vec4 outColor;in vec2 vUv;uniform sampler2D uSrcTexture;uniform float uThreshold;void main(){outColor=vec4(max(texture(uSrcTexture,vUv).xyz-vec3(1.+uThreshold),vec3(0)),1);}",uniforms:[{name:"uThreshold",type:ge,value:this.threshold}],renderTargetType:q}),this.materials.push(...this.extractBrightnessPass.materials);const i=Lr(7,.92);this.horizontalBlurMaterial=new Jt({vertexShader:Rr.baseVertexShader,fragmentShader:Or,uniforms:[{name:Je,type:oe,value:null},{name:"uBlurWeights",type:ve,value:new Float32Array(i)},{name:"uIsHorizontal",type:ge,value:1},...Rr.commonUniforms]}),this.materials.push(this.horizontalBlurMaterial),this.verticalBlurMaterial=new Jt({vertexShader:Rr.baseVertexShader,fragmentShader:Or,uniforms:[{name:Je,type:oe,value:null},{name:"uBlurWeights",type:ve,value:new Float32Array(i)},{name:"uIsHorizontal",type:ge,value:0},...Rr.commonUniforms]}),this.materials.push(this.verticalBlurMaterial),this.compositePass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture,uBlur4Texture,uBlur8Texture,uBlur16Texture,uBlur32Texture,uBlur64Texture,uExtractTexture;uniform float uTone,uBloomAmount;void main(){outColor=texture(uSrcTexture,vUv)*uTone+(texture(uBlur4Texture,vUv)+texture(uBlur8Texture,vUv)+texture(uBlur16Texture,vUv)+texture(uBlur32Texture,vUv)+texture(uBlur64Texture,vUv))*.2*uBloomAmount;}",uniforms:[{name:Je,type:oe,value:null},{name:"uBlur4Texture",type:oe,value:null},{name:"uBlur8Texture",type:oe,value:null},{name:"uBlur16Texture",type:oe,value:null},{name:"uBlur32Texture",type:oe,value:null},{name:"uTone",type:ge,value:this.tone},{name:"uBloomAmount",type:ge,value:this.bloomAmount},{name:"uExtractTexture",type:oe,value:null},...Rr.commonUniforms],renderTargetType:q}),this.materials.push(...this.compositePass.materials)}get renderTargetBlurMip4(){return this.renderTargetBlurMip4_Vertical}get renderTargetBlurMip8(){return this.renderTargetBlurMip8_Vertical}get renderTargetBlurMip16(){return this.renderTargetBlurMip16_Vertical}get renderTargetBlurMip32(){return this.renderTargetBlurMip32_Vertical}get renderTargetBlurMip64(){return this.renderTargetBlurMip64_Vertical}get renderTarget(){return this.compositePass.renderTarget}setSize(e,t){this.width=e,this.height=t,this.extractBrightnessPass.setSize(e,t),this.renderTargetBlurMip4_Horizontal.setSize(this.width/4,this.height/4),this.renderTargetBlurMip4_Vertical.setSize(this.width/4,this.height/4),this.renderTargetBlurMip8_Horizontal.setSize(this.width/8,this.height/8),this.renderTargetBlurMip8_Vertical.setSize(this.width/8,this.height/8),this.renderTargetBlurMip16_Horizontal.setSize(this.width/16,this.height/16),this.renderTargetBlurMip16_Vertical.setSize(this.width/16,this.height/16),this.renderTargetBlurMip32_Horizontal.setSize(this.width/32,this.height/32),this.renderTargetBlurMip32_Vertical.setSize(this.width/32,this.height/32),this.renderTargetBlurMip64_Horizontal.setSize(this.width/64,this.height/64),this.renderTargetBlurMip64_Vertical.setSize(this.width/64,this.height/64),this.compositePass.setSize(e,t)}setRenderTarget(e,t,r){}update(){}render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:i,gBufferRenderTargets:s,targetCamera:n,time:o}){this.geometry.start(),this.horizontalBlurMaterial.isCompiledShader||this.horizontalBlurMaterial.start({gpu:e,attributeDescriptors:this.geometry.getAttributeDescriptors()}),this.verticalBlurMaterial.isCompiledShader||this.verticalBlurMaterial.start({gpu:e,attributeDescriptors:this.geometry.getAttributeDescriptors()}),this.extractBrightnessPass.material.uniforms.setValue("uThreshold",this.threshold),this.extractBrightnessPass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:!1,targetCamera:n,time:o});const u=(e,t,a,i)=>{const s=this.width/i,n=this.height/i;r.setRenderTarget(e,!0),this.horizontalBlurMaterial.uniforms.setValue(Je,a.texture),this.horizontalBlurMaterial.uniforms.setValue("uTargetWidth",s),this.horizontalBlurMaterial.uniforms.setValue("uTargetHeight",s),r.renderMesh(this.geometry,this.horizontalBlurMaterial),r.setRenderTarget(t,!0),this.verticalBlurMaterial.uniforms.setValue(Je,e.texture),this.verticalBlurMaterial.uniforms.setValue("uTargetWidth",s),this.verticalBlurMaterial.uniforms.setValue("uTargetHeight",n),r.renderMesh(this.geometry,this.verticalBlurMaterial)};u(this.renderTargetBlurMip4_Horizontal,this.renderTargetBlurMip4_Vertical,this.extractBrightnessPass.renderTarget,4),u(this.renderTargetBlurMip8_Horizontal,this.renderTargetBlurMip8_Vertical,this.renderTargetBlurMip4_Vertical,8),u(this.renderTargetBlurMip16_Horizontal,this.renderTargetBlurMip16_Vertical,this.renderTargetBlurMip8_Vertical,16),u(this.renderTargetBlurMip32_Horizontal,this.renderTargetBlurMip32_Vertical,this.renderTargetBlurMip16_Vertical,32),u(this.renderTargetBlurMip64_Horizontal,this.renderTargetBlurMip64_Vertical,this.renderTargetBlurMip32_Vertical,64),a&&this.compositePass.material.uniforms.setValue(Je,a.texture),this.compositePass.material.uniforms.setValue("uBlur4Texture",this.renderTargetBlurMip4_Vertical.texture),this.compositePass.material.uniforms.setValue("uBlur8Texture",this.renderTargetBlurMip8_Vertical.texture),this.compositePass.material.uniforms.setValue("uBlur16Texture",this.renderTargetBlurMip16_Vertical.texture),this.compositePass.material.uniforms.setValue("uBlur32Texture",this.renderTargetBlurMip32_Vertical.texture),this.compositePass.material.uniforms.setValue("uBlur64Texture",this.renderTargetBlurMip64_Vertical.texture),this.compositePass.material.uniforms.setValue("uExtractTexture",this.extractBrightnessPass.renderTarget.texture),this.compositePass.material.uniforms.setValue("uTone",this.tone),this.compositePass.material.uniforms.setValue("uBloomAmount",this.bloomAmount),this.compositePass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:null,isLastPass:i,targetCamera:n,gBufferRenderTargets:s,time:o})}}class Gr{constructor(e,t){this.elements=new Float32Array(2),this.set(e,t)}get x(){return this.elements[0]}get y(){return this.elements[1]}set x(e){this.elements[0]=e}set y(e){this.elements[1]=e}set(e,t){return this.elements=new Float32Array([e,t]),this}static get identity(){return new Gr(0,0)}static get one(){return new Gr(1,1)}static get zero(){return new Gr(0,0)}static subVectors(e,t){return new Gr(e.x-t.x,e.y-t.y)}copy(e){return this.x=e.x,this.y=e.y,this}div(e){return this.x/=e.x,this.y/=e.y,this}log(){}}class jr{constructor({gpu:e}){this.focusDistance=14,this.focusRange=10,this.bokehRadius=4,this.name="DepthOfFieldPass",this.enabled=!0,this.width=1,this.height=1,this.materials=[],this.geometry=new Cr({gpu:e}),this.circleOfConfusionPass=new Nr({name:"circleOfConfusionPass",gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;float u(float u,float v,float f){float m=v*u;return-m/(f*(u-1.)-m);}float v(float v,float f,float e){return mix(f,e,u(v,f,e));}in vec2 vUv;out vec4 outColor;layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};uniform sampler2D uSrcTexture,uDepthTexture;uniform float uFocusDistance,uFocusRange,uBokehRadius;void main(){float u=v(texture(uDepthTexture,vUv).x,uNearClip,uFarClip),f=(u-uFocusDistance)/uFocusRange;f=clamp(f,-1.,1.)*uBokehRadius;outColor=vec4(vec3(f),1);}",uniforms:[{name:Je,type:oe,value:null},{name:Ge,type:oe,value:null},{name:"uFocusDistance",type:ge,value:this.focusDistance},{name:"uFocusRange",type:ge,value:this.focusRange},{name:"uBokehRadius",type:ge,value:this.bokehRadius},{name:"uCocParams",type:me,value:Ot.zero},...Rr.commonUniforms],uniformBlockNames:[bt],renderTargetType:Q}),this.materials.push(...this.circleOfConfusionPass.materials),this.preFilterPass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture,uCocTexture;uniform vec2 uTexelSize;float e(vec3 v){return 1./(1.+max(max(v.x,v.y),v.z));}void main(){vec4 v=uTexelSize.xyxy*vec2(-.5,.5).xxyy;vec3 u=texture(uSrcTexture,vUv+v.xy).xyz,m=texture(uSrcTexture,vUv+v.zy).xyz,y=texture(uSrcTexture,vUv+v.xw).xyz,w=texture(uSrcTexture,vUv+v.zw).xyz;float x=e(u),z=e(m),r=e(y),t=e(w),C=texture(uCocTexture,vUv+v.xy).xyz.x,D=texture(uCocTexture,vUv+v.zy).xyz.x,L=texture(uCocTexture,vUv+v.xw).xyz.x,K=texture(uCocTexture,vUv+v.zw).xyz.x,f=0.,I=min(min(min(C,D),L),K),d=max(max(max(C,D),L),K);f=d>=-I?d:I;vec3 o=u*x+m*z+y*r+w*t;o/=dot(vec4(x,z,r,t),vec4(1));outColor=vec4(o.xyz,f);}",uniforms:[{name:"uCocTexture",type:oe,value:null},{name:"uTexelSize",type:le,value:Gr.zero},...Rr.commonUniforms],renderTargetType:K}),this.materials.push(...this.preFilterPass.materials),this.dofBokehPass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform vec2 uTexelSize;uniform float uBokehRadius;\n#define BOKEH_KERNEL_MEDIUM\n#define KERNEL_SAMPLE_COUNT 22\nconst vec2[22] v=vec2[](vec2(0),vec2(.53333336,0),vec2(.3325279,.4169768),vec2(-.11867785,.5199616),vec2(-.48051673,.2314047),vec2(-.48051673,-.23140468),vec2(-.11867763,-.51996166),vec2(.33252785,-.4169769),vec2(1,0),vec2(.90096885,.43388376),vec2(.6234898,.7818315),vec2(.22252098,.9749279),vec2(-.22252095,.9749279),vec2(-.62349,.7818314),vec2(-.90096885,.43388382),vec2(-1,0),vec2(-.90096885,-.43388376),vec2(-.6234896,-.7818316),vec2(-.22252055,-.974928),vec2(.2225215,-.9749278),vec2(.6234897,-.7818316),vec2(.90096885,-.43388376));float m(float v,float m){return clamp((v-m+2.)/2.,0.,1.);}void main(){vec2 e=uTexelSize;vec3 f=vec3(0),u=vec3(0);float o=0.,i=0.,T=texture(uSrcTexture,vUv).w;for(int B=0;B<KERNEL_SAMPLE_COUNT;B++){vec2 K=v[B].xy*uBokehRadius;float c=length(K);K*=e;vec4 t=texture(uSrcTexture,vUv+K);float s=m(max(0.,min(t.w,T)),c);f+=t.xyz*s;o+=s;float r=m(-t.w,c);u+=t.xyz*r;i+=r;}f*=vec3(1)/(o+(o==0.?1.:0.));u*=vec3(1)/(i+(i==0.?1.:0.));float c=min(1.,i*3.141592/float(KERNEL_SAMPLE_COUNT));vec3 K=mix(f,u,c);outColor=vec4(K,c);}",renderTargetType:K,uniforms:[{name:"uTexelSize",type:le,value:Gr.zero},{name:"uBokehRadius",type:ge,value:this.bokehRadius},{name:"uBokehKernel",type:de,value:[]}]}),this.materials.push(...this.dofBokehPass.materials),this.bokehBlurPass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform vec2 uTexelSize;uniform float uBokehRadius;void main(){vec4 v=uTexelSize.xyxy*vec2(-.5,.5).xxyy;outColor=(texture(uSrcTexture,vUv+v.xy)+texture(uSrcTexture,vUv+v.zy)+texture(uSrcTexture,vUv+v.xw)+texture(uSrcTexture,vUv+v.zw))*.25;}",renderTargetType:K,uniforms:[{name:"uTexelSize",type:le,value:Gr.zero},{name:"uBokehRadius",type:ge,value:this.bokehRadius}]}),this.materials.push(...this.bokehBlurPass.materials),this.compositePass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture,uCocTexture,uDofTexture;void main(){vec4 v=texture(uDofTexture,vUv);float u=smoothstep(.1,1.,texture(uCocTexture,vUv).x);outColor=vec4(mix(texture(uSrcTexture,vUv).xyz,v.xyz,u+v.w-u*v.w),1);}",renderTargetType:q,uniforms:[{name:"uCocTexture",type:oe,value:null},{name:"uDofTexture",type:oe,value:null}]}),this.materials.push(...this.compositePass.materials)}get renderTarget(){return this.compositePass.renderTarget}setSize(e,t){this.width=e,this.height=t,this.circleOfConfusionPass.setSize(e,t),this.preFilterPass.setSize(e/2,t/2),this.dofBokehPass.setSize(e/2,t/2),this.bokehBlurPass.setSize(e/2,t/2),this.compositePass.setSize(e,t)}setRenderTarget(e,t,r){}update(){}render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:i,gBufferRenderTargets:s,targetCamera:n,time:o}){this.geometry.start(),this.circleOfConfusionPass.material.uniforms.setValue("uFocusDistance",this.focusDistance),this.circleOfConfusionPass.material.uniforms.setValue("uFocusRange",this.focusRange),this.circleOfConfusionPass.material.uniforms.setValue("uBokehRadius",this.bokehRadius),this.circleOfConfusionPass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.preFilterPass.material.uniforms.setValue("uCocTexture",this.circleOfConfusionPass.renderTarget.texture),this.preFilterPass.material.uniforms.setValue("uTexelSize",new Gr(1/this.circleOfConfusionPass.width,1/this.circleOfConfusionPass.height)),this.preFilterPass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.dofBokehPass.material.uniforms.setValue("uTexelSize",new Gr(1/this.preFilterPass.width,1/this.preFilterPass.height)),this.dofBokehPass.material.uniforms.setValue("uBokehRadius",this.bokehRadius),this.dofBokehPass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:this.preFilterPass.renderTarget,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.bokehBlurPass.material.uniforms.setValue("uTexelSize",new Gr(1/this.dofBokehPass.width,1/this.dofBokehPass.height)),this.bokehBlurPass.material.uniforms.setValue("uBokehRadius",this.bokehRadius),this.bokehBlurPass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:this.dofBokehPass.renderTarget,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.compositePass.material.uniforms.setValue("uCocTexture",this.circleOfConfusionPass.renderTarget.texture),this.compositePass.material.uniforms.setValue("uDofTexture",this.bokehBlurPass.renderTarget.texture),this.compositePass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:i,targetCamera:n,gBufferRenderTargets:s,time:o})}}const Xr="#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform vec2 uRadialBlurOrigin;uniform float uRadialBlurPassScaleBase,uRadialBlurPassIndex,uRadialBlurRayStepStrength;void main(){outColor=texture(uSrcTexture,vUv);float v=0.;vec4 u=vec4(0);vec2 e=(uRadialBlurOrigin-vUv)*pow(uRadialBlurPassScaleBase*float(12),uRadialBlurPassIndex)*uRadialBlurRayStepStrength;for(int f=0;f<=12;f++){float r=float(f);vec2 o=vUv+e*r;o=vec2(clamp(o.x,0.,1.),clamp(o.y,0.,1.));u+=texture(uSrcTexture,o);v+=1.;}u/=v;outColor=u;}";class Hr{constructor({gpu:e,ratio:t=.5}){this.blendRate=.65,this.passScaleBase=.2,this.rayStepStrength=.012,this.name="LightShaftPass",this.enabled=!0,this.width=1,this.height=1,this.materials=[],this.#g=null,this.#v="uRadialBlurOrigin",this.#x="uRadialBlurPassScaleBase",this.#T="uRadialBlurPassIndex",this.#y="uRadialBlurRayStepStrength",this.ratio=1,this.ratio=t,this.geometry=new Cr({gpu:e}),this.lightShaftDownSamplePass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture,uDepthTexture;uniform float uNearClip,uFarClip;void main(){float v=texture(uDepthTexture,vUv).x,u=step(1e-4,1.-v)*v;u*=smoothstep(0.,.05,vUv.x)*(1.-smoothstep(.95,1.,vUv.x))*smoothstep(0.,.05,vUv.y)*(1.-smoothstep(.95,1.,vUv.y));outColor=vec4(vec3(u),1);}",renderTargetType:q,uniforms:[{name:Ge,type:oe,value:null},...Rr.commonUniforms]}),this.materials.push(...this.lightShaftDownSamplePass.materials),this.blur1Pass=new Nr({gpu:e,fragmentShader:Xr,renderTargetType:q,uniforms:[{name:this.#T,type:ge,value:0},{name:this.#v,type:le,value:Gr.identity},{name:this.#x,type:ge,value:this.passScaleBase},{name:this.#y,type:ge,value:this.rayStepStrength}]}),this.materials.push(...this.blur1Pass.materials),this.blur2Pass=new Nr({gpu:e,fragmentShader:Xr,renderTargetType:q,uniforms:[{name:this.#T,type:ge,value:1},{name:this.#v,type:le,value:Gr.identity},{name:this.#x,type:ge,value:this.passScaleBase},{name:this.#y,type:ge,value:this.rayStepStrength}]}),this.materials.push(...this.blur2Pass.materials),this.blur3Pass=new Nr({gpu:e,fragmentShader:Xr,renderTargetType:q,uniforms:[{name:this.#T,type:ge,value:2},{name:this.#v,type:le,value:Gr.identity},{name:this.#x,type:ge,value:this.passScaleBase},{name:this.#y,type:ge,value:this.rayStepStrength}]}),this.materials.push(...this.blur3Pass.materials),this.compositePass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture,uLightShaftTexture;uniform float uBlendRate;void main(){vec4 v=texture(uLightShaftTexture,vUv);float u=mix(0.,1.,v.x*v.x);u*=uBlendRate;outColor=vec4(vec3(u),1);}",renderTargetType:q,uniforms:[{name:"uLightShaftTexture",type:oe,value:null},{name:"uBlendRate",type:ge,value:this.blendRate}]}),this.materials.push(...this.compositePass.materials)}#g;#v;#x;#T;#y;get renderTarget(){return this.compositePass.renderTarget}setSize(e,t){this.width=e*this.ratio,this.height=t*this.ratio,this.lightShaftDownSamplePass.setSize(this.width,this.height),this.blur1Pass.setSize(this.width,this.height),this.blur2Pass.setSize(this.width,this.height),this.blur3Pass.setSize(this.width,this.height),this.compositePass.setSize(this.width,this.height)}setRenderTarget(e,t,r){}update(){}render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:i,gBufferRenderTargets:s,targetCamera:n,time:o}){this.geometry.start(),this.lightShaftDownSamplePass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o});const u=n.transformScreenPoint(this.#g.transform.position.clone().scale(1e4)),l=new Gr(.5*u.x+.5,.5*u.y+.5);this.blur1Pass.material.uniforms.setValue(this.#v,l),this.blur1Pass.material.uniforms.setValue(this.#x,this.passScaleBase),this.blur1Pass.material.uniforms.setValue(this.#y,this.rayStepStrength),this.blur2Pass.material.uniforms.setValue(this.#v,l),this.blur2Pass.material.uniforms.setValue(this.#x,this.passScaleBase),this.blur2Pass.material.uniforms.setValue(this.#y,this.rayStepStrength),this.blur3Pass.material.uniforms.setValue(this.#v,l),this.blur3Pass.material.uniforms.setValue(this.#x,this.passScaleBase),this.blur3Pass.material.uniforms.setValue(this.#y,this.rayStepStrength),this.blur1Pass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:this.lightShaftDownSamplePass.renderTarget,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.blur2Pass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:this.blur1Pass.renderTarget,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.blur3Pass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:this.blur2Pass.renderTarget,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.compositePass.material.uniforms.setValue("uLightShaftTexture",this.blur3Pass.renderTarget.read.texture),this.compositePass.material.uniforms.setValue("uBlendRate",this.blendRate),this.compositePass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:i,targetCamera:n,gBufferRenderTargets:s,time:o})}setDirectionalLight(e){this.#g=e}}class Wr extends Rr{constructor({gpu:e,ratio:t}){super({gpu:e,fragmentShader:"#version 300 es\nprecision highp float;\n#pragma DEFINES\n#define MAX_SPOT_LIGHT_COUNT 4\n#define MARCH_COUNT 64\n#define MARCH_COUNT_F 64.\n#define saturate(a)clamp(a,0.,1.)\nbool u(const float u,const float f){return any(bvec2(f==0.,u<f));}float u(const float u,const float e,const float f){return f>0.?pow(saturate(-u/e+1.),f):1.;}in vec2 vUv;out vec4 outColor;layout(std140) uniform ubCommon{float uTime;vec4 uViewport;};layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};struct SpotLight{vec4 color;vec3 position;vec3 direction;float intensity;float distance;float attenuation;float coneCos;float penumbraCos;mat4 shadowMapProjectionMatrix;};layout(std140) uniform ubSpotLight{SpotLight uSpotLight[MAX_SPOT_LIGHT_COUNT];};uniform sampler2D uSrcTexture,uGBufferATexture,uDepthTexture,uVolumetricDepthTexture;uniform float uBlendRate;uniform sampler2D uSpotLightShadowMap[MAX_SPOT_LIGHT_COUNT];uniform float uDensityMultiplier,uRayStep,uRayJitterSizeX,uRayJitterSizeY;float f(float u,float e,float f){float s=e*u;return-s/(f*(u-1.)-s);}float e(float u,float s,float e){return mix(s,e,f(u,s,e));}vec3 p(vec2 u,float f,mat4 e){vec4 s=e*vec4(u*2.-1.,f*2.-1.,1);return s.xyz/s.w;}\n#define SHADING_MODEL_NUM 3.\nstruct GBufferA{vec3 baseColor;};struct GBufferB{vec3 normal;float shadingModelId;};struct GBufferC{float metallic;float roughness;};struct GBufferD{vec3 emissiveColor;};float e(SpotLight f,sampler2D s,vec3 e,vec3 a,float M){float r=0.;vec4 v=f.shadowMapProjectionMatrix*vec4(e,1);vec3 c=v.xyz/v.w;float p=v.z/v.w,m=texture(s,c.xy).x,y=step(0.,c.x)*(1.-step(1.,c.x))*step(0.,c.y)*(1.-step(1.,c.y))*step(0.,c.z)*(1.-step(1.,c.z));vec3 n=f.position-e;float S=length(n),z=dot(normalize(-normalize(n)),f.direction),x=smoothstep(f.coneCos,f.penumbraCos,z),t=u(S,f.distance,f.attenuation);if(abs(a.z)<M)if(all(bvec4(z>f.coneCos,u(S,f.distance),m>p,m<1.)))r=1./MARCH_COUNT_F*t*x*y*uDensityMultiplier;return r;}void main(){vec2 u=vUv;float f=fract(sin(dot(u+uTime,vec2(12.9898,78.233)))*43758.5453)*2.-1.;vec2 s=vec2(f*uRayJitterSizeX,f*uRayJitterSizeY*uViewport.z);vec3 v=p(vUv,texture(uVolumetricDepthTexture,vUv).x,uInverseViewProjectionMatrix),c=v+vec3(s,0),y=normalize(c-uViewPosition);float r=0.;vec4 m=vec4(vec3(0),1);float[MAX_SPOT_LIGHT_COUNT] t;vec3 a,x;float z=e(texture(uDepthTexture,u).x,uNearClip,uFarClip);for(int n=0;n<MARCH_COUNT;n++)r=uRayStep*float(n),a=c+y*r,x=(uViewMatrix*vec4(a,1)).xyz,t[0]+=e(uSpotLight[0],uSpotLightShadowMap[0],a,x,z),t[1]+=e(uSpotLight[1],uSpotLightShadowMap[1],a,x,z),t[2]+=e(uSpotLight[2],uSpotLightShadowMap[2],a,x,z),t[3]+=e(uSpotLight[3],uSpotLightShadowMap[3],a,x,z);vec4 n=vec4(0);float l=0.;vec4 G=vec4(0);float M=0.;M=t[0]*uSpotLight[0].intensity*uBlendRate;l+=M;G=M*uSpotLight[0].color;n+=G;M=t[1]*uSpotLight[1].intensity*uBlendRate;l+=M;G=M*uSpotLight[1].color;n+=G;M=t[2]*uSpotLight[2].intensity*uBlendRate;l+=M;G=M*uSpotLight[2].color;n+=G;M=t[3]*uSpotLight[3].intensity*uBlendRate;l+=M;G=M*uSpotLight[3].color;n+=G;m.w=l;m.xyz=n.xyz;outColor=m;}",uniforms:[{name:mt,type:we,value:Ar.range(4).map((()=>null))},{name:"uRayStep",type:ge,value:0},{name:"uDensityMultiplier",type:ge,value:0},{name:"uRayJitterSizeX",type:ge,value:0},{name:"uRayJitterSizeY",type:ge,value:0},{name:ze,type:oe,value:null},{name:Ge,type:oe,value:null},{name:"uVolumetricDepthTexture",type:oe,value:null},{name:"uBlendRate",type:ge,value:1}],uniformBlockNames:[yt,wt,bt,St],renderTargetType:K}),this.rayStep=.5,this.blendRate=1,this.densityMultiplier=1,this.rayJitterSizeX=.1,this.rayJitterSizeY=.1,this.#w=[],this.ratio=.5,this.rawWidth=1,this.rawHeight=1,void 0!==t&&(this.ratio=t),this.renderTargetSpotLightFrustum=new Sr({gpu:e,type:Y,width:1,height:1,depthPrecision:W}),this.spotLightFrustumMaterial=new Jt({vertexShader:`#version 300 es\n                    \n                    layout (location = 0) in vec3 ${ie.Position};\n\nuniform mat4 uWorldMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\n                    \n                    // out vec4 vWorldPosition;\n                   \n                    void main() {\n                        vec4 worldPosition = ${Pe} * vec4(${ie.Position}, 1.);\n                        // vWorldPosition = worldPosition;\n                        gl_Position = ${Me} * ${Se} * worldPosition;\n                    }\n                    `,fragmentShader:"#version 300 es\n                   \n                    precision mediump float;\n\n                    // in vec4 vWorldPosition; \n                    out vec4 outColor;\n                 \n                    void main() {\n                        outColor = vec4(1., 0., 0., 1.);\n                        // outColor = vec4(vWorldPosition.xyz, 1.);\n                    }\n                    ",primitiveType:i,blendType:h,depthFuncType:u,depthWrite:!0,depthTest:!0,faceSide:z,uniforms:[{name:Pe,type:se,value:null},{name:Se,type:se,value:null},{name:Me,type:se,value:null}]}),this.materials.push(this.spotLightFrustumMaterial)}#w;setSize(e,t){this.rawWidth=e,this.rawHeight=t,this.width=Math.floor(e*this.ratio),this.height=Math.floor(t*this.ratio),super.setSize(this.width,this.height),this.renderTargetSpotLightFrustum.setSize(this.rawWidth,this.rawHeight),this.material.uniforms.setValue(Qe,this.width),this.material.uniforms.setValue(Ze,this.height)}render(e){const{gpu:t,renderer:r}=e;!this.spotLightFrustumMaterial.isCompiledShader&&this.#w.length>0&&this.spotLightFrustumMaterial.start({gpu:t,attributeDescriptors:this.#w[0].shadowCamera?.visibleFrustumMesh?.geometry.getAttributeDescriptors()}),r.setRenderTarget(this.renderTargetSpotLightFrustum.write,!1,!0),this.spotLightFrustumMaterial.uniforms.setValue(Se,e.targetCamera.viewMatrix),this.spotLightFrustumMaterial.uniforms.setValue(Me,e.targetCamera.projectionMatrix),this.#w.forEach((e=>{e.shadowCamera&&null!==e.shadowCamera.visibleFrustumMesh&&(this.spotLightFrustumMaterial.uniforms.setValue(Pe,e.shadowCamera.transform.worldMatrix),r.renderMesh(e.shadowCamera.visibleFrustumMesh.geometry,this.spotLightFrustumMaterial))})),this.material.uniforms.setValue(mt,this.#w.map((e=>e.shadowMap?e.shadowMap?.read.depthTexture:null))),this.material.uniforms.setValue("uVolumetricDepthTexture",this.renderTargetSpotLightFrustum.depthTexture),this.material.uniforms.setValue("uRayStep",this.rayStep),this.material.uniforms.setValue("uDensityMultiplier",this.densityMultiplier),this.material.uniforms.setValue("uRayJitterSizeX",this.rayJitterSizeX),this.material.uniforms.setValue("uRayJitterSizeY",this.rayJitterSizeY),this.material.uniforms.setValue("uBlendRate",this.blendRate),super.render(e)}setSpotLights(e){this.#w=e}}const $r="uFogColor",Yr="uFogStrength",Jr="uFogDensity",Kr="uFogDensityAttenuation",qr="uFogEndHeight",Qr="uDistanceFogStart",Zr="uDistanceFogPower";class ea extends Rr{constructor({gpu:e}){super({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;\n#define saturate(a)clamp(a,0.,1.)\nlayout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};uniform sampler2D uSrcTexture,uLightShaftTexture,uVolumetricLightTexture;uniform float uBlendRate;uniform sampler2D uDepthTexture;uniform vec4 uFogColor;uniform float uFogStrength,uFogDensity,uFogDensityAttenuation,uFogEndHeight,uDistanceFogStart,uDistanceFogPower;vec3 u(vec2 u,float e,mat4 v){vec4 f=v*vec4(u*2.-1.,e*2.-1.,1);return f.xyz/f.w;}float u(vec3 u,vec3 e,float v,float s){vec3 f=e-u;float m,a=length(f)*v*exp(-s*u.y);if(f.y==0.)m=exp(-a);else{float r=s*f.y;m=exp(a/r*(exp(-r)-1.));}return 1.-m;}float e(vec3 u,vec3 e,float v,float f){float m=length(e-u);m=max(0.,m-v);return max(0.,1.-exp(-m*f));}void main(){vec2 f=vUv;float m=saturate(texture(uLightShaftTexture,f).x),v=texture(uDepthTexture,f).x;vec3 s=u(f,v,uInverseViewProjectionMatrix);float r=u(s,uViewPosition,uFogDensity,uFogDensityAttenuation);r*=1.-step(.9999,v);r+=e(s,uViewPosition,uDistanceFogStart,uDistanceFogPower);r=saturate(r);outColor=vec4(mix((texture(uSrcTexture,f)*(1.-m)).xyz,uFogColor.xyz.xyz,r),1);outColor+=vec4(texture(uVolumetricLightTexture,f).xyz,0);}",renderTargetType:q,uniforms:[{name:$r,type:Te,value:Nt.white},{name:Ge,type:oe,value:null},{name:ea.lightShaftTextureUniformName,type:oe,value:null},{name:ea.volumetricLightTextureUniformName,type:oe,value:null},{name:Yr,type:ge,value:.01},{name:Jr,type:ge,value:.023},{name:Kr,type:ge,value:.45},{name:qr,type:ge,value:1},{name:Qr,type:ge,value:20},{name:Zr,type:ge,value:.1}],uniformBlockNames:[bt]}),this.fogColor=Nt.white,this.fogColor=Nt.white,this.fogStrength=.01,this.fogDensity=.023,this.fogDensityAttenuation=.45,this.fogEndHeight=1,this.distanceFogStart=20,this.distanceFogPower=.1}static{this.lightShaftTextureUniformName="uLightShaftTexture"}static{this.volumetricLightTextureUniformName="uVolumetricLightTexture"}setLightShaftMap(e){this.material.uniforms.setValue(ea.lightShaftTextureUniformName,e.read.texture)}setVolumetricLightMap(e){this.material.uniforms.setValue(ea.volumetricLightTextureUniformName,e.read.texture)}render(e){this.material.uniforms.setValue($r,this.fogColor),this.material.uniforms.setValue(Yr,this.fogStrength),this.material.uniforms.setValue(Jr,this.fogDensity),this.material.uniforms.setValue(Kr,this.fogDensityAttenuation),this.material.uniforms.setValue(qr,this.fogEndHeight),this.material.uniforms.setValue(Qr,this.distanceFogStart),this.material.uniforms.setValue(Zr,this.distanceFogPower),super.render(e)}}const ta="uChromaticAberrationScale";class ra extends Rr{constructor({gpu:e}){super({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;in vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform float uTargetWidth,uTargetHeight,uChromaticAberrationScale;const vec3 v[5]=vec3[](vec3(0,0,.5),vec3(0,.25,.5),vec3(0,.5,0),vec3(.5,.25,0),vec3(.5,0,0));void main(){vec2 e=vUv*2.-1.;outColor=vec4(0);for(int u=0;u<5;u++){vec2 f=e*(1.-uChromaticAberrationScale*(float(u)+1.)/float(5));f=(f+1.)*.5;vec3 m=v[u];vec4 i=texture(uSrcTexture,f);outColor+=vec4(i.xyz*m,1);}}",uniforms:[{name:ta,type:ge,value:.015}]}),this.chromaticAberrationScale=.015}setSize(e,t){super.setSize(e,t),this.material.uniforms.setValue(Qe,e),this.material.uniforms.setValue(Ze,t)}render(e){this.material.uniforms.setValue(ta,this.chromaticAberrationScale),super.render(e)}}const aa="uVignetteRadius",ia="uVignettePower",sa="uBlendRate";class na extends Rr{constructor({gpu:e}){super({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;\n#define saturate(a)clamp(a,0.,1.)\nin vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform float uVignetteRadius,uVignettePower,uBlendRate,uAspect;void main(){vec2 u=vUv*2.-1.;u.x*=uAspect;float v=dot(u,u);outColor=vec4(mix(texture(uSrcTexture,vUv).xyz,vec3(0),pow(min(1.,v/uVignetteRadius),uVignettePower)*uBlendRate),1);}",uniforms:[{name:aa,type:ge,value:2.5},{name:ia,type:ge,value:1.4},{name:sa,type:ge,value:1},{name:et,type:ge,value:1}]}),this.vignetteRadius=2.5,this.vignettePower=1.4,this.blendRate=1}setSize(e,t){super.setSize(e,t),this.material.uniforms.setValue(et,e/t)}render(e){this.material.uniforms.setValue(aa,this.vignetteRadius),this.material.uniforms.setValue(ia,this.vignettePower),this.material.uniforms.setValue(sa,this.blendRate),super.render(e)}}class oa{constructor({gpu:e,threshold:t,stretch:r,intensity:a,color:i,verticalScale:s,horizontalScale:n}){this.name="StreakPass",this.enabled=!0,this.width=1,this.height=1,this.threshold=.9,this.stretch=.5,this.color=Nt.white,this.intensity=.6,this.verticalScale=1.5,this.horizontalScale=1.25,this.materials=[],this.downSamplePasses=[],this.upSamplePasses=[],this.halfHeight=0,this.threshold=void 0!==t?t:this.threshold,this.color=void 0!==i?i:this.color,this.stretch=void 0!==r?r:this.stretch,this.intensity=void 0!==a?a:this.intensity,this.verticalScale=void 0!==s?s:this.verticalScale,this.horizontalScale=void 0!==n?n:this.horizontalScale,this.geometry=new Cr({gpu:e}),this.prefilterPass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;\n#define saturate(a)clamp(a,0.,1.)\nin vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform vec2 uTexelSize;uniform float uThreshold,uVerticalScale;void main(){float u=uTexelSize.y*uVerticalScale/2.;vec2 v=vUv;vec3 e=(texture(uSrcTexture,vec2(v.x,v.y-u)).xyz+texture(uSrcTexture,vec2(v.x,v.y+u)).xyz)/2.;float a=max(e.x,max(e.y,e.z));e*=max(0.,a-uThreshold)/max(a,1e-5);outColor=vec4(e,1);}",uniforms:[{name:Je,type:oe,value:null},{name:tt,type:le,value:Gr.zero},{name:"uThreshold",type:ge,value:this.threshold},{name:"uVerticalScale",type:ge,value:this.verticalScale},...Rr.commonUniforms],renderTargetType:q}),this.materials.push(...this.prefilterPass.materials);const o=[2,4,8,16,32].map((t=>{const r=new Nr({name:`DownSampleMip${t}Pass`,gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;\n#define saturate(a)clamp(a,0.,1.)\nin vec2 vUv;out vec4 outColor;uniform sampler2D uPrevTexture;uniform vec2 uTexelSize;uniform float uHorizontalScale;void main(){vec2 v=vUv;float e=uTexelSize.x*uHorizontalScale;outColor=vec4(((texture(uPrevTexture,vec2(v.x-e*5.,v.y))+texture(uPrevTexture,vec2(v.x-e*3.,v.y))+texture(uPrevTexture,vec2(v.x-e,v.y))+texture(uPrevTexture,vec2(v.x+e,v.y))+texture(uPrevTexture,vec2(v.x+e*3.,v.y))+texture(uPrevTexture,vec2(v.x+e*5.,v.y)))/6.).xyz,1);}",uniforms:[{name:tt,type:le,value:Gr.zero},{name:"uPrevTexture",type:oe,value:null},{name:"uHorizontalScale",type:ge,value:this.horizontalScale},...Rr.commonUniforms]});return this.materials.push(...r.materials),{pass:r,downScale:t}}));this.downSamplePasses=o.map((({pass:e,downScale:t},r)=>({pass:e,prevPass:0===r?this.prefilterPass:o[r-1].pass,downScale:t})));const u=Ar.range(5).map(((t,r)=>{const a=new Nr({name:`UpSampleMip${r}Pass`,gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;\n#define saturate(a)clamp(a,0.,1.)\nin vec2 vUv;out vec4 outColor;uniform sampler2D uDownSampleTexture,uPrevTexture;uniform float uStretch;void main(){vec2 u=vUv;outColor=vec4(mix(texture(uDownSampleTexture,u).xyz,texture(uPrevTexture,u).xyz*.25+texture(uPrevTexture,u).xyz*.5+texture(uPrevTexture,u).xyz*.25,uStretch).xyz,1);}",uniforms:[{name:"uDownSampleTexture",type:oe,value:null},{name:"uPrevTexture",type:oe,value:null},{name:"uStretch",type:ge,value:this.stretch},...Rr.commonUniforms]});return this.materials.push(...a.materials),{pass:a}}));this.upSamplePasses=u.map((({pass:e},t)=>({pass:e,prevPass:0===t?this.downSamplePasses[this.downSamplePasses.length-1].pass:u[t-1].pass,downSamplePass:this.downSamplePasses[this.downSamplePasses.length-1-t].pass}))),this.compositePass=new Nr({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;\n#define saturate(a)clamp(a,0.,1.)\nin vec2 vUv;out vec4 outColor;uniform vec4 uColor;uniform float uIntensity;uniform sampler2D uSrcTexture,uStreakTexture;void main(){vec2 u=vUv;outColor=vec4((texture(uStreakTexture,u).xyz*.25+texture(uStreakTexture,u).xyz*.5+texture(uStreakTexture,u).xyz*.25)*uColor.xyz*uIntensity*5.+texture(uSrcTexture,u).xyz,1);}",uniforms:[{name:"uStreakTexture",type:oe,value:null},{name:"uColor",type:Te,value:this.color},{name:"uIntensity",type:ge,value:this.intensity},...Rr.commonUniforms],renderTargetType:q}),this.materials.push(...this.compositePass.materials)}get renderTarget(){return this.compositePass.renderTarget}setSize(e,t){this.width=e,this.height=t,this.halfHeight=Math.floor(this.height/2),this.prefilterPass.setSize(this.width,this.halfHeight),this.compositePass.setSize(this.width,this.height)}setRenderTarget(e,t,r){}update(){}render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:i,gBufferRenderTargets:s,targetCamera:n,time:o}){this.geometry.start(),this.prefilterPass.material.uniforms.setValue("uTexelSize",new Gr(1/this.width,1/this.height)),this.prefilterPass.material.uniforms.setValue("uThreshold",this.threshold),this.prefilterPass.material.uniforms.setValue("uVerticalScale",this.verticalScale),this.prefilterPass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o}),this.downSamplePasses.forEach((({pass:a,prevPass:i,downScale:u})=>{const l=Math.floor(this.width/u);a.setSize(l,this.halfHeight),a.material.uniforms.setValue(tt,new Gr(1/l,1/this.halfHeight)),a.material.uniforms.setValue("uPrevTexture",i.renderTarget.texture),a.material.uniforms.setValue("uHorizontalScale",this.horizontalScale),a.render({gpu:e,camera:t,renderer:r,prevRenderTarget:null,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o})})),this.upSamplePasses.forEach((({pass:a,prevPass:i,downSamplePass:u})=>{a.setSize(u.width,u.height),a.material.uniforms.setValue("uPrevTexture",i.renderTarget.texture),a.material.uniforms.setValue("uDownSampleTexture",u.renderTarget.texture),a.material.uniforms.setValue("uStretch",this.stretch),a.render({gpu:e,camera:t,renderer:r,prevRenderTarget:null,isLastPass:!1,targetCamera:n,gBufferRenderTargets:s,time:o})})),this.compositePass.material.uniforms.setValue("uStreakTexture",this.upSamplePasses[this.upSamplePasses.length-1].pass.renderTarget.texture),this.compositePass.material.uniforms.setValue("uColor",this.color),this.compositePass.material.uniforms.setValue("uIntensity",this.intensity),this.compositePass.render({gpu:e,camera:t,renderer:r,prevRenderTarget:a,isLastPass:i,targetCamera:n,gBufferRenderTargets:s,time:o})}}function ua(e,t){t.directionalLight&&t.directionalLight.shadowMap&&e.uniforms.setValue(ct,t.directionalLight.shadowMap.read.depthTexture),e.uniforms.setValue(mt,t.spotLights.map((e=>e.shadowMap?e.shadowMap.read.depthTexture:null)))}class la{constructor({name:e}){this.parent=null,this.children=[],this.name=e}get childCount(){return this.children.length}get hasChild(){return this.childCount>0}addChild(e){this.children.push(e),e.parent=this}updateMatrix(){throw"should implementation"}}class ha extends la{constructor({index:r,...a}){super(a),this.offsetMatrix=t.identity,this.#b=t.identity,this.#P=t.identity,this.#S=t.identity,this.position=e.zero,this.rotation=Ft.zero,this.scale=e.one,this.index=r}#b;#P;#S;get boneOffsetMatrix(){return this.#P}get poseMatrix(){return this.#b}get jointMatrix(){return this.#S}calcBoneOffsetMatrix(e){this.#b=e?t.multiplyMatrices(e.poseMatrix,this.offsetMatrix):this.offsetMatrix,this.#P=this.#b.clone().invert(),this.children.forEach((e=>e.calcBoneOffsetMatrix(this)))}calcJointMatrix(e){this.offsetMatrix=t.multiplyMatrices(t.translationMatrix(this.position),this.rotation.rawMatrix,t.scalingMatrix(this.scale)),this.#S=e?t.multiplyMatrices(e.jointMatrix,this.offsetMatrix):this.offsetMatrix,this.children.forEach((e=>e.calcJointMatrix(this)))}traverse(e){e(this),this.children.forEach((t=>{t.traverse(e)}))}}class ca extends lr{constructor({bones:e,debugBoneView:t,...r}){super({...r,actorType:P,autoGenerateDepthMaterial:!0}),this.boneCount=0,this.boneOffsetMatrices=[],this.#M=[],this.#E=[],this.#C=null,this.#R=null,this.#B=[],this.#D=1,this.boneLines=null,this.bonePoints=null,this.bones=e,this.debugBoneView=!!t,this.bones.traverse((e=>{this.boneCount++,this.#E[e.index]=e}))}#M;#E;#C;#R;#B;#D;start({gpu:e}){if(this.bones.calcBoneOffsetMatrix(),this.boneOffsetMatrices=this.getBoneOffsetMatrices(),this.#R=!!this.mainMaterial.gpuSkinning,this.#C=new er({gpu:e,width:1,height:1,type:k}),this.materials.forEach((e=>{e.uniforms=new $t(e.uniforms.data,this.generateSkinningUniforms()),e.isSkinning=!0,e.gpuSkinning=this.#R,e.jointNum=this.boneCount})),this.mainMaterial.depthUniforms=new $t(this.mainMaterial.depthUniforms.data,this.generateSkinningUniforms()),super.start({gpu:e}),this.debugBoneView&&this.#A({gpu:e}),this.#B&&this.#R){const e=[];this.#B.forEach(((t,r)=>{const a=t.getAllKeyframesValue();e[r]=[],a.forEach(((t,a)=>{e[r][a]=[],t.forEach((t=>{const i=t.target.index;switch(e[r][a][i]||(e[r][a][i]={bone:t.target}),t.key){case Ta.translation:case Ta.rotation:case Ta.scale:e[r][a][i][t.key]=t.frameValue;break;default:throw"invalid target path"}}))}))}));const r=[];e.forEach(((e,a)=>{r[a]=[],e.forEach((e=>{e.forEach((e=>{const{translation:t,rotation:r,scale:a,bone:i}=e,s=this.#E[i.index];t&&(s.position=t),r&&(s.rotation=Ft.fromMatrix4(r.toMatrix4())),a&&(s.scale=a)})),this.bones.calcJointMatrix();const i=this.boneOffsetMatrices,s=this.getBoneJointMatricesWithBone(),n=i.map(((e,r)=>t.multiplyMatrices(s[r].matrix,e)));r[a].push(...n)}))}));const a=[...r].flat(2),i=this.#B.reduce(((e,t)=>e+t.frameCount),0),s=this.#D,n=this.boneCount*i,o=Math.ceil(n/s),u=new Float32Array([...a,...new Array(s*o-n).fill(0).map((()=>t.identity))].map((e=>[...e.elements])).flat()),l=4;this.#C.update({width:s*l,height:o,data:u}),this.materials.forEach((e=>e.uniforms.setValue(Ye,i))),this.depthMaterial&&this.depthMaterial.uniforms.setValue(Ye,i)}}update(e){super.update(e);const{time:r}=e;if(this.bones.calcJointMatrix(),this.boneLines&&this.bonePoints){const e=this.#E.map((e=>[...e.jointMatrix.position.elements]));this.boneLines.geometry.updateAttribute(ie.Position,new Float32Array(e.flat())),this.bonePoints.geometry.updateAttribute(ie.Position,new Float32Array(e.flat()))}if(this.#R)this.materials.forEach((e=>e.uniforms.setValue(Ke,r))),this.depthMaterial&&this.depthMaterial.uniforms.setValue(Ke,r),this.materials.forEach((e=>e.uniforms.setValue(He,this.#C))),this.depthMaterial&&this.depthMaterial.uniforms.setValue(He,this.#C);else{const e=this.boneOffsetMatrices,r=this.getBoneJointMatricesWithBone(),a=e.map(((e,a)=>t.multiplyMatrices(r[a].matrix,e))),i=this.#D,s=Math.ceil(this.boneCount/i),n=i*s-this.boneCount,o=new Float32Array([...a,...new Array(n).fill(0).map((()=>t.identity))].map((e=>[...e.elements])).flat()),u=4;this.#C&&this.#C.update({width:i*u,height:s,data:o}),this.materials.forEach((e=>e.uniforms.setValue(He,this.#C))),this.depthMaterial&&this.depthMaterial.uniforms.setValue(He,this.#C)}}generateSkinningUniforms(){return[{name:He,type:oe,value:null},{name:$e,type:xe,value:this.#D},...this.#R?[{name:We,type:xe,value:this.boneCount},{name:Ye,type:xe,value:0}]:[]]}getBoneOffsetMatrices(){const e=[];return this.bones.traverse((t=>{const r=t.boneOffsetMatrix.clone();e.push(r)})),e}getBoneJointMatrices(){const e=[];return this.bones.traverse((t=>{const r=t.jointMatrix.clone();e.push(r)})),e}getBoneJointMatricesWithBone(){const e=[];return this.bones.traverse((t=>{const r=t.jointMatrix.clone();e.push({bone:t,matrix:r})})),e}#A({gpu:e}){const t=e=>{e.hasChild&&e.children.forEach((r=>{const a=r;this.#M.push(e.index,a.index),t(a)}))};t(this.bones),this.boneLines=new lr({geometry:new ur({gpu:e,attributes:[new Kt({name:ie.Position,data:new Float32Array(new Array(3*this.#E.length).fill(0)),size:3,usageType:re})],indices:this.#M,drawCount:this.#M.length}),material:new Jt({vertexShader:`#version 300 es\n                \n                layout (location = 0) in vec3 ${ie.Position};\n                \n                uniform mat4 ${Pe};\n                uniform mat4 ${Se};\n                uniform mat4 ${Me};\n                \n                void main() {\n                    gl_Position = ${Me} * ${Se} * ${Pe} * vec4(${ie.Position}, 1.);\n                }\n                `,fragmentShader:"#version 300 es\n                \n                precision mediump float;\n                \n                out vec4 outColor;\n                \n                void main() {\n                    outColor = vec4(0, 1., 0, 1.);\n                }\n                ",primitiveType:a,blendType:c,depthWrite:!1,depthTest:!1})}),this.bonePoints=new lr({geometry:new ur({gpu:e,attributes:[new Kt({name:ie.Position.toString(),data:new Float32Array(new Array(3*this.#E.length).fill(0)),size:3,usageType:re})],drawCount:this.#E.length}),material:new Jt({vertexShader:`#version 300 es\n               \n                layout (location = 0) in vec3 ${ie.Position};\n                \n                uniform mat4 ${Pe};\n                uniform mat4 ${Se};\n                uniform mat4 ${Me};\n                \n                void main() {\n                    gl_Position = ${Me} * ${Se} * ${Pe} * vec4(${ie.Position}, 1.);\n                    gl_PointSize = 6.;\n                }\n                `,fragmentShader:"#version 300 es\n                \n                precision mediump float;\n                \n                out vec4 outColor;\n                \n                void main() {\n                    outColor = vec4(1, 0., 0, 1.);\n                }\n                ",primitiveType:r,blendType:c,depthWrite:!1,depthTest:!1})}),this.addChild(this.boneLines),this.addChild(this.bonePoints)}setAnimationClips(e){this.#B=e}}class ma{constructor({name:e,keyframes:t}){this.currentTime=0,this.currentFrame=0,this.loop=!1,this.isPlaying=!1,this.speed=1,this.fps=30,this.onUpdateProxy=null,this._keyframes=[],this.name=e,this._keyframes=t,this.frameCount=Math.max(...t.map((({frameCount:e})=>e)))}get keyframes(){return this._keyframes}play(){this.currentTime=0,this.isPlaying=!0}update(e){if(!this.isPlaying)return;const t=1/this.fps;this.currentTime+=e*this.speed;const r=t*this.frameCount;if(this.currentTime>r){if(!this.loop)return this.currentFrame=this.frameCount,void(this.currentTime=r);this.currentTime%=r}if(this.currentFrame=Math.floor(this.currentTime/t),this.onUpdateProxy){const e=this._keyframes.map((e=>({target:e.target,key:e.key,frameValue:e.getFrameValue(this.currentFrame)})));this.onUpdateProxy(e)}else this._keyframes.forEach((e=>{const t=e.getFrameValue(this.currentFrame);switch(e.key){case"translation":const r=t;e.target.transform?e.target.transform.position=r:e.target.position=r;break;case"rotation":const a=t,i=Ft.fromMatrix4(a.toMatrix4());e.target.transform?e.target.transform.rotation=i:e.target.rotation=i;break;case"scale":const s=t;e.target.transform?e.target.transform.scale=s:e.target.scale=s;break;default:throw"invalid animation keyframes key"}}))}getAllKeyframesValue(){return new Array(this.frameCount).fill(0).map(((e,t)=>this._keyframes.map((e=>({target:e.target,key:e.key,frameValue:e.getFrameValue(t)})))))}}class da{constructor(e,t,r,a){this.elements=new Float32Array(4),this.set(e,t,r,a)}get x(){return this.elements[0]}get y(){return this.elements[1]}get z(){return this.elements[2]}get w(){return this.elements[3]}set(e,t,r,a){return this.elements=new Float32Array([e,t,r,a]),this}toEulerRadian(){const e=this.x,t=this.y,r=this.z,a=this.w,i=a*e,s=a*t,n=a*r,o=e*e,u=e*t,l=e*r,h=t*t,c=t*r,m=r*r;return{x:-Math.atan2(2*(u-n),1-2*(o+m)),y:(d=2*(c+i),d>=1?Math.PI/2:d<=-1?-Math.PI/2:Math.asin(d)),z:-Math.atan2(2*(l-s),1-2*(o+h))};var d}toEulerDegree(){const e=this.toEulerRadian();return{x:180*e.x/Math.PI,y:180*e.y/Math.PI,z:180*e.z/Math.PI}}toMatrix4(){const e=this.x,r=this.y,a=this.z,i=this.w,s=i*e,n=i*r,o=i*a,u=e*e,l=e*r,h=e*a,c=r*r,m=r*a,d=a*a;return new t(1-2*(c+d),2*(l-o),2*(h+n),0,2*(l+o),1-2*(u+d),2*(m-s),0,2*(h-n),2*(m+s),1-2*(u+c),0,0,0,0,1)}static identity(){return new da(0,0,0,1)}}class fa{get data(){return this._data}constructor({target:e,type:t,key:r,interpolation:a,data:i,start:s,end:n,frameCount:o,frames:u}){switch(this.target=e,this.key=r,this.interpolation=a,this.type=t,this._data=i,this.start=s,this.end=n,this.frameCount=o,this.frames=u,this.type){case Z:this.elementSize=3;break;case ee:this.elementSize=4;break;default:throw"[AnimationKeyframes.getFrameValue] invalid type"}}getFrameValue(t){const r=new Array(this.elementSize).fill(0).map(((e,r)=>{switch(this.interpolation){case xa.LINEAR:return this._data[t*this.elementSize+r];case xa.STEP:return this._data[r];default:throw"invalid interp"}}));switch(this.type){case Z:return new e(r[0],r[1],r[2]);case ee:return new da(r[0],r[1],r[2],r[3]);default:throw"[AnimationKeyframes.getFrameValue] invalid type"}}}const pa="#version 300 es\nprecision highp float;\n#pragma DEFINES\n#pragma ATTRIBUTES\n#pragma APPEND_ATTRIBUTES\nlayout(std140) uniform ubCommon{float uTime;vec4 uViewport;};layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};\n#if defined(USE_SKINNING_GPU)||defined(USE_SKINNING_CPU)\nmat4 u(mat4 u,mat4 m,mat4 U,mat4 e,vec4 v){return u*aBoneWeights.x+m*aBoneWeights.y+U*aBoneWeights.z+e*aBoneWeights.w;}mat4 u(sampler2D u,uint U,int m){int v=int(mod(float(U),float(m))),a=int(floor(float(U)/float(m)));return mat4(texelFetch(u,ivec2(v*4,a),0),texelFetch(u,ivec2(v*4+1,a),0),texelFetch(u,ivec2(v*4+2,a),0),texelFetch(u,ivec2(v*4+3,a),0));}mat4 u(sampler2D u,uint U,int m,int t,int v,float e,float d){float n=float(int(mod(floor(e+d),float(v)))*m);int f=int(mod(float(U)+n,float(t))),a=int(floor(float(U)+n/float(t)));return mat4(texelFetch(u,ivec2(f*4,a),0),texelFetch(u,ivec2(f*4+1,a),0),texelFetch(u,ivec2(f*4+2,a),0),texelFetch(u,ivec2(f*4+3,a),0));}\n#endif\nout vec2 vUv;out vec3 vLocalPosition,vWorldPosition,vNormal;\n#ifdef USE_NORMAL_MAP\nout vec3 vTangent,vBinormal;\n#endif\n#ifdef USE_RECEIVE_SHADOW\nout vec4 vShadowMapProjectionUv;\n#endif\n#ifdef USE_VERTEX_COLOR\nout vec4 vVertexColor;\n#endif\n#pragma APPEND_UNIFORMS\n#ifdef USE_RECEIVE_SHADOW\nuniform mat4 uShadowMapProjectionMatrix;\n#endif\n#if defined(USE_SKINNING_GPU)||defined(USE_SKINNING_CPU)\nuniform sampler2D uJointTexture;uniform int uBoneCount,uJointTextureColNum,uTotalFrameCount;\n#endif\nmat4 u(float u){float a=cos(u),t=sin(u);return mat4(1.,0.,0.,0.,0.,a,t,0.,0.,-t,a,0.,0.,0.,0.,1.);}mat4 d(float u){float a=cos(u),t=sin(u);return mat4(a,0.,-t,0.,0.,1.,0.,0.,t,0.,a,0.,0.,0.,0.,1.);}mat4 m(float u){float a=cos(u),t=sin(u);return mat4(a,t,0.,0.,-t,a,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);}mat4 t(vec3 u){return mat4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,u.x,u.y,u.z,1.);}mat4 U(vec3 u){return mat4(u.x,0.,0.,0.,0.,u.y,0.,0.,0.,0.,u.z,0.,0.,0.,0.,1.);}mat4 U(vec3 u,vec3 U){vec3 a=normalize(u-U),t=normalize(cross(vec3(0,1,0),a)),i=cross(a,t);return mat4(t.x,t.y,t.z,0.,i.x,i.y,i.z,0.,a.x,a.y,a.z,0.,0.,0.,0.,1.);}void main(){\n#pragma BEGIN_MAIN\nvec4 v=vec4(aPosition,1);\n#if defined(USE_SKINNING_GPU)||defined(USE_SKINNING_CPU)\nmat4 a=mat4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);\n#ifdef USE_SKINNING_GPU\nmat4 f=u(uJointTexture,aBoneIndices[0],uBoneCount,uJointTextureColNum,uTotalFrameCount,uTime*30.,aInstanceAnimationOffset),i=u(uJointTexture,aBoneIndices[1],uBoneCount,uJointTextureColNum,uTotalFrameCount,uTime*30.,aInstanceAnimationOffset),e=u(uJointTexture,aBoneIndices[2],uBoneCount,uJointTextureColNum,uTotalFrameCount,uTime*30.,aInstanceAnimationOffset),n=u(uJointTexture,aBoneIndices[3],uBoneCount,uJointTextureColNum,uTotalFrameCount,uTime*30.,aInstanceAnimationOffset);a=u(f,i,e,n,aBoneWeights);\n#endif\n\n#ifdef USE_SKINNING_CPU\nmat4 s=u(uJointTexture,aBoneIndices[0],uJointTextureColNum),x=u(uJointTexture,aBoneIndices[1],uJointTextureColNum),l=u(uJointTexture,aBoneIndices[2],uJointTextureColNum),r=u(uJointTexture,aBoneIndices[3],uJointTextureColNum);a=u(s,x,l,r,aBoneWeights);\n#endif\nv=a*v;\n#endif\n\n#pragma LOCAL_POSITION_POST_PROCESS\nvUv=aUv;vLocalPosition=aPosition;mat4 c=uWorldMatrix;\n#ifdef USE_INSTANCING\nmat4 A=t(aInstancePosition),p=U(aInstanceScale.xyz),y=u(aInstanceRotation.x),B=d(aInstanceRotation.y),w=m(aInstanceRotation.z),C=B*y*w;\n#ifdef USE_INSTANCE_LOOK_DIRECTION\nC=U(aInstancePosition+aInstanceVelocity*1e3,aInstancePosition);\n#endif\n\n#pragma INSTANCE_TRANSFORM_PRE_PROCESS\nc=uWorldMatrix*A*C*p;\n#endif\nvec4 D=c*v;\n#pragma WORLD_POSITION_POST_PROCESS\nvWorldPosition=D.xyz;mat3 E;\n#ifdef USE_NORMAL_MAP\n\n#if defined(USE_SKINNING_GPU)||defined(USE_SKINNING_CPU)\n\n#ifdef USE_INSTANCING\nE=mat3(transpose(inverse(c)))*mat3(a);\n#else\nE=mat3(uNormalMatrix)*mat3(a);\n#endif\n\n#else\n\n#ifdef USE_INSTANCING\nE=mat3(transpose(inverse(c)));\n#else\nE=mat3(uNormalMatrix);\n#endif\n\n#endif\nvNormal=E*aNormal;vTangent=E*aTangent;vBinormal=E*aBinormal;\n#else\n\n#if defined(USE_SKINNING_GPU)||defined(USE_SKINNING_CPU)\n\n#ifdef USE_INSTANCING\nE=mat3(transpose(inverse(c)))*mat3(a);\n#else\nE=mat3(uNormalMatrix);\n#endif\n\n#else\n\n#ifdef USE_INSTANCING\nE=mat3(transpose(inverse(c)));\n#else\nE=mat3(uNormalMatrix);\n#endif\n\n#endif\nvNormal=E*aNormal;\n#endif\n\n#ifdef USE_RECEIVE_SHADOW\nvShadowMapProjectionUv=uShadowMapProjectionMatrix*D;\n#endif\ngl_Position=uProjectionMatrix*uViewMatrix*D;\n#if defined(USE_INSTANCING)&&defined(USE_VERTEX_COLOR)\nvVertexColor=aInstanceVertexColor;\n#endif\n\n#pragma END_MAIN\n}",ga="#version 300 es\nprecision mediump float;\n#pragma DEFINES\nuniform vec4 uColor;uniform sampler2D uDiffuseMap;uniform vec2 uDiffuseMapUvScale;\n#ifdef USE_ALPHA_TEST\nuniform float uAlphaTestThreshold;\n#endif\nin vec2 vUv;\n#ifdef USE_VERTEX_COLOR\nin vec4 vVertexColor;\n#endif\nout vec4 outColor;\n#ifdef USE_ALPHA_TEST\nvoid v(float v,float U){if(v<U)discard;}\n#endif\nvoid main(){vec4 U=texture(uDiffuseMap,vUv*uDiffuseMapUvScale),u=vec4(0);\n#ifdef USE_VERTEX_COLOR\nu=vVertexColor*uColor*U;\n#else\nu=uColor*U;\n#endif\nfloat f=u.w;\n#ifdef USE_ALPHA_TEST\nv(f,uAlphaTestThreshold);\n#endif\noutColor=vec4(1);}";class va extends Jt{constructor({diffuseColor:e,diffuseMap:t,diffuseMapUvScale:r,diffuseMapUvOffset:a,normalMap:i,normalMapUvScale:n,normalMapUvOffset:o,metallic:u,roughness:h,emissiveColor:c,vertexShaderModifier:m={},shadingModelId:d=s,uniforms:f=[],...p}={}){super({...p,name:"GBufferMaterial",vertexShaderModifier:m,uniforms:[...[{name:"uDiffuseColor",type:Te,value:e||Nt.white},{name:"uDiffuseMap",type:oe,value:t||null},{name:"uDiffuseMapUvScale",type:le,value:r||Gr.one},{name:"uDiffuseMapUvOffset",type:le,value:a||Gr.one},{name:je,type:ge,value:u||0},{name:Xe,type:ge,value:h||0},{name:"uNormalMap",type:oe,value:i||null},{name:"uNormalMapUvScale",type:le,value:n||Gr.one},{name:"uNormalMapUvOffset",type:le,value:o||Gr.one},{name:"uEmissiveColor",type:Te,value:c||Nt.black},{name:ke,type:xe,value:d}],...f||[]],depthUniforms:[{name:"uDiffuseMap",type:oe,value:t||null},{name:"uDiffuseMapUvScale",type:le,value:Gr.one},{name:"uDiffuseMapUvOffset",type:le,value:Gr.one}],useNormalMap:!!i,depthTest:!0,depthWrite:!1,depthFuncType:l,uniformBlockNames:[yt,wt,bt]})}start({gpu:e,attributeDescriptors:t=[]}){this.vertexShader=pa,this.fragmentShader="#version 300 es\nprecision highp float;\n#pragma DEFINES\n#define MAX_SPOT_LIGHT_COUNT 4\nlayout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};uniform vec4 uDiffuseColor;uniform sampler2D uDiffuseMap;uniform vec2 uDiffuseMapUvScale;uniform float uSpecularAmount;uniform samplerCube uEnvMap;uniform float uAmbientAmount,uMetallic,uRoughness;uniform vec4 uEmissiveColor;uniform int uShadingModelId;\n#pragma APPEND_UNIFORMS\n#ifdef USE_NORMAL_MAP\nuniform sampler2D uNormalMap;uniform float uNormalStrength;\n#endif\n#ifdef USE_ALPHA_TEST\nuniform float uAlphaTestThreshold;\n#endif\nstruct DirectionalLight{vec3 direction;float intensity;vec4 color;};uniform DirectionalLight uDirectionalLight;struct Surface{vec3 worldNormal;vec3 worldPosition;vec4 diffuseColor;};struct Camera{vec3 worldPosition;};in vec2 vUv;in vec3 vNormal;\n#ifdef USE_NORMAL_MAP\nin vec3 vTangent,vBinormal;\n#endif\nin vec3 vWorldPosition;\n#ifdef USE_VERTEX_COLOR\nin vec4 vVertexColor;\n#endif\n#define SHADING_MODEL_NUM 3.\nstruct GBufferA{vec3 baseColor;};struct GBufferB{vec3 normal;float shadingModelId;};struct GBufferC{float metallic;float roughness;};struct GBufferD{vec3 emissiveColor;};vec4 u(vec3 u,int v){float n=float(v)/SHADING_MODEL_NUM;return vec4(u*.5+.5,n);}\n#ifdef USE_NORMAL_MAP\nvec3 u(vec3 u,vec3 v,vec3 o,sampler2D s,vec2 U){vec3 f=texture(s,U).xyz;f=f*2.-1.;return normalize(mat3(normalize(v),normalize(o),normalize(u))*f);}\n#endif\nvoid v(float u,float v){if(u<v)discard;}layout(location=0) out vec4 outGBufferA;layout(location=1) out vec4 outGBufferB;layout(location=2) out vec4 outGBufferC;layout(location=3) out vec4 outGBufferD;void main(){vec4 f=vec4(0,0,0,1);vec2 n=vUv*uDiffuseMapUvScale;vec4 r=uDiffuseColor*texture(uDiffuseMap,n);vec3 s=vNormal;\n#ifdef USE_NORMAL_MAP\ns=u(vNormal,vTangent,vBinormal,uNormalMap,n);\n#else\ns=normalize(vNormal);\n#endif\n\n#ifdef USE_VERTEX_COLOR\nr*=vVertexColor;\n#endif\nSurface o;o.worldPosition=vWorldPosition;o.worldNormal=s;o.diffuseColor=r;f=o.diffuseColor;\n#ifdef USE_ALPHA_TEST\nv(f.w,uAlphaTestThreshold);\n#endif\nf.xyz=pow(f.xyz,vec3(2.2));outGBufferA=vec4(f.xyz,1);outGBufferB=u(s,uShadingModelId);outGBufferC=vec4(uMetallic,uRoughness,0,1);outGBufferD=vec4(uEmissiveColor.xyz,1);}",this.depthFragmentShader=ga,super.start({gpu:e,attributeDescriptors:t})}}const xa={LINEAR:"LINEAR",STEP:"STEP",CATMULLROMSPLINE:"CATMULLROMSPLINE",CUBICSPLINE:"CUBICSPLINE"},Ta={translation:"translation",rotation:"rotation",scale:"scale"};async function ya({gpu:r,dir:a,path:i}){const s=e=>a+e,n=s(i),o=await fetch(n),u=await o.json(),l=new zt({}),h={KHR_materials_emissive_strength:!1};u.extensionsUsed&&u.extensionsUsed.forEach((e=>{if("KHR_materials_emissive_strength"===e)h.KHR_materials_emissive_strength=!0}));const c=[];u.textures&&await Promise.all(u.textures.map((async({source:e,sampler:t})=>{const r=u.images[e].uri,a=u.samplers[t].minFilter,i=u.samplers[t].magFilter,n=u.samplers[t].wrapS,o=u.samplers[t].wrapT,l=a?Qt(a):void 0,h=i?Qt(i):void 0,c=n?Zt(n):void 0,m=o?Zt(o):void 0;return{img:await tr(s(r)),minFilter:l,magFilter:h,wrapS:c,wrapT:m}}))).then((e=>{e.forEach((({img:e,minFilter:t,magFilter:a,wrapS:i,wrapT:s})=>{const n=new er({gpu:r,img:e,minFilter:t,magFilter:a,wrapS:i,wrapT:s});c.push(n)}))}));const m=[],d=await Promise.all(u.buffers.map((async e=>{const t=e.uri.match("^data:application/octet-stream;base64.*")?e.uri:s(e.uri),r=await fetch(t),a=await r.arrayBuffer();return{byteLength:e.byteLength,binBufferData:a}}))),f=e=>{const t=u.bufferViews[e.bufferView],{binBufferData:r}=d[t.buffer];return r.slice(t.byteOffset,t.byteOffset+t.byteLength)},p=(r,a=null)=>{const i=u.nodes[r],s=new ha({name:i.name,index:r});m[r]=s;const n=t.multiplyMatrices(t.translationMatrix(i.translation?new e(i.translation[0],i.translation[1],i.translation[2]):e.zero),i.rotation?new da(i.rotation[0],i.rotation[1],i.rotation[2],i.rotation[3]).toMatrix4():da.identity().toMatrix4(),t.scalingMatrix(i.scale?new e(i.scale[0],i.scale[1],i.scale[2]):e.one));return s.offsetMatrix=n,a&&a.addChild(s),i.children&&i.children.forEach((e=>p(e,s))),s},g=(e,t)=>{const a=u.nodes[e],i=void 0!==a.children;if(void 0!==a.mesh){const s=(({meshIndex:e,skinIndex:t=null})=>{let a=new Float32Array,i=new Float32Array,s=new Float32Array,n=new Float32Array,o=new Float32Array,l=new Uint16Array,m=new Uint16Array,d=new Float32Array,g=null;const v=u.meshes[e],x=[];if(v.primitives.forEach((e=>{const t={attributes:[],indices:null};if(Object.keys(e.attributes).forEach((r=>{const a=r,i=e.attributes[a];null!=i&&t.attributes.push({attributeName:a,accessor:u.accessors[i]})})),Object.hasOwn(e,"material")&&x.push(e.material),e.indices&&(t.indices={accessor:u.accessors[e.indices]}),t.attributes.forEach((e=>{const{attributeName:t,accessor:r}=e,n=f(r);switch(t){case"POSITION":a=new Float32Array(n);break;case"NORMAL":i=new Float32Array(n);break;case"TANGENT":s=new Float32Array(n);break;case"TEXCOORD_0":o=new Float32Array(n);break;case"JOINTS_0":m=new Uint16Array(new Uint8Array(n));break;case"WEIGHTS_0":d=new Float32Array(n);break;default:throw"[loadGLTF.createMesh] invalid attribute name"}})),t.indices){const{accessor:e}=t.indices,r=f(e);l=new Uint16Array(r)}})),null!==t){const e=u.skins[t];g=p(e.joints[0])}const T=o.map(((e,t)=>t%2==0?e:1-e));if(s)n=new Float32Array(ur.createBinormals(Array.from(i),Array.from(s)));else{const e=ur.createTangentsAndBinormals(Array.from(i));s=new Float32Array(e.tangents),n=new Float32Array(e.binormals)}const y=new ur({gpu:r,attributes:[new Kt({name:"aPosition",data:a,size:3}),new Kt({name:"aUv",data:T,size:2}),new Kt({name:"aNormal",data:i,size:3}),...g?[new Kt({name:"aBoneIndices",data:m,size:4}),new Kt({name:"aBoneWeights",data:d,size:4})]:[],new Kt({name:"aTangent",data:new Float32Array(s),size:3}),new Kt({name:"aBinormal",data:new Float32Array(n),size:3})],indices:Array.from(l),drawCount:l.length}),w=x.map((e=>{const t=u.materials[e],r=!!t.pbrMetallicRoughness.baseColorTexture,a=!!t.normalTexture,i=r?c[t.pbrMetallicRoughness.baseColorTexture.index]:null,s=a?c[t.normalTexture.index]:null;let n=Nt.black;if(t.hasOwnProperty("emissiveFactor"))if(h.KHR_materials_emissive_strength){const e=t.extensions.KHR_materials_emissive_strength.emissiveStrength;n=Nt.fromArray(t.emissiveFactor).multiplyScalar(e)}else n=Nt.fromArray(t.emissiveFactor);return new va({diffuseMap:i,diffuseColor:t.pbrMetallicRoughness.baseColorFactor?Nt.fromArray(t.pbrMetallicRoughness.baseColorFactor):Nt.white,normalMap:s,metallic:t.pbrMetallicRoughness.metallicFactor,roughness:t.pbrMetallicRoughness.roughnessFactor,emissiveColor:n})}));return g?new ca({geometry:y,bones:g}):new lr({geometry:y,materials:w})})({meshIndex:a.mesh,skinIndex:null!==a.skin&&void 0!==a.skin?a.skin:null});return m[e]=s,t.addChild(s),void(i&&a.children.forEach((e=>g(e,s))))}if(i)if(m[e])a.children.forEach((e=>g(e,t)));else{const r=new zt({});t.addChild(r),m[e]=r,a.children.forEach((e=>g(e,r)))}};u.scenes.forEach((e=>{e.nodes.forEach((e=>{g(e,l)}))}));if(u.animations&&u.animations.length>0){const e=u.animations.map((e=>{const t=e.channels.map((t=>{const r=e.samplers[t.sampler],a=u.accessors[r.input],i=f(a),s=new Float32Array(i),n=u.accessors[r.output],o=f(n),l=new Float32Array(o);switch(t.target.path){case Ta.translation:case Ta.scale:case Ta.rotation:break;default:throw"invalid key type"}let h;switch(t.target.path){case Ta.rotation:h=ee;break;case Ta.translation:case Ta.scale:h=Z;break;default:throw"invalid channel taget path"}return new fa({target:m[t.target.node],key:t.target.path,interpolation:r.interpolation,data:l,start:Math.min(...a.min),end:Math.min(...a.max),frames:s,frameCount:a.count,type:h})}));return new ma({name:e.name,keyframes:t})}));l.animator.setAnimationClips(e)}return l}const wa="#version 300 es\nprecision mediump float;\n#define saturate(a)clamp(a,0.,1.)\nfloat u(vec2 u){return step(0.,u.x)*(1.-step(1.,u.x))*step(0.,u.y)*(1.-step(1.,u.y));}vec4 u(sampler2D v,vec2 s,vec2 m,vec2 t){return texture(v,s*m+t)*u(s*m+t);}uniform vec2 uTiling;uniform sampler2D uTextureCol0;uniform vec2 uTextureCol0UvOffset;uniform sampler2D uTextureCol1;uniform vec2 uTextureCol1UvOffset;uniform sampler2D uTextureCol2;uniform vec2 uTextureCol2UvOffset;uniform sampler2D uTextureCol3;uniform vec2 uTextureCol3UvOffset;uniform sampler2D uTextureCol4;uniform vec2 uTextureCol4UvOffset;uniform sampler2D uTextureCol5;uniform vec2 uTextureCol5UvOffset;in vec2 vUv;out vec4 outColor;void main(){vec2 v=uTiling;vec4 s=u(uTextureCol0,vUv,v,uTextureCol0UvOffset),m=u(uTextureCol1,vUv,v,uTextureCol1UvOffset),t=u(uTextureCol2,vUv,v,uTextureCol2UvOffset),r=u(uTextureCol3,vUv,v,uTextureCol3UvOffset),C=u(uTextureCol4,vUv,v,uTextureCol4UvOffset),g=u(uTextureCol5,vUv,v,uTextureCol5UvOffset);outColor=s+m+t+r+C+g;}",ba="depthTexture",Pa="gBufferATexture",Sa="gBufferBTexture",Ma="gBufferCTexture",Ea="gBufferDTexture",Ca="directionalLightShadowMap",Ra="spotLightShadowMap",Ba="ambientOcclusionTexture",Da="deferredShadingTexture",Aa="ssrTexture",Va="lightShaftTexture",_a="volumetricLightTexture",Fa="fogTexture",Ua="depthOfFieldTexture",Ia="bloomBlurMip4Texture",za="bloomBlurMip8Texture",Na="bloomBlurMip16Texture",La="bloomBlurMip32Texture",Oa="bloomBlurMip64Texture",ka="bloomTexture";class Ga{#V=Gr.zero;#_=Gr.zero;#F=Gr.zero;#U=Gr.zero;#I=Gr.zero;#z=!1;#N=!1;#L=!1;#O=0;#k=0;get isUp(){return!this.#N}get isPressed(){return this.#z}get isDown(){return this.#N}get isReleased(){return this.#L}get deltaNormalizedInputPosition(){return this.#U}get normalizedInputPosition(){return this.#I}constructor(){}start(){throw"[AbstractInputController] should implementation 'start' method."}setSize(e,t){this.#O=e,this.#k=t}update(){throw"[AbstractInputController] should implementation 'update' method."}updateInternal({inputPosition:e,isDown:t}){this.#G(t),this.#j(e)}#G(e){const t=this.isDown;return this.#N=e,!t&&this.isDown?(this.#z=!0,void(this.#L=!1)):!t&&this.isDown?(this.#z=!1,void(this.#L=!1)):t&&!this.isDown?(this.#z=!1,void(this.#L=!0)):(this.#z=!1,void(this.#L=!1))}#j(e){this.isUp||this.isPressed&&(this.#_.copy(e),this.#V.copy(this.#_),this.#F.set(0,0),this.#U.set(0,0)),this.#V.copy(this.#_),this.#_.copy(e);const t=Gr.subVectors(this.#_,this.#V);this.#F.copy(t);const r=Math.min(this.#O,this.#k);this.#U.set(this.#F.x/r,this.#F.y/r),this.#I.set(this.#_.x/this.#O,this.#_.y/this.#k)}clearInputPositions(){this.#V.set(-1/0,-1/0),this.#_.set(-1/0,-1/0),this.#F.set(-1/0,-1/0),this.#U.set(-1/0,-1/0)}dispose(){}}class ja{get domElement(){return this.rootElement}constructor(e=!0){this.rootElement=document.createElement("div"),e&&(this.rootElement.style.cssText="\n                background-color: rgb(200 200 255 / 70%);\n                position: absolute;\n                top: 0px;\n                right: 0px;\n                box-sizing: border-box;\n                padding: 0px 10px 10px 10px;\n                display: grid;\n                justify-items: start;\n                \n                font-size: 9px;\n                font-weight: bold;\n                line-height: 1.2em;\n                min-width: 200px;\n        "),this.contentElement=document.createElement("div"),this.contentElement.style.cssText="\n            width: 100%;\n        ",this.rootElement.appendChild(this.contentElement)}#X(e){const t=document.createElement("div");t.style.cssText="\n            box-sizing: border-box;\n            padding-top: 8px;\n        ";const r=document.createElement("div");if(t.appendChild(r),e){const t=document.createElement("span");t.style.cssText="\n                padding-right: 1em;\n            ",t.textContent=e,r.appendChild(t)}const a=document.createElement("div");return t.appendChild(a),{wrapperElement:t,headerElement:r,contentElement:a}}addGroup(e,t=!0){const r=new ja(!1),a=document.createElement("p");a.textContent=e,a.style.cssText="\n            font-size: 11px;\n            font-style: italic;\n            box-sizing: border-box;\n            padding: 4px 0 0 0;\n            cursor: pointer;\n        ",r.rootElement.insertBefore(a,r.contentElement);const i=()=>{r.contentElement.classList.remove("is-hidden"),r.contentElement.style.cssText="",a.textContent=`▼ ${e}`},s=()=>{r.contentElement.classList.add("is-hidden"),r.contentElement.style.cssText="display: none;",a.textContent=`▶ ${e}`};return a.addEventListener("click",(()=>{r.contentElement.classList.contains("is-hidden")?i():s()})),t?i():s(),this.contentElement.appendChild(r.domElement),r}addPullDownDebugger({label:e,onChange:t,initialValue:r=null,initialExec:a=!0,options:i=[]}){const{wrapperElement:s,contentElement:n}=this.#X(e),o=document.createElement("select");o.style.cssText="\n                    font-size: 9px;\n                ",i.forEach((e=>{const t=document.createElement("option");t.value=e.value,t.label=e.label||e.value,o.appendChild(t),e.isDefault&&(o.value=e.value)})),o.addEventListener("change",(()=>{t(o.value)})),null!==r&&(o.value=r),a&&t(o.value),n.appendChild(o),this.contentElement.appendChild(s)}addColorDebugger({label:e,onChange:t,onInput:r=null,initialValue:a=null,initialExec:i=!0}){const{wrapperElement:s,contentElement:n}=this.#X(e),o=document.createElement("input");o.type="color",o.addEventListener("change",(()=>{t(o.value)})),o.addEventListener("input",(()=>{r?r(o.value):t(o.value)})),null!==a&&(o.value=a),i&&t(o.value),n.appendChild(o),this.contentElement.appendChild(s)}addToggleDebugger({label:e,onChange:t,initialValue:r=null,initialExec:a=!0}){const{wrapperElement:i,contentElement:s}=this.#X(e),n=document.createElement("input");n.type="checkbox",n.checked=!!r,n.addEventListener("change",(()=>{t(n.checked)})),a&&t(n.checked),s.appendChild(n),this.contentElement.appendChild(i)}addSliderDebugger({label:e,onChange:t,onInput:r,initialValue:a,initialExec:i=!0,minValue:s,maxValue:n,stepValue:o}){const{wrapperElement:u,headerElement:l,contentElement:h}=this.#X(e),c=document.createElement("span"),m=document.createElement("input"),d=()=>{c.textContent=`value: ${m.value}`},f=()=>(d(),Number.parseFloat(m.value));m.type="range",m.min=s.toString(),m.max=n.toString(),null!==o&&(m.step=o.toString()),m.addEventListener("change",(()=>f())),m.addEventListener("input",(()=>{r?r(f()):t(f())})),null!==a&&(m.value=a.toString()),i?t(f()):d(),l.appendChild(c),h.appendChild(m),this.contentElement.appendChild(u)}addButtonDebugger({buttonLabel:e,onClick:t}){const{wrapperElement:r,contentElement:a}=this.#X(""),i=document.createElement("input");i.type="button",i.value=e,i.style.cssText="\n        font-size: 9px;\n        font-weight: bold;\n        line-height: 1.2em;\n        padding: 1px 2px;\n",i.addEventListener("click",(()=>t())),a.appendChild(i),this.contentElement.appendChild(r)}addBorderSpacer(){const e=document.createElement("hr");e.style.cssText="\n            width: 100%;\n            height: 1px;\n            border: none;\n            border-top: 1px solid #777;\n            margin: 0.5em 0 0.25em 0;\n        ",this.contentElement.appendChild(e)}}class Xa extends kt{constructor({gpu:e,buffers:t}){super(),this.gpu=e;const{gl:r}=e;this.transformFeedback=r.createTransformFeedback(),this.bind();for(let a=0;a<t.length;a++)r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,a,t[a]);r.bindBuffer(r.ARRAY_BUFFER,null),this.unbind()}get glObject(){return this.transformFeedback}bind(){const{gl:e}=this.gpu;e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,this.glObject)}unbind(){const{gl:e}=this.gpu;e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,null)}}class Ha{constructor({gpu:e,attributes:t,drawCount:r,vertexShader:a,varyings:i,uniforms:s=[],uniformBlockNames:n=[]}){this.transformFeedbackBuffers=[],this.uniformBlockNames=[];const o=i.map((({name:e})=>e));this.shader=new jt({gpu:e,vertexShader:a,fragmentShader:"#version 300 es\nvoid main(){}",transformFeedbackVaryings:o}),this.drawCount=r,this.uniforms=new $t(s),this.uniformBlockNames=n,t.forEach(((e,t)=>{e.location=t,e.divisor=0}));const u=t,l=t.map((e=>({...e}))),h=new or({gpu:e,attributes:u}),c=new or({gpu:e,attributes:l}),m=new Xa({gpu:e,buffers:h.getBuffers()}),d=new Xa({gpu:e,buffers:c.getBuffers()});this.transformFeedbackBuffers.push({attributes:u,srcVertexArrayObject:h,transformFeedback:d,outputVertexArrayobject:c}),this.transformFeedbackBuffers.push({attributes:l,srcVertexArrayObject:c,transformFeedback:m,outputVertexArrayobject:h})}get read(){const e=this.transformFeedbackBuffers[0];return{vertexArrayObject:e.srcVertexArrayObject,transformFeedback:e.transformFeedback}}get write(){const e=this.transformFeedbackBuffers[0];return{vertexArrayObject:e.srcVertexArrayObject,transformFeedback:e.transformFeedback}}swap(){const e=this.transformFeedbackBuffers[0];this.transformFeedbackBuffers[0]=this.transformFeedbackBuffers[1],this.transformFeedbackBuffers[1]=e}}class Wa extends Jt{constructor({diffuseColor:e,diffuseMap:t,diffuseMapUvScale:r,diffuseMapUvOffset:a,emissiveColor:i,vertexShaderModifier:s={},uniforms:o=[],...u}={}){super({...u,name:"UnlitMaterial",vertexShaderModifier:s,uniforms:[...[{name:"uDiffuseColor",type:Te,value:e||Nt.black},{name:"uDiffuseMap",type:oe,value:t||null},{name:"uDiffuseMapUvScale",type:le,value:r||Gr.one},{name:"uDiffuseMapUvOffset",type:le,value:a||Gr.one},{name:"uEmissiveColor",type:Te,value:i||Nt.black},{name:ke,type:xe,value:n}],...o||[]],depthUniforms:[{name:"uDiffuseMap",type:oe,value:t||null},{name:"uDiffuseMapUvScale",type:le,value:Gr.one},{name:"uDiffuseMapUvOffset",type:le,value:Gr.one}],useNormalMap:!1,depthTest:!0,depthWrite:!1,depthFuncType:l,uniformBlockNames:[wt,bt]})}start({gpu:e,attributeDescriptors:t=[]}){this.vertexShader=pa,this.fragmentShader="#version 300 es\nprecision highp float;\n#pragma DEFINES\nuniform vec4 uDiffuseColor;uniform sampler2D uDiffuseMap;uniform vec2 uDiffuseMapUvScale;uniform vec4 uEmissiveColor;uniform int uShadingModelId;vec3 u(vec3 u){return pow(u,vec3(2.2));}layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};\n#ifdef USE_ALPHA_TEST\nuniform float uAlphaTestThreshold;\n#endif\nstruct Camera{vec3 worldPosition;};in vec2 vUv;in vec3 vNormal,vWorldPosition;\n#ifdef USE_VERTEX_COLOR\nin vec4 vVertexColor;\n#endif\n#define SHADING_MODEL_NUM 3.\nstruct GBufferA{vec3 baseColor;};struct GBufferB{vec3 normal;float shadingModelId;};struct GBufferC{float metallic;float roughness;};struct GBufferD{vec3 emissiveColor;};vec4 u(vec3 u,int v){float o=float(v)/SHADING_MODEL_NUM;return vec4(u*.5+.5,o);}void v(float u,float v){if(u<v)discard;}layout(location=0) out vec4 outGBufferA;layout(location=1) out vec4 outGBufferB;layout(location=2) out vec4 outGBufferC;layout(location=3) out vec4 outGBufferD;void main(){vec4 o=vec4(0,0,0,1);vec2 n=vUv*uDiffuseMapUvScale;vec3 l=vNormal;\n#ifdef USE_NORMAL_MAP\nl=calcNormal(vNormal,vTangent,vBinormal,uNormalMap,n);\n#else\nl=normalize(vNormal);\n#endif\n\n#ifdef USE_VERTEX_COLOR\ndiffuseColor*=vVertexColor;\n#endif\no=texture(uDiffuseMap,n);\n#ifdef USE_ALPHA_TEST\nv(o.w,uAlphaTestThreshold);\n#endif\no.xyz=u(o.xyz);vec3 U=u(uEmissiveColor.xyz);outGBufferA=vec4(o.xyz,1);outGBufferB=u(l,uShadingModelId);outGBufferC=vec4(0,0,0,1);outGBufferD=vec4(U,1);}",this.depthFragmentShader=ga,super.start({gpu:e,attributeDescriptors:t})}}class $a extends Lt{constructor(e){super({...e,lightType:y}),this.shadowCamera=new fr(45,1,.1,20),this.shadowCamera.fixedAspect=!0,this.shadowCamera.transform.setRotationY(180),this.addChild(this.shadowCamera),this.distance=e.distance,this.attenuation=e.attenuation,this.coneCos=e.coneCos,this.penumbraCos=e.penumbraCos}update(e){super.update(e),this.shadowCamera&&(this.shadowCamera.fov=2*(Math.acos(this.coneCos)*(180/Math.PI)),this.shadowCamera.far=this.distance,this.shadowCamera.updateProjectionMatrix(),this.updateShadowCamera())}}class Ya{constructor(e,t){this.point=e,this.normal=t}}const Ja=2048,Ka="/labs/street-light/assets/",qa=(e,t)=>{ei.addBorderSpacer();const r=ei.addGroup(t,!1);r.addColorDebugger({label:"color",initialValue:e.color.getHexCoord(),onChange:t=>{e.color=Nt.fromHex(t)}}),r.addSliderDebugger({label:"intensity",minValue:0,maxValue:10,stepValue:.001,initialValue:e.intensity,onChange:t=>{e.intensity=t}}),r.addSliderDebugger({label:"distance",minValue:0,maxValue:100,stepValue:.01,initialValue:e.distance,onChange:t=>{e.distance=t}}),r.addSliderDebugger({label:"attenuation",minValue:0,maxValue:10,stepValue:.001,initialValue:e.attenuation,onChange:t=>{e.attenuation=t}}),r.addSliderDebugger({label:"coneCos",minValue:0,maxValue:1,stepValue:.001,initialValue:e.coneCos,onChange:t=>{e.coneCos=t}}),r.addSliderDebugger({label:"penumbraCos",minValue:0,maxValue:1,stepValue:.001,initialValue:e.penumbraCos,onChange:t=>{e.penumbraCos=t}}),r.addSliderDebugger({label:"pos x",minValue:-10,maxValue:10,stepValue:.001,initialValue:e.transform.position.x,onChange:t=>{e.transform.position.x=t}}),r.addSliderDebugger({label:"pos y",minValue:0,maxValue:10,stepValue:.001,initialValue:e.transform.position.y,onChange:t=>{e.transform.position.y=t}}),r.addSliderDebugger({label:"pos z",minValue:-10,maxValue:10,stepValue:.001,initialValue:e.transform.position.z,onChange:t=>{e.transform.position.z=t}})},Qa=document.createElement("style");Qa.innerText="\n:root {\n  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;\n  line-height: 1.5;\n  font-weight: 400;\n  color-scheme: light dark;\n  font-synthesis: none;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody {\n  overflow: hidden;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n} \n\n#wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\ncanvas {\n  display: block;\n  width: 100%;\n  height: 100%;\n  background-color: black;\n}\n",document.head.appendChild(Qa);const Za={instanceNum:0};let ei,ti,ri,ai,ii,si,ni,oi,ui;Za.instanceNum=64;const li=!!window.navigator.userAgent.match(/(iPhone|iPad|iPod|Android)/i),hi=li?new class extends Ga{#H=!1;#W=Gr.zero;constructor(){super()}start(){window.addEventListener("touchstart",this.#$.bind(this)),window.addEventListener("touchmove",this.#Y.bind(this)),window.addEventListener("touchend",this.#J.bind(this))}update(){this.updateInternal({inputPosition:this.#W,isDown:this.#H})}#$(e){this.#H=!0;const t=e.touches[0];this.setInputPosition(t.clientX,t.clientY)}#Y(e){const t=e.touches[0];this.setInputPosition(t.clientX,t.clientY)}#J(e){this.#H=!1;const t=e.touches[0];this.setInputPosition(t.clientX,t.clientY)}setInputPosition(e,t){this.#W.set(e,t)}dispose(){window.removeEventListener("touchstart",this.#$.bind(this)),window.removeEventListener("touchmove",this.#Y.bind(this)),window.removeEventListener("touchend",this.#J.bind(this))}}:new class extends Ga{#H=!1;#W=Gr.zero;constructor(){super()}start(){window.addEventListener("mousedown",this.#K.bind(this)),window.addEventListener("mousemove",this.#q.bind(this)),window.addEventListener("mouseup",this.#Q.bind(this))}update(){this.updateInternal({inputPosition:this.#W,isDown:this.#H})}#K(e){this.#H=!0,this.setInputPosition(e.clientX,e.clientY)}#q(e){this.setInputPosition(e.clientX,e.clientY)}#Q(e){this.#H=!1,this.setInputPosition(e.clientX,e.clientY)}setInputPosition(e,t){this.#W.set(e,t)}dispose(){window.removeEventListener("mousedown",this.#K.bind(this)),window.removeEventListener("mousemove",this.#q.bind(this)),window.removeEventListener("mouseup",this.#Q.bind(this))}};hi.start();const ci=document.createElement("div");document.body.appendChild(ci),ci.setAttribute("id","wrapper");const mi=document.createElement("canvas");ci.appendChild(mi);const di=mi.getContext("webgl2",{antialias:!1,preserveDrawingBuffer:!0});if(!di)throw"invalid gl";const fi=new class{constructor({gl:e}){this.shader=null,this.vao=null,this.uniforms=null,this.validExtensions=[],this.invalidExtensions=[],this.uboBindingPoint=0,this.gl=e,this.dummyTexture=new er({gpu:this,img:nr("white"),wrapS:X.Repeat,wrapT:X.Repeat}),this.dummyTextureBlack=new er({gpu:this,img:nr("black"),wrapS:X.Repeat,wrapT:X.Repeat}),this.dummyCubeTexture=ar(this,nr(),nr(),nr(),nr(),nr(),nr())}setShader(e){this.shader=e}setVertexArrayObject(e){this.vao=e}setUniforms(e){this.uniforms=e}setSize(e,t,r,a){this.gl.viewport(e,t,r,a)}setFramebuffer(e){const t=this.gl;e?(t.bindFramebuffer(t.FRAMEBUFFER,e.glObject),e.hasMultipleDrawBuffers&&t.drawBuffers(e.drawBufferList)):t.bindFramebuffer(t.FRAMEBUFFER,null)}flush(){this.gl.flush()}clearDepth(e,t,r,a){const i=this.gl;i.depthMask(!0),i.colorMask(!1,!1,!1,!1),i.clearColor(e,t,r,a),i.clear(i.DEPTH_BUFFER_BIT)}clearColor(e,t,r,a){const i=this.gl;i.depthMask(!1),i.colorMask(!0,!0,!0,!0),i.clearColor(e,t,r,a),i.clear(i.COLOR_BUFFER_BIT)}clear(e,t,r,a){this.clearDepth(e,t,r,a),this.clearColor(e,t,r,a)}checkExtension(e){if(this.validExtensions.includes(e))return!0;if(this.invalidExtensions.includes(e))return!1;return null!=this.gl.getExtension(e)?(this.validExtensions.push(e),!0):(this.invalidExtensions.push(e),!1)}#Z(e){const t=this.gl;switch(e){case r:return t.POINTS;case a:return t.LINES;case i:return t.TRIANGLES;default:throw"invalid primitive type"}}setUniformValues(){const e=this.gl;let t=0;const r=(r,a,i)=>{const s=e.getUniformLocation(this.shader.glObject,a);switch(r){case xe:e.uniform1i(s,i);break;case ge:e.uniform1f(s,i);break;case ve:e.uniform1fv(s,i);break;case le:e.uniform2fv(s,i.elements);break;case he:e.uniform2fv(s,i.map((e=>[...e.elements])).flat());break;case ce:e.uniform3fv(s,i.elements);break;case me:e.uniform4fv(s,i.elements);break;case de:e.uniform4fv(s,i.map((e=>[...e.elements])).flat());break;case se:e.uniformMatrix4fv(s,!1,i.elements);break;case ne:i&&e.uniformMatrix4fv(s,!1,i.map((e=>[...e.elements])).flat());break;case Te:e.uniform4fv(s,i.elements);break;case ye:i&&e.uniform4fv(s,i.map((e=>[...e.elements])).flat());break;case oe:e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,i?i.glObject:this.dummyTexture.glObject),e.uniform1i(s,t),t++;break;case we:const n=[];i.forEach((r=>{n.push(t),e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,r?r.glObject:this.dummyTexture.glObject),t++})),e.uniform1iv(s,n);break;case ue:e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_CUBE_MAP,i?i.glObject:this.dummyCubeTexture.glObject),e.uniform1i(s,t),t++;break;default:throw`invalid uniform - name: ${a}, type: ${r}`}};this.uniforms&&this.uniforms.data.forEach((e=>{if(e.type===fe){e.value.forEach((t=>{const a=`${e.name}.${t.name}`;r(t.type,a,t.value)}))}else e.type===pe?e.value.forEach(((t,a)=>{t.forEach((t=>{const i=`${e.name}[${a}].${t.name}`;r(t.type,i,t.value)}))})):r(e.type,e.name,e.value)}))}updateTransformFeedback({shader:e,uniforms:t,transformFeedback:r,vertexArrayObject:a,drawCount:i}){this.uniforms=t,this.shader=e,this.vao=a;const s=this.gl;s.bindVertexArray(this.vao.glObject),s.useProgram(this.shader.glObject),this.setUniformValues(),s.enable(s.RASTERIZER_DISCARD),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,r.glObject),s.beginTransformFeedback(s.POINTS),s.drawArrays(s.POINTS,0,i),s.endTransformFeedback(),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null),s.disable(s.RASTERIZER_DISCARD),s.useProgram(null),s.bindVertexArray(null),this.shader=null,this.uniforms=null,this.vao=null}draw(e,t,r,a,i,s,n,o,d=0){const f=this.#Z(t),p=this.gl;switch(n){case U:p.enable(p.CULL_FACE),p.cullFace(p.BACK),p.frontFace(p.CCW);break;case I:p.enable(p.CULL_FACE),p.cullFace(p.FRONT),p.frontFace(p.CCW);break;case z:p.disable(p.CULL_FACE),p.frontFace(p.CCW);break;default:throw"invalid face side"}if(p.depthMask(a),r)switch(p.enable(p.DEPTH_TEST),i){case l:p.depthFunc(p.EQUAL);break;case u:p.depthFunc(p.LEQUAL);break;default:throw"invalid depth func type"}else p.disable(p.DEPTH_TEST);switch(s){case h:p.disable(p.BLEND);break;case c:p.enable(p.BLEND),p.blendFunc(p.SRC_ALPHA,p.ONE_MINUS_SRC_ALPHA);break;case m:p.enable(p.BLEND),p.blendFunc(p.SRC_ALPHA,p.ONE);break;default:throw"invalid blend type"}if(!this.shader)throw"shader is not set";if(!this.vao)throw"vao is not set";p.useProgram(this.shader.glObject),this.setUniformValues(),p.bindVertexArray(this.vao.glObject),this.vao.hasIndices?o?p.drawElementsInstanced(f,e,p.UNSIGNED_SHORT,d,o):p.drawElements(f,e,p.UNSIGNED_SHORT,d):o?p.drawArraysInstanced(f,d,e,o):p.drawArrays(f,d,e),p.bindTexture(p.TEXTURE_2D,null),p.bindTexture(p.TEXTURE_CUBE_MAP,null)}createUniformBufferObject(e,t,r){const a=[];r.forEach((e=>{switch(e.type){case fe:e.value.forEach((t=>{a.push(`${e.name}.${t.name}`)}));break;case pe:e.value.forEach(((t,r)=>{t.forEach((t=>{a.push(`${e.name}[${r}].${t.name}`)}))}));break;default:a.push(e.name)}}));const i=this.gl,s=i.getUniformBlockIndex(e.glObject,t),n=i.getActiveUniformBlockParameter(e.glObject,s,i.UNIFORM_BLOCK_DATA_SIZE),o=i.getUniformIndices(e.glObject,a),u=i.getActiveUniforms(e.glObject,o,i.UNIFORM_OFFSET),l=new sr(this,t,n,a,o,u,n,this.uboBindingPoint);return this.uboBindingPoint++,l}bindUniformBlockAndGetBlockIndex(e,t,r){const a=this.gl.getUniformBlockIndex(t.glObject,r);return this.gl.uniformBlockBinding(t.glObject,a,e.bindingPoint),a}}({gl:di}),pi=new class{constructor(){this.children=[]}add(e){this.children.push(e.transform)}traverse(e){for(let t=0;t<this.children.length;t++)this.#ee(this.children[t].actor,e)}find(e){return this.children.find((t=>t.actor.name===e))}#ee(e,t){if(t(e),e.transform.hasChild)for(let r=0;r<e.transform.children.length;r++)this.#ee(e.transform.children[r],t)}},gi=Math.min(window.devicePixelRatio,1),vi=new class{constructor({gpu:r,canvas:a,pixelRatio:i=1.5}){this.globalUniformBufferObjects=[],this.renderTarget=null,this.clearColorDirtyFlag=!1,this.realWidth=1,this.realHeight=1,this.stats=null,this.screenQuadCamera=dr.CreateFullQuadOrthographicCamera(),this.gpu=r,this.canvas=a,this.pixelRatio=i,this._scenePostProcess=new yr(this.screenQuadCamera),this._depthPrePassRenderTarget=new Sr({gpu:r,type:Y,width:1,height:1,name:"depth pre-pass render target",depthPrecision:W}),this._gBufferRenderTargets=new Mr({gpu:r,width:1,height:1,name:"g-buffer render target"}),this._afterDeferredShadingRenderTarget=new Sr({gpu:r,type:J,width:1,height:1,name:"after g-buffer render target"}),this._copyDepthSourceRenderTarget=new Sr({gpu:r,type:J,width:1,height:1,name:"copy depth source render target",depthPrecision:W}),this._copyDepthDestRenderTarget=new Sr({gpu:r,type:Y,width:1,height:1,name:"copy depth dest render target",depthPrecision:W}),this._ambientOcclusionPass=new Ur({gpu:r}),this._deferredShadingPass=new Vr({gpu:r}),this._ssrPass=new Ir({gpu:r}),this._lightShaftPass=new Hr({gpu:r}),this._volumetricLightPass=new Wr({gpu:r}),this._fogPass=new ea({gpu:r}),this._depthOfFieldPass=new jr({gpu:r}),this._scenePostProcess.addPass(this._depthOfFieldPass),this._bloomPass=new kr({gpu:r}),this._scenePostProcess.addPass(this._bloomPass),this._streakPass=new oa({gpu:r}),this._scenePostProcess.addPass(this._streakPass),this._toneMappingPass=new zr({gpu:r}),this._scenePostProcess.addPass(this._toneMappingPass),this._chromaticAberrationPass=new ra({gpu:r}),this._scenePostProcess.addPass(this._chromaticAberrationPass),this._vignettePass=new na({gpu:r}),this._scenePostProcess.addPass(this._vignettePass);const s=new jt({gpu:r,vertexShader:"#version 300 es\n#define MAX_SPOT_LIGHT_COUNT 4\nlayout(std140) uniform ubCommon{float uTime;vec4 uViewport;};layout(std140) uniform ubTransformations{mat4 uWorldMatrix;mat4 uViewMatrix;mat4 uProjectionMatrix;mat4 uNormalMatrix;mat4 uInverseWorldMatrix;mat4 uViewProjectionMatrix;mat4 uInverseViewMatrix;mat4 uInverseProjectionMatrix;mat4 uInverseViewProjectionMatrix;mat4 uTransposeInverseViewMatrix;};layout(std140) uniform ubCamera{vec3 uViewPosition;vec3 uViewDirection;float uNearClip;float uFarClip;float uAspect;float uFov;};struct DirectionalLight{vec3 direction;float intensity;vec4 color;mat4 shadowMapProjectionMatrix;};layout(std140) uniform ubDirectionalLight{DirectionalLight uDirectionalLight;};struct SpotLight{vec4 color;vec3 position;vec3 direction;float intensity;float distance;float attenuation;float coneCos;float penumbraCos;mat4 shadowMapProjectionMatrix;};layout(std140) uniform ubSpotLight{SpotLight uSpotLight[MAX_SPOT_LIGHT_COUNT];};void main(){}",fragmentShader:"#version 300 es\nvoid main(){}"}),n=[{name:Pe,type:se,value:t.identity},{name:Se,type:se,value:t.identity},{name:Me,type:se,value:t.identity},{name:Ce,type:se,value:t.identity},{name:Re,type:se,value:t.identity},{name:Ee,type:se,value:t.identity},{name:Be,type:se,value:t.identity},{name:Ae,type:se,value:t.identity},{name:De,type:se,value:t.identity},{name:Ve,type:se,value:t.identity}];this.globalUniformBufferObjects.push({uniformBufferObject:this.gpu.createUniformBufferObject(s,wt,n),data:n});const o=[{name:_e,type:ce,value:e.zero},{name:Fe,type:ce,value:e.zero},{name:rt,type:ge,value:0},{name:at,type:ge,value:0},{name:Ue,type:ge,value:0},{name:Ie,type:ge,value:0}];this.globalUniformBufferObjects.push({uniformBufferObject:this.gpu.createUniformBufferObject(s,bt,o),data:o});const u=[{name:st,type:fe,value:[{name:ot,type:ce,value:e.zero},{name:ut,type:ge,value:0},{name:lt,type:Te,value:Nt.black},{name:ht,type:se,value:t.identity}]}];this.globalUniformBufferObjects.push({uniformBufferObject:this.gpu.createUniformBufferObject(s,Pt,u),data:u});const l=[{name:nt,type:pe,value:Ar.range(4).map((()=>[{name:lt,type:Te,value:Nt.black},{name:dt,type:ce,value:e.zero},{name:ot,type:ce,value:e.zero},{name:ut,type:ge,value:0},{name:ft,type:ge,value:0},{name:pt,type:ge,value:0},{name:gt,type:ge,value:0},{name:vt,type:ge,value:0},{name:ht,type:se,value:t.identity}]))}];this.globalUniformBufferObjects.push({uniformBufferObject:this.gpu.createUniformBufferObject(s,St,l),data:l});const h=[{name:Ke,type:ge,value:0},{name:qe,type:me,value:Ot.zero}];this.globalUniformBufferObjects.push({uniformBufferObject:this.gpu.createUniformBufferObject(s,yt,h),data:h})}checkNeedsBindUniformBufferObjectToMaterial(e){e.boundUniformBufferObjects||(e.boundUniformBufferObjects=!0,e.uniformBlockNames.forEach((t=>{const r=this.globalUniformBufferObjects.find((({uniformBufferObject:e})=>e.blockName===t));if(!r)return;const a=this.gpu.bindUniformBlockAndGetBlockIndex(r.uniformBufferObject,e.shader,t);e.uniforms.addUniformBlock(a,r.uniformBufferObject,[])})))}get depthPrePassRenderTarget(){return this._depthPrePassRenderTarget}get gBufferRenderTargets(){return this._gBufferRenderTargets}get ambientOcclusionPass(){return this._ambientOcclusionPass}get ssrPass(){return this._ssrPass}get deferredShadingPass(){return this._deferredShadingPass}get lightShaftPass(){return this._lightShaftPass}get volumetricLightPass(){return this._volumetricLightPass}get fogPass(){return this._fogPass}get depthOfFieldPass(){return this._depthOfFieldPass}get bloomPass(){return this._bloomPass}get streakPass(){return this._streakPass}get chromaticAberrationPass(){return this._chromaticAberrationPass}get vignettePass(){return this._vignettePass}setStats(e){this.stats=e}setSize(e,t){this.realWidth=e,this.realHeight=t,this.canvas.width=this.realWidth,this.canvas.height=this.realHeight,this.gpu.setSize(0,0,this.realWidth,this.realHeight),this._depthPrePassRenderTarget.setSize(e,t),this._gBufferRenderTargets.setSize(e,t),this._afterDeferredShadingRenderTarget.setSize(e,t),this._copyDepthSourceRenderTarget.setSize(e,t),this._copyDepthDestRenderTarget.setSize(e,t),this._ambientOcclusionPass.setSize(e,t),this._deferredShadingPass.setSize(e,t),this._ssrPass.setSize(e,t),this._lightShaftPass.setSize(e,t),this._volumetricLightPass.setSize(e,t),this._fogPass.setSize(e,t),this._depthOfFieldPass.setSize(e,t),this._bloomPass.setSize(e,t),this._streakPass.setSize(e,t),this._toneMappingPass.setSize(e,t),this._chromaticAberrationPass.setSize(e,t),this._vignettePass.setSize(e,t)}setRenderTarget(e,t=!1,r=!1){e?(this.renderTarget=e,this.gpu.setFramebuffer(e.framebuffer),this.gpu.setSize(0,0,e.width,e.height)):(this.renderTarget=null,this.gpu.setFramebuffer(null),this.gpu.setSize(0,0,this.realWidth,this.realHeight)),t?(this.gpu.clearColor(0,0,0,0),this.clearColorDirtyFlag=!0):this.clearColorDirtyFlag=!1,r&&this.gpu.clearDepth(1,1,1,1)}flush(){this.gpu.flush()}clearColor(e,t,r,a){this.gpu.clearColor(e,t,r,a)}clearDepth(e,t,r,a){this.gpu.clearDepth(e,t,r,a)}render(e,t,{time:r,onBeforePostProcess:a}){const i={[d]:[],[f]:[],[p]:[],[g]:[]},s={directionalLight:null,spotLights:[]};e.traverse((e=>{switch(e.type){case M:return void i[d].push(this.buildRenderMeshInfo(e,d));case b:case P:e.materials.forEach(((t,r)=>{if(t.alphaTest)i[p].push(this.buildRenderMeshInfo(e,p,r));else switch(t.blendType){case h:return void i[f].push(this.buildRenderMeshInfo(e,f,r));case c:case m:return void i[g].push(this.buildRenderMeshInfo(e,g,r));default:throw"[Renderer.render] invalid blend type"}}));break;case S:if(e.enabled){const t=e;switch(t.lightType){case T:s.directionalLight=t;break;case y:s.spotLights.push(t)}}}}));const n=(e,t)=>e.actor.materials[e.materialIndex].renderQueue-t.actor.materials[t.materialIndex].renderQueue,o=Object.keys(i).map((e=>i[e].sort(n))).flat().filter((({actor:e})=>e.enabled)),u=o.filter((e=>e.queue===d)),l=o.filter((e=>e.queue===d||e.queue===f||e.queue===p)),v=o.filter((e=>e.queue===g));this.updateCommonUniforms({time:r}),s.directionalLight&&this.updateDirectionalLightUniforms(s.directionalLight),s.spotLights.length>0&&this.updateSpotLightsUniforms(s.spotLights);const x=l.filter((({actor:e})=>e.type!==M&&e));this.depthPrePass(x,t),this.scenePass(l,t);const w=[];if(s.directionalLight&&w.push(s.directionalLight),s.spotLights.forEach((e=>{e.castShadow&&w.push(e)})),w.length>0){const e=l.filter((({actor:e})=>e.type!==M&&e.castShadow));this.shadowPass(w,e)}if(yr.renderPass({pass:this._ambientOcclusionPass,renderer:this,targetCamera:t,gpu:this.gpu,camera:this._scenePostProcess.postProcessCamera,prevRenderTarget:null,isLastPass:!1,time:r}),u.forEach((e=>{const t=e.actor;this._deferredShadingPass.updateSkyboxUniforms(t)})),ua(this._deferredShadingPass.material,s),this._deferredShadingPass.material.uniforms.setValue("uAmbientOcclusionTexture",this._ambientOcclusionPass.renderTarget.read.texture),yr.renderPass({pass:this._deferredShadingPass,renderer:this,targetCamera:t,gpu:this.gpu,camera:this._scenePostProcess.postProcessCamera,prevRenderTarget:null,isLastPass:!1,time:r,lightActors:s}),yr.renderPass({pass:this._ssrPass,renderer:this,targetCamera:t,gpu:this.gpu,camera:this._scenePostProcess.postProcessCamera,prevRenderTarget:this._deferredShadingPass.renderTarget,isLastPass:!1,time:r}),!s.directionalLight)throw"invalid directional light.";if(this._lightShaftPass.setDirectionalLight(s.directionalLight),yr.renderPass({pass:this._lightShaftPass,renderer:this,targetCamera:t,gpu:this.gpu,camera:this._scenePostProcess.postProcessCamera,prevRenderTarget:this._deferredShadingPass.renderTarget,isLastPass:!1,time:r}),this._volumetricLightPass.setSpotLights(s.spotLights),yr.renderPass({pass:this._volumetricLightPass,renderer:this,targetCamera:t,gpu:this.gpu,camera:this._scenePostProcess.postProcessCamera,prevRenderTarget:this._deferredShadingPass.renderTarget,isLastPass:!1,time:r}),this._fogPass.setLightShaftMap(this._lightShaftPass.renderTarget),this._fogPass.setVolumetricLightMap(this._volumetricLightPass.renderTarget),yr.renderPass({pass:this._fogPass,renderer:this,targetCamera:t,gpu:this.gpu,camera:this._scenePostProcess.postProcessCamera,prevRenderTarget:this._ssrPass.renderTarget,isLastPass:!1,time:r}),this._afterDeferredShadingRenderTarget.setTexture(this._fogPass.renderTarget.read.texture),this._afterDeferredShadingRenderTarget.setDepthTexture(this._depthPrePassRenderTarget.depthTexture),this.copyDepthTexture(),v.forEach((e=>{e.actor.material.uniforms.setValue(Ge,this._copyDepthDestRenderTarget.depthTexture)})),this.setRenderTarget(this._afterDeferredShadingRenderTarget.write),this.transparentPass(v,t,s),a&&a(),!this._scenePostProcess.hasEnabledPass)throw"invalid postprocess";let E=this._afterDeferredShadingRenderTarget;const C=!t.renderTarget&&!t.hasEnabledPostProcessPass;this._scenePostProcess.update(),this._scenePostProcess.render({gpu:this.gpu,renderer:this,prevRenderTarget:E,gBufferRenderTargets:this._gBufferRenderTargets,targetCamera:t,time:r,isCameraLastPass:C}),C||(E=this._scenePostProcess.lastRenderTarget,t.hasEnabledPostProcessPass&&(t.postProcess?.update(),t.postProcess?.render({gpu:this.gpu,renderer:this,prevRenderTarget:E,gBufferRenderTargets:this._gBufferRenderTargets,targetCamera:t,time:r,isCameraLastPass:!t.renderTarget,lightActors:s})))}renderMesh(e,t){if(e.update(),this.stats&&(this.stats.addDrawVertexCount(e),this.stats.incrementDrawCall()),this.gpu.setVertexArrayObject(e.vertexArrayObject),!t.shader)throw"invalid material shader";let r;if(this.gpu.setShader(t.shader),this.gpu.setUniforms(t.uniforms),null!==t.depthWrite)r=t.depthWrite;else switch(t.blendType){case h:r=!0;break;case c:case m:r=!1;break;default:throw"invalid depth write"}const a=!!t.depthTest,i=t.depthFuncType;this.gpu.draw(e.drawCount,t.primitiveType,a,r,i,t.blendType,t.faceSide,e.instanceCount)}buildRenderMeshInfo(e,t,r=0){return{actor:e,queue:t,materialIndex:r}}setUniformBlockValue(e,t,r){const a=this.globalUniformBufferObjects.find((({uniformBufferObject:t})=>t.blockName===e));if(!a)return;const i=a.uniformBufferObject,s=a.data.find((e=>e.name===t));s&&i.updateUniformValue(t,s.type,r)}depthPrePass(e,t){this.setRenderTarget(this._depthPrePassRenderTarget,!1,!0),this.updateCameraUniforms(t),e.forEach((({actor:e})=>{const t=e.depthMaterial;if(!t)throw"[Renderer.depthPrePass] invalid depth material";e.mainMaterial.skipDepthPrePass||(this.updateActorTransformUniforms(e),this.renderMesh(e.geometry,t),this.stats&&this.stats.addPassInfo("depth pre pass",e.name,e.geometry))}))}copyDepthTexture(){this._copyDepthSourceRenderTarget.setDepthTexture(this._depthPrePassRenderTarget.depthTexture),Sr.blitDepth({gpu:this.gpu,sourceRenderTarget:this._copyDepthSourceRenderTarget,destRenderTarget:this._copyDepthDestRenderTarget,width:this.realWidth,height:this.realHeight})}shadowPass(e,t){e.forEach((e=>{if(!e.shadowMap)throw"invalid shadow pass";if(!e.shadowCamera)throw"invalid shadow camera";this.setRenderTarget(e.shadowMap.write,!1,!0),t.length<1||(this.updateCameraUniforms(e.shadowCamera),t.forEach((({actor:t})=>{const r=t.depthMaterial;if(!r)throw"invalid target material";this.updateActorTransformUniforms(t),r.uniforms.setValue(Ge,this._copyDepthDestRenderTarget.depthTexture),t.updateDepthMaterial({camera:e.shadowCamera}),this.renderMesh(t.geometry,r),this.stats&&this.stats.addPassInfo("shadow pass",t.name,t.geometry)})))}))}scenePass(e,t){this._gBufferRenderTargets.setDepthTexture(this._depthPrePassRenderTarget.depthTexture),this.setRenderTarget(this._gBufferRenderTargets.write,!0),this.updateCameraUniforms(t),e.forEach((({actor:e,materialIndex:r})=>{if(e.type===M){if(!e.renderMesh)return;e.updateTransform(t)}const a=e.materials[r];a.skipDepthPrePass&&(this.setRenderTarget(null,!1,!1),this.copyDepthTexture(),this.setRenderTarget(this._gBufferRenderTargets.write,!1,!1)),this.updateActorTransformUniforms(e),a.uniforms.setValue(Ge,this._copyDepthDestRenderTarget.depthTexture),e.updateMaterial({camera:t}),this.renderMesh(e.geometry,a),this.stats&&this.stats.addPassInfo("scene pass",e.name,e.geometry)}))}updateActorTransformUniforms(e){this.setUniformBlockValue(wt,Pe,e.transform.worldMatrix),this.setUniformBlockValue(wt,Re,e.transform.inverseWorldMatrix),this.setUniformBlockValue(wt,Ce,e.transform.normalMatrix)}updateCameraUniforms(e){this.setUniformBlockValue(wt,Se,e.viewMatrix),this.setUniformBlockValue(wt,Me,e.projectionMatrix),this.setUniformBlockValue(bt,_e,e.transform.worldMatrix.position),this.setUniformBlockValue(bt,Fe,e.getWorldForward()),this.setUniformBlockValue(bt,rt,e.near),this.setUniformBlockValue(bt,at,e.far),this.setUniformBlockValue(bt,Ue,(e.isPerspective(),e.aspect)),this.setUniformBlockValue(bt,Ie,e.isPerspective()?e.fov:0),this.setUniformBlockValue(wt,Ee,e.viewProjectionMatrix),this.setUniformBlockValue(wt,Be,e.inverseViewMatrix),this.setUniformBlockValue(wt,Ae,e.inverseProjectionMatrix),this.setUniformBlockValue(wt,De,e.inverseViewProjectionMatrix),this.setUniformBlockValue(wt,Ve,e.viewMatrix.clone().invert().transpose())}updateUniformBlockValue(e,t,r){const a=this.globalUniformBufferObjects.find((({uniformBufferObject:t})=>t.blockName===e));if(!a)return;const i=a.uniformBufferObject,s=a.data.find((e=>e.name===t));if(!s)return;const n=(e,t)=>{const r=[];switch(e){case ge:case xe:r.push(t),r.push(0),r.push(0),r.push(0);break;case be:r.push(t?1:0),r.push(0),r.push(0),r.push(0);break;case le:case ce:r.push(...t.elements),r.push(0);break;case me:case se:case Te:r.push(...t.elements);break;default:throw`invalid uniform type: ${e}`}return r};switch(s.type){case fe:r.forEach((e=>{const r=`${t}.${e.name}`,a=n(e.type,e.value);i.updateBufferData(r,new Float32Array(a))}));break;case pe:r.forEach(((e,r)=>{e.forEach((e=>{const a=`${t}[${r}].${e.name}`,s=n(e.type,e.value);i.updateBufferData(a,new Float32Array(s))}))}));break;default:if(Array.isArray(r)){const e=[];r.forEach((t=>{"number"==typeof t?(e.push(t),e.push(0),e.push(0),e.push(0)):"boolean"==typeof t?(e.push(t?1:0),e.push(0),e.push(0),e.push(0)):e.push(...t.elements)})),i.updateBufferData(t,new Float32Array(e))}else i.updateBufferData(t,"number"==typeof r?new Float32Array([r]):r.elements)}}updateCommonUniforms({time:e}){this.updateUniformBlockValue(yt,Ke,e),this.updateUniformBlockValue(yt,qe,new Ot(this.realWidth,this.realHeight,this.realWidth/this.realHeight,0))}updateDirectionalLightUniforms(e){this.updateUniformBlockValue(Pt,st,[{name:ot,type:ce,value:e.transform.position.clone().negate().normalize()},{name:ut,type:ge,value:e.intensity},{name:lt,type:Te,value:e.color},{name:ht,type:se,value:e.shadowMapProjectionMatrix}])}updateSpotLightsUniforms(e){this.updateUniformBlockValue(St,nt,e.map((e=>[{name:lt,type:Te,value:e.color},{name:dt,type:ce,value:e.transform.position},{name:ot,type:ce,value:e.transform.worldForward.clone()},{name:ut,type:ge,value:e.intensity},{name:ft,type:ge,value:e.distance},{name:pt,type:ge,value:e.attenuation},{name:gt,type:ge,value:e.coneCos},{name:vt,type:ge,value:e.penumbraCos},{name:ht,type:se,value:e.shadowMapProjectionMatrix}])))}transparentPass(e,t,r){this.updateCameraUniforms(t),e.forEach((({actor:e,materialIndex:t})=>{const a=e.materials[t];this.updateActorTransformUniforms(e),ua(a,r),this.renderMesh(e.geometry,a),this.stats&&this.stats.addPassInfo("transparent pass",e.name,e.geometry)}))}}({gpu:fi,canvas:mi,pixelRatio:gi}),xi=new class{constructor({gpu:e,renderer:t,onBeforeFixedUpdate:r,onBeforeUpdate:a,onRender:i,showStats:s=!1}){this.#te=null,this.#re=null,this.#ae=null,this.#ie=null,this.#se=null,this._onRender=null,this.#d=e,this.#ne=t,this.#oe=new Tr({showStats:s,showPipeline:!1}),this.#ne.setStats(this.#oe),this.#ue=new vr(60,this.fixedUpdate.bind(this)),this.#le=new gr(60,this.update.bind(this)),this.#ie=r||null,this.#se=a||null,this._onRender=i||null}#d;#oe;#ne;#te;#ue;#le;#re;#ae;#ie;#se;get renderer(){return this.#ne}set onBeforeStart(e){this.#re=e}set onAfterStart(e){this.#ae=e}set onBeforeUpdate(e){this.#se=e}set onBeforeFixedUpdate(e){this.#ie=e}set onRender(e){this._onRender=e}setScene(e){this.#te=e}start(){this.#re&&this.#re();const e=performance.now()/1e3;this.#ue.start(e),this.#le.start(e),this.#ae&&this.#ae()}setSize(e,t){const r=e*this.renderer.pixelRatio,a=t*this.renderer.pixelRatio,i=Math.floor(r),s=Math.floor(a);this.#te?.traverse((e=>e.setSize(i,s))),this.#ne.setSize(r,a)}fixedUpdate(e,t){this.#ie&&this.#ie({fixedTime:e,fixedDeltaTime:t}),this.#te?.traverse((r=>r.fixedUpdate({gpu:this.#d,fixedTime:e,fixedDeltaTime:t}))),this.#te?.traverse((e=>{e.updateTransform()}))}update(e,t){this.#se&&this.#se({time:e,deltaTime:t}),this.#te?.traverse((r=>{switch(r.update({gpu:this.#d,time:e,deltaTime:t}),r.type){case M:case b:case P:r.beforeRender({gpu:this.#d});const e=r;e.materials.forEach((e=>{this.renderer.checkNeedsBindUniformBufferObjectToMaterial(e)})),e.depthMaterial&&this.renderer.checkNeedsBindUniformBufferObjectToMaterial(e.depthMaterial)}})),this.#te?.traverse((e=>{e.updateTransform()})),this.render(e,t)}render(e,t){this.#oe.clear(),this._onRender&&this._onRender(e,t),this.#oe.update(e)}run(e){this.#ue.exec(e/1e3),this.#le.exec(e/1e3)}}({gpu:fi,renderer:vi,showStats:!0});xi.setScene(pi);const Ti=new fr(50,1,.1,50);pi.add(Ti);const yi=new class{constructor(t){this.dampingFactor=.01,this.minAzimuth=-45,this.maxAzimuth=45,this.minAltitude=-45,this.maxAltitude=45,this.azimuthSpeed=100,this.altitudeSpeed=100,this.#he={azimuth:0,altitude:0},this.#ce=e.zero,this.distance=10,this.attenuation=.001,this.#me=0,this.#de=0,this.deltaAzimuthPower=1,this.deltaAltitudePower=1,this.defaultAzimuth=0,this.defaultAltitude=0,this.enabled=!0,this.#fe=e.zero,this.#pe=e.zero,this.#ge=t}#ge;#he;#ce;#me;#de;#fe;#pe;set lookAtTarget(e){this.#ce=e}start(e=null,t=null){this.#he.azimuth=null!==e?e:this.defaultAzimuth,this.#he.altitude=null!==t?t:this.defaultAltitude,this.#ve(!0)}setDelta(e){this.enabled&&(this.#me=e.x*this.deltaAzimuthPower,this.#de=e.y*this.deltaAltitudePower)}fixedUpdate(){this.enabled&&(this.#me=Math.sign(this.#me)*Math.max(0,Math.abs(this.#me)-this.attenuation),this.#de=Math.sign(this.#de)*Math.max(0,Math.abs(this.#de)-this.attenuation),this.#he.azimuth+=this.#me*this.azimuthSpeed,this.#he.altitude+=this.#de*this.altitudeSpeed,this.#ve())}#ve(t=!1){this.#he.azimuth=_r(this.#he.azimuth,this.minAzimuth,this.maxAzimuth),this.#he.altitude=_r(this.#he.altitude,this.minAltitude,this.maxAltitude);const r=e.rotateVectorX(new e(0,0,1),this.#he.altitude),a=e.rotateVectorY(r,this.#he.azimuth);this.#fe=e.addVectors(this.#ce,a.scale(this.distance)),this.#pe=e.lerpVectors(this.#pe,this.#fe,t?1:this.dampingFactor),this.#ge.transform.position=this.#pe,this.#ge.transform.lookAt(this.#ce)}}(Ti);yi.distance=15,yi.attenuation=.01,yi.dampingFactor=.2,yi.azimuthSpeed=100,yi.altitudeSpeed=100,yi.deltaAzimuthPower=2,yi.deltaAltitudePower=2,yi.maxAltitude=5,yi.minAltitude=-45,yi.maxAzimuth=55,yi.minAzimuth=-55,yi.defaultAzimuth=10,yi.defaultAltitude=-10,yi.lookAtTarget=new e(0,3,0),Ti.subscribeOnStart((({actor:e})=>{e.setClearColor(new Ot(0,0,0,1))})),Ti.onFixedUpdate=()=>{hi.isDown&&yi.enabled&&yi.setDelta(hi.deltaNormalizedInputPosition),yi.fixedUpdate()};const wi=new class extends Lt{constructor(e){super({...e,lightType:T}),this.shadowCamera=new dr(-1,1,-1,1,.1,1),this.shadowCamera.transform.setRotationY(180),this.addChild(this.shadowCamera)}update(e){super.update(e),this.updateShadowCamera()}}({intensity:.1,color:Nt.white});wi.shadowCamera&&(wi.shadowCamera.visibleFrustum=!1,wi.castShadow=!0,wi.shadowCamera.near=1,wi.shadowCamera.far=15,wi.shadowCamera.setOrthoSize(null,null,-7,7,-7,7),wi.shadowMap=new Sr({gpu:fi,width:1024,height:1024,type:Y,depthPrecision:W})),wi.subscribeOnStart((({actor:t})=>{t.transform.setTranslation(new e(-8,8,-2)),t.transform.lookAt(new e(0,0,0))})),pi.add(wi);const bi=new $a({intensity:1.4,color:new Nt(1,1,1),distance:15,attenuation:1.06,coneCos:.8,penumbraCos:.9});bi.shadowCamera&&(bi.shadowCamera.visibleFrustum=!1,bi.castShadow=!0,bi.shadowCamera.near=.1,bi.shadowCamera.far=bi.distance,bi.shadowCamera.setPerspectiveSize(1),bi.shadowMap=new Sr({gpu:fi,width:1024,height:1024,type:Y,depthPrecision:W})),bi.subscribeOnStart((({actor:t})=>{t.transform.setTranslation(new e(3.4,8.1,0)),t.transform.lookAt(new e(2,0,0))})),pi.add(bi);const Pi=new $a({intensity:1.4,color:new Nt(1,1,1),distance:15,attenuation:1.06,coneCos:.8,penumbraCos:.9});Pi.shadowCamera&&(Pi.shadowCamera.visibleFrustum=!1,Pi.castShadow=!0,Pi.shadowCamera.near=.1,Pi.shadowCamera.far=Pi.distance,Pi.shadowCamera.setPerspectiveSize(1),Pi.shadowMap=new Sr({gpu:fi,width:1024,height:1024,type:Y,depthPrecision:W})),Pi.subscribeOnStart((({actor:t})=>{t.transform.setTranslation(new e(-3.4,8.1,0)),t.transform.lookAt(new e(-2,0,0))})),pi.add(Pi);const Si=new yr;vi.depthOfFieldPass.focusDistance=18.5,vi.depthOfFieldPass.focusRange=17;const Mi=new class extends Rr{constructor({gpu:e}){super({gpu:e,fragmentShader:"#version 300 es\nprecision mediump float;\n#define MAX_EDGE_STEP_COUNT 9\nin vec2 vUv;out vec4 outColor;uniform sampler2D uSrcTexture;uniform float uTargetWidth,uTargetHeight,uContrastThreshold,uRelativeThreshold,uSubpixelBlending;struct EdgeData{bool isHorizontal;float pixelStep;float oppositeLuma;float gradient;};struct LuminanceData{float center;float top;float right;float bottom;float left;float topLeft;float topRight;float bottomLeft;float bottomRight;float highest;float lowest;float contrast;};float s(vec3 u){return dot(u,vec3(.299,.587,.114));}vec4 s(sampler2D u,vec2 z){return texture(u,z);}vec4 s(sampler2D u,vec2 e,float z,float v){return s(u,e+vec2(z,v));}LuminanceData f(vec2 e,vec2 z){LuminanceData f;vec3 u=s(uSrcTexture,e,0.,z.y).xyz,t=s(uSrcTexture,e,z.x,0.).xyz,v=s(uSrcTexture,e,0.,-z.y).xyz,m=s(uSrcTexture,e,-z.x,0.).xyz,r=s(uSrcTexture,e,0.,0.).xyz,y=s(uSrcTexture,e,z.x,z.y).xyz,L=s(uSrcTexture,e,-z.x,z.y).xyz,p=s(uSrcTexture,e,z.x,-z.y).xyz,a=s(uSrcTexture,e,-z.x,-z.y).xyz;float x=s(u),l=s(m),d=s(r),g=s(t),h=s(v),E=s(L),c=s(y),n=s(a),A=s(p),B=max(d,max(max(x,l),max(h,g))),C=min(d,min(min(x,l),min(h,g)));f.top=x;f.left=l;f.center=d;f.right=g;f.bottom=h;f.topLeft=E;f.topRight=c;f.bottomLeft=n;f.bottomRight=A;f.highest=B;f.lowest=C;f.contrast=B-C;return f;}bool f(LuminanceData z){return z.contrast<max(uContrastThreshold,z.highest*uRelativeThreshold);}float a(LuminanceData z){float u=2.*(z.top+z.right+z.bottom+z.left);u+=z.topLeft+z.topRight+z.bottomLeft+z.bottomRight;u*=1./12.;u=abs(u-z.center);u=clamp(u/z.contrast,0.,1.);float f=smoothstep(0.,1.,u);f*=f;f*=uSubpixelBlending;return f;}EdgeData a(LuminanceData z,vec2 f){EdgeData s;s.isHorizontal=abs(z.top+z.bottom-2.*z.center)*2.+abs(z.topRight+z.bottomRight-2.*z.right)+abs(z.topLeft+z.bottomLeft-2.*z.left)>=abs(z.right+z.left-2.*z.center)*2.+abs(z.topRight+z.topLeft-2.*z.top)+abs(z.bottomRight+z.bottomLeft-2.*z.bottom);float u=s.isHorizontal?z.top:z.right,e=s.isHorizontal?z.bottom:z.left,a=abs(u-z.center),t=abs(e-z.center);s.pixelStep=s.isHorizontal?f.y:f.x;if(a<t)s.pixelStep=-s.pixelStep,s.oppositeLuma=e,s.gradient=t;else s.oppositeLuma=u,s.gradient=a;return s;}float a(LuminanceData z,EdgeData e,vec2 a,vec2 u){float[10] t=float[](1.,1.5,2.,2.,2.,2.,2.,2.,2.,4.);vec2 f=a,i=vec2(0);i=e.isHorizontal?(f.y+=e.pixelStep*.5,vec2(u.x,0)):(f.x+=e.pixelStep*.5,vec2(0,u.y));float x=(z.center+e.oppositeLuma)*.5,v=e.gradient*.25;vec2 m=f+i*vec2(t[0]);float r=s(s(uSrcTexture,m).xyz)-x;bool y=abs(r)>=v;if(!y)m+=i*vec2(t[1]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[2]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[3]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[4]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[5]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[6]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[7]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[8]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(t[9]),r=s(s(uSrcTexture,m).xyz)-x,y=abs(r)>=v;if(!y)m+=i*vec2(8);vec2 l=f-i*vec2(t[0]);float L=s(s(uSrcTexture,l).xyz)-x;bool p=abs(L)>=v;if(!p)l-=i*vec2(t[1]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[2]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[3]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[4]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[5]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[6]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[7]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[8]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(t[9]),L=s(s(uSrcTexture,l).xyz)-x,p=abs(L)>=v;if(!p)l-=i*vec2(8);float d,g;g=e.isHorizontal?(d=m.x-a.x,a.x-l.x):(d=m.y-a.y,a.y-l.y);float h;bool b;b=d<=g?(h=d,r>=0.):(h=g,L>=0.);return b==z.center-x>=0.?0.:.5-h/(d+g);}void main(){vec2 z=vUv,r=vec2(1./uTargetWidth,1./uTargetHeight);LuminanceData u=f(z,r);if(f(u)){outColor=s(uSrcTexture,z);return;}EdgeData e=a(u,r);float t=a(u),y=a(u,e,z,r),v=max(t,y);if(e.isHorizontal)z.y+=e.pixelStep*v;else z.x+=e.pixelStep*v;outColor=s(uSrcTexture,z);}",uniforms:[{name:"uContrastThreshold",type:ge,value:.0625},{name:"uRelativeThreshold",type:ge,value:.125},{name:"uSubpixelBlending",type:ge,value:.75}]})}setSize(e,t){super.setSize(e,t),this.material.uniforms.setValue(Qe,e),this.material.uniforms.setValue(Ze,t)}}({gpu:fi});Si.addPass(Mi);const Ei=new class{constructor({gpu:e}){this.rowPasses=[],this.name="BufferVisualizerPass",this.enabled=!0,this.width=1,this.height=1,this.materials=[],this.fullViewTextureEnabled=!1,this.geometry=new Cr({gpu:e}),this.rowPasses.push({pass:new Nr({gpu:e,fragmentShader:"#version 300 es\n\nprecision mediump float;\n\n#define saturate(a) clamp(a, 0., 1.)\n\nfloat noise(vec2 seed)\r\n{\r\n    return fract(sin(dot(seed, vec2(12.9898, 78.233))) * 43758.5453);\r\n}\n\nfloat isArea(vec2 uv) {\r\n    return step(0., uv.x) * (1. - step(1., uv.x)) * step(0., uv.y) * (1. - step(1., uv.y));\r\n}\n\nvec4 calcAreaColor(vec4 color, vec2 uv, vec2 tiling, vec2 offset) {\r\n    return color * isArea(uv * tiling + offset);\r\n}\n\nvec4 calcTextureAreaColor(sampler2D tex, vec2 uv, vec2 tiling, vec2 offset) {\r\n    return calcAreaColor(texture(tex, uv * tiling + offset), uv, tiling, offset);\r\n}\n\nfloat viewZToLinearDepth(float z, float near, float far) {\r\n    return (z + near) / (near - far);\r\n}\n\nfloat perspectiveDepthToLinearDepth(float rawDepth, float near, float far) {\r\n    float nz = near * rawDepth;\r\n    return -nz / (far * (rawDepth - 1.) - nz);\r\n}\n\nfloat perspectiveDepthToEyeDepth(float rawDepth, float near, float far) {\r\n    float depth = perspectiveDepthToLinearDepth(rawDepth, near, far);\r\n    return mix(near, far, depth);\r\n}\n\nvec3 reconstructWorldPositionFromDepth(vec2 screenUV, float rawDepth, mat4 inverseViewProjectionMatrix) {\r\n    \n    vec4 clipPos = vec4(screenUV * 2. - 1., rawDepth * 2. - 1., 1.);\r\n    vec4 worldPos = inverseViewProjectionMatrix * clipPos;\r\n    return worldPos.xyz / worldPos.w;\r\n}\n\nvec3 reconstructViewPositionFromDepth(vec2 screenUV, float rawDepth, mat4 inverseProjectionMatrix) {\r\n    \n    vec4 clipPos = vec4(screenUV * 2. - 1., rawDepth * 2. - 1., 1.);\r\n    vec4 viewPos = inverseProjectionMatrix * clipPos;\r\n    return viewPos.xyz / viewPos.w;\r\n}\n\nfloat sampleRawDepthByViewPosition(\r\n    sampler2D depthTexture,\r\n    vec3 viewPosition,\r\n    mat4 projectionMatrix,\r\n    vec3 offset\r\n) {\r\n    vec4 offsetPosition = vec4(viewPosition + offset, 1.);\r\n    vec4 projectedPosition = projectionMatrix * offsetPosition;\r\n    vec3 projectedPositionNDC = projectedPosition.xyz / projectedPosition.w;\r\n    vec2 projectedPositionUV = projectedPositionNDC.xy * .5 + .5;\r\n    \n    return textureLod(depthTexture, projectedPositionUV, 0.).x;\r\n}\n\nuniform vec2 uTiling;\r\nuniform sampler2D uTextureCol0;\r\nuniform vec2 uTextureCol0UvOffset;\r\nuniform vec2 uTextureCol1UvOffset;\r\nuniform sampler2D uTextureCol2;\r\nuniform vec2 uTextureCol2UvOffset;\r\nuniform sampler2D uTextureCol3;\r\nuniform vec2 uTextureCol3UvOffset;\r\nuniform sampler2D uTextureCol4;\r\nuniform vec2 uTextureCol4UvOffset;\r\nuniform sampler2D uTextureCol5;\r\nuniform vec2 uTextureCol5UvOffset;\n\nuniform float uNearClip;\r\nuniform float uFarClip;\r\nuniform mat4 uInverseViewProjectionMatrix;\n\nin vec2 vUv;\n\nout vec4 outColor;\n\nvoid main() {\r\n    vec2 tiling = uTiling;\r\n    \n\n    \n    vec2 depthUv = vUv * tiling + uTextureCol0UvOffset;\r\n    vec2 worldPositionUv = vUv * tiling + uTextureCol1UvOffset;\r\n    \r\n    \r\n    \n\n    float rawDepth = texture(uTextureCol0, depthUv).x * isArea(depthUv);\r\n    float sceneDepth = perspectiveDepthToLinearDepth(rawDepth, uNearClip, uFarClip);\r\n    \r\n    vec3 worldPosition = reconstructWorldPositionFromDepth(\r\n        worldPositionUv,\r\n        texture(uTextureCol0, worldPositionUv).x,\r\n        uInverseViewProjectionMatrix\r\n    );\n\n    vec4 depthColor = calcAreaColor(vec4(sceneDepth), vUv, tiling, vec2(0., 0.));\r\n    vec4 worldPositionColor = calcAreaColor(vec4(worldPosition, 1.), vUv, tiling, vec2(-1., 0.));\r\n    vec4 color2 = calcTextureAreaColor(uTextureCol2, vUv, tiling, uTextureCol2UvOffset);\r\n    vec4 color3 = calcTextureAreaColor(uTextureCol3, vUv, tiling, uTextureCol3UvOffset);\r\n    vec4 color4 = calcTextureAreaColor(uTextureCol4, vUv, tiling, uTextureCol4UvOffset);\r\n    vec4 color5 = calcTextureAreaColor(uTextureCol5, vUv, tiling, uTextureCol5UvOffset);\n\n    outColor = depthColor + worldPositionColor + color2 + color3 + color4 + color5;\r\n}",uniforms:[{name:"uNearClip",type:ge,value:.1},{name:"uFarClip",type:ge,value:1},{name:"uInverseViewProjectionMatrix",type:se,value:t.identity}]}),tiles:new Map([[ba,{label:"depth",type:"Texture"}],["worldPosition",{type:"Other",uniformPrefix:"uWorldPosition"}],[Pa,{type:"Texture"}],[Sa,{type:"Texture"}],[Ea,{type:"Texture"}],[Ma,{type:"Texture"}]])}),this.rowPasses.push({pass:new Nr({gpu:e,fragmentShader:wa,srcTextureEnabled:!1}),tiles:new Map([[Ca,{type:"Texture"}],[`${Ra}0`,{type:"Texture"}],[`${Ra}1`,{type:"Texture"}],[`${Ra}2`,{type:"Texture"}],[`${Ra}3`,{type:"Texture"}]])}),this.rowPasses.push({pass:new Nr({gpu:e,fragmentShader:wa,srcTextureEnabled:!1}),tiles:new Map([[Ba,{type:"Texture"}],[Da,{type:"Texture"}],[Aa,{type:"Texture",label:"combine ssr"}],[Va,{type:"Texture"}],[_a,{type:"Texture"}],[Fa,{type:"Texture",label:"combine fog"}]])}),this.rowPasses.push({pass:new Nr({gpu:e,fragmentShader:wa,srcTextureEnabled:!1}),tiles:new Map([[Ua,{type:"Texture",label:"dof"}]])}),this.rowPasses.push({pass:new Nr({gpu:e,fragmentShader:wa,srcTextureEnabled:!1}),tiles:new Map([[Ia,{type:"Texture",label:"bloom blur mip4"}],[za,{type:"Texture",label:"bloom blur mip8"}],[Na,{type:"Texture",label:"bloom blur mip16"}],[La,{type:"Texture",label:"bloom blur mip32"}],[Oa,{type:"Texture",label:"bloom blur mip64"}],[ka,{type:"Texture",label:"bloom"}]])}),this.rowPasses.push({pass:new Nr({gpu:e,fragmentShader:wa,srcTextureEnabled:!1}),tiles:new Map([])}),this.compositePass=new Nr({gpu:e,name:"BufferVisualizerPass",fragmentShader:"#version 300 es\nprecision mediump float;\n#define saturate(a)clamp(a,0.,1.)\nfloat p(vec2 v){return step(0.,v.x)*(1.-step(1.,v.x))*step(0.,v.y)*(1.-step(1.,v.y));}vec4 p(sampler2D e,vec2 v,vec2 s,vec2 u){return texture(e,v*s+u)*p(v*s+u);}uniform vec2 uTiling;uniform sampler2D uRow0Texture,uRow1Texture,uRow2Texture,uRow3Texture,uRow4Texture,uRow5Texture,uFullViewTexture;uniform float uFullViewTextureEnabled;in vec2 vUv;out vec4 outColor;void main(){vec2 v=vec2(1,6);vec4 u=p(uRow0Texture,vUv,v,vec2(0,-5)),s=p(uRow1Texture,vUv,v,vec2(0,-4)),r=p(uRow2Texture,vUv,v,vec2(0,-3)),t=p(uRow3Texture,vUv,v,vec2(0,-2)),C=p(uRow4Texture,vUv,v,vec2(0,-1)),e=p(uRow5Texture,vUv,v,vec2(0));outColor=mix(u+s+r+t+C+e,texture(uFullViewTexture,vUv),step(.5,uFullViewTextureEnabled));}",srcTextureEnabled:!1,uniforms:[{name:"uFullViewTexture",type:oe,value:e.dummyTextureBlack},{name:"uFullViewTextureEnabled",type:ge,value:0},...Ar.range(6).map(((t,r)=>[{name:`uRow${r}Texture`,type:oe,value:e.dummyTextureBlack}])).flat(),...Rr.commonUniforms]}),this.rowPasses.forEach((({pass:e})=>this.materials.push(e.material))),this.materials.push(this.compositePass.material),this.rowPasses.forEach((({pass:t,tiles:r},a)=>{let i=0;t.material.uniforms.addValue("uTiling",le,new Gr(6,1));for(const[s,n]of r){const o=n.uniformNamePrefix||"uTextureCol",u=`${o}${i}`,l=`${u}UvOffset`,h=-i;n.uniformNamePrefix||(r.get(s).uniformNamePrefix=o),"Texture"===n.type&&(r.get(s).uniformNameTexture=u),r.get(s).uniformNameUvOffset=l,0===a?(t.material.uniforms.addValue(l,le,new Gr(h,0)),"Texture"===n.type&&t.material.uniforms.addValue(u,oe,e.dummyTextureBlack)):(t.material.uniforms.addValue(l,le,new Gr(h,0)),t.material.uniforms.addValue(u,oe,e.dummyTextureBlack)),i++}})),this.compositePass.material.uniforms.addValue("uTiling",le,new Gr(1,6));const r=document.createElement("style");r.textContent="\n.buffer-visualizer-pass {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    display: grid;\n    grid-template-rows: repeat(6, 1fr);\n}\n.buffer-visualizer-pass.hidden {\n    display: none;\n}\n.buffer-visualizer-pass-tile {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-end;\n    font-size: 9px;\n    line-height: 1em;\n    font-weight: bold;\n    text-shadow: 1px 1px #333;\n    padding: 4px;\n}\n\n.buffer-visualizer-pass-row {\n    // display: flex;\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n}\n        ",document.head.appendChild(r),this.dom=document.createElement("div"),this.dom.classList.add("buffer-visualizer-pass");const a=document.createDocumentFragment();this.rowPasses.forEach((({tiles:e},t)=>{let r=0;const i=document.createElement("div");i.classList.add("buffer-visualizer-pass-row");for(const[a,s]of e){const e=`[${r}, ${t}] ${s.label||a}`,n=document.createElement("div");n.classList.add("buffer-visualizer-pass-tile");const o=document.createElement("p");o.textContent=e,n.appendChild(o),i.appendChild(n),r++}a.appendChild(i)})),this.dom.appendChild(a),document.body.appendChild(this.dom),this.hideDom()}get renderTarget(){return this.compositePass.renderTarget}setSize(e,t){this.width=e,this.height=t,this.rowPasses.forEach((({pass:e})=>{e.setSize(this.width,this.height/6)})),this.compositePass.setSize(this.width,this.height)}setRenderTarget(e,t,r){}update(){}showDom(){this.dom.classList.remove("hidden")}hideDom(){this.dom.classList.add("hidden")}render(e){const{gpu:t,renderer:r,lightActors:a}=e,i=r.realWidth,s=r.realHeight;this.geometry.start(),this.rowPasses.forEach((({pass:e,tiles:t})=>{a?.directionalLight&&t.has(Ca)&&e.material.uniforms.setValue(t.get(Ca).uniformNameTexture,a.directionalLight.shadowMap.read.depthTexture),a?.spotLights&&a.spotLights.forEach(((r,a)=>{const i=`${Ra}${a}`;t.has(i)&&r.shadowMap&&e.material.uniforms.setValue(t.get(i).uniformNameTexture,r.shadowMap.read.depthTexture)})),t.has(ba)&&e.material.uniforms.setValue(t.get(ba).uniformNameTexture,r.depthPrePassRenderTarget.depthTexture),t.has(Pa)&&e.material.uniforms.setValue(t.get(Pa).uniformNameTexture,r.gBufferRenderTargets.gBufferATexture),t.has(Sa)&&e.material.uniforms.setValue(t.get(Sa).uniformNameTexture,r.gBufferRenderTargets.gBufferBTexture),t.has(Ma)&&e.material.uniforms.setValue(t.get(Ma).uniformNameTexture,r.gBufferRenderTargets.gBufferCTexture),t.has(Ea)&&e.material.uniforms.setValue(t.get(Ea).uniformNameTexture,r.gBufferRenderTargets.gBufferDTexture),t.has(Ba)&&e.material.uniforms.setValue(t.get(Ba).uniformNameTexture,r.ambientOcclusionPass.renderTarget.read.texture),t.has(Da)&&e.material.uniforms.setValue(t.get(Da).uniformNameTexture,r.deferredShadingPass.renderTarget.read.texture),t.has(Aa)&&e.material.uniforms.setValue(t.get(Aa).uniformNameTexture,r.ssrPass.renderTarget.read.texture),t.has(Va)&&e.material.uniforms.setValue(t.get(Va).uniformNameTexture,r.lightShaftPass.renderTarget.read.texture),t.has(_a)&&e.material.uniforms.setValue(t.get(_a).uniformNameTexture,r.volumetricLightPass.renderTarget.read.texture),t.has(Ua)&&e.material.uniforms.setValue(t.get(Ua).uniformNameTexture,r.depthOfFieldPass.renderTarget.read.texture),t.has(Fa)&&e.material.uniforms.setValue(t.get(Fa).uniformNameTexture,r.fogPass.renderTarget.read.texture),t.has(Ia)&&e.material.uniforms.setValue(t.get(Ia).uniformNameTexture,r.bloomPass.renderTargetBlurMip4.read.texture),t.has(za)&&e.material.uniforms.setValue(t.get(za).uniformNameTexture,r.bloomPass.renderTargetBlurMip8.read.texture),t.has(Na)&&e.material.uniforms.setValue(t.get(Na).uniformNameTexture,r.bloomPass.renderTargetBlurMip16.read.texture),t.has(La)&&e.material.uniforms.setValue(t.get(La).uniformNameTexture,r.bloomPass.renderTargetBlurMip32.read.texture),t.has(Oa)&&e.material.uniforms.setValue(t.get(Oa).uniformNameTexture,r.bloomPass.renderTargetBlurMip64.read.texture),t.has(ka)&&e.material.uniforms.setValue(t.get(ka).uniformNameTexture,r.bloomPass.renderTarget.read.texture)})),this.rowPasses[0].pass.material.uniforms.setValue("uInverseViewProjectionMatrix",e.targetCamera.inverseViewProjectionMatrix),t.setSize(0,0,this.width,this.height/6),this.rowPasses.forEach((({pass:t,tiles:r},a)=>{r.size>0&&(t.render({...e,isLastPass:!1}),this.compositePass.material.uniforms.setValue(`uRow${a}Texture`,t.renderTarget.read.texture))})),this.compositePass.material.uniforms.setValue("uFullViewTexture",r.gBufferRenderTargets.gBufferBTexture),this.compositePass.material.uniforms.setValue("uFullViewTextureEnabled",this.fullViewTextureEnabled?1:0),t.setSize(0,0,i,s),this.compositePass.render({...e})}}({gpu:fi});Ei.enabled=!1,Si.addPass(Ei),Si.enabled=!0,Ti.setPostProcess(Si);const Ci=async()=>await ya({gpu:fi,dir:Ka,path:"street-light-full.gltf"}),Ri=async t=>{const r=await ya({gpu:fi,dir:Ka,path:"butterfly-forward-thin-2.gltf"}),a=r.transform.children[0].transform.children[0];a.name="butterfly",a.animator=r.animator,a.setAnimationClips(r.animator.animationClips);const i={position:[],scale:[],rotation:[],velocity:[],color:[]};Ar.range(t).forEach((()=>{i.position.push([0,0,0]);const e=.25*Math.random()+.25;i.scale.push([e,e,e]),i.rotation.push([0,0,0]),i.velocity.push([0,0,0]);const t=Nt.fromRGB(Math.floor(180*Math.random()+20),Math.floor(20*Math.random()+20),Math.floor(180*Math.random()+20));i.color.push([...t.elements])}));const s=Ar.range(t).map((()=>30*Math.random())).flat();a.castShadow=!0,a.geometry.instanceCount=t,a.geometry.setAttribute(new Kt({name:ie.InstancePosition,data:new Float32Array(i.position.flat()),size:3,divisor:1})),a.geometry.setAttribute(new Kt({name:ie.InstanceScale,data:new Float32Array(i.scale.flat()),size:3,divisor:1})),a.geometry.setAttribute(new Kt({name:ie.InstanceRotation,data:new Float32Array(i.rotation.flat()),size:3,divisor:1})),a.geometry.setAttribute(new Kt({name:ie.InstanceAnimationOffset,data:new Float32Array(s),size:1,divisor:1})),a.geometry.setAttribute(new Kt({name:ie.InstanceVertexColor,data:new Float32Array(i.color.flat()),size:4,divisor:1})),a.geometry.setAttribute(new Kt({name:ie.InstanceVelocity,data:new Float32Array(i.velocity.flat()),size:3,divisor:1})),a.material=new va({metallic:0,roughness:1,receiveShadow:!0,isSkinning:!0,gpuSkinning:!0,isInstancing:!0,useInstanceLookDirection:!0,useVertexColor:!0,faceSide:z});const n=(t=>{const r=new Float32Array(Ar.range(t).map((()=>[10*Math.random()-5,4*Math.random()+2,10*Math.random()-5])).flat()),a=new Float32Array(Ar.range(t).map((()=>[0,0,0])).flat()),i=new Float32Array(Ar.range(t,!0).map((e=>[e,e])).flat()),s=new Ha({gpu:fi,attributes:[new Kt({name:"aPosition",data:r,size:3,usageType:re}),new Kt({name:"aVelocity",data:a,size:3,usageType:re}),new Kt({name:"aSeed",data:i,size:2,usageType:te})],varyings:[{name:"vPosition",data:new Float32Array(r)},{name:"vVelocity",data:new Float32Array(a)}],vertexShader:"#version 300 es\n\n        precision highp float;\n\n        // TODO: ここ動的に構築してもいい\n        layout(location = 0) in vec3 aPosition;\n        layout(location = 1) in vec3 aVelocity;\n        layout(location = 2) in vec2 aSeed;\n\n        out vec3 vPosition;\n        // out mat4 vTransform;\n        out vec3 vVelocity;\n\n\nlayout (std140) uniform ubCommon {\n    float uTime;\n};\n\n        // uniform float uTime;\n        uniform vec2 uNormalizedInputPosition;\n        uniform vec3 uAttractTargetPosition;\n        uniform float uAttractRate;\n\n        // https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\n        float noise(vec2 seed)\n        {\n            return fract(sin(dot(seed, vec2(12.9898, 78.233))) * 43758.5453);\n        }\n        \n        void main() {\n            vPosition = aPosition + aVelocity;\n            vec3 target = uAttractTargetPosition;\n            vec2 seed = aSeed;\n            float rand = noise(seed);\n            target += vec3(\n                cos(uTime + rand * 100. + seed.x) * (2. + rand * 1.),\n                sin(uTime - rand * 400. + seed.x) * (1. + rand * 1.) + 1.,\n                cos(uTime - rand * 300. + seed.x) * (2. + rand * 1.)\n            );\n            vec3 v = target - vPosition;\n            vec3 dir = normalize(v);\n            vVelocity = mix(\n                aVelocity,\n                dir * (.1 + uAttractRate * .1),\n                .03 + sin(uTime * .2 + rand * 100.) * .02\n            );\n        }\n        ",uniforms:[{name:"uNormalizedInputPosition",type:le,value:Gr.zero},{name:"uAttractTargetPosition",type:ce,value:e.zero},{name:"uAttractRate",type:ge,value:0}],uniformBlockNames:[yt],drawCount:t});return s.uniformBlockNames.forEach((e=>{const t=vi.globalUniformBufferObjects.find((({uniformBufferObject:t})=>t.blockName===e));if(!t)return;const r=fi.bindUniformBlockAndGetBlockIndex(t.uniformBufferObject,s.shader,e);s.uniforms.addUniformBlock(r,t.uniformBufferObject,[])})),s})(Ja);let o=0;return a.onUpdate=({deltaTime:t})=>{n.uniforms.setValue("uNormalizedInputPosition",hi.normalizedInputPosition),n.uniforms.setValue("uAttractTargetPosition",e.addVectors(ni.transform.position,new e(0,1,0))),o+=(hi.isDown?1:-1)*t*2,o=_r(o,0,1),n.uniforms.setValue("uAttractRate",o),fi.updateTransformFeedback({shader:n.shader,uniforms:n.uniforms,vertexArrayObject:n.write.vertexArrayObject,transformFeedback:n.write.transformFeedback,drawCount:n.drawCount}),n.swap(),oi.geometry.vertexArrayObject.replaceBuffer(ie.InstancePosition,n.read.vertexArrayObject.findBuffer("aPosition")),oi.geometry.vertexArrayObject.replaceBuffer(ie.InstanceVelocity,n.read.vertexArrayObject.findBuffer("aVelocity")),oi.geometry.instanceCount=Za.instanceNum},a};(async()=>{const t=await tr("/labs/street-light/assets/particle-smoke.png"),r=new er({gpu:fi,img:t});ui=await async function(e,t,r,a,i,s,n){const o=[{axis:B,path:t},{axis:D,path:r},{axis:A,path:a},{axis:V,path:i},{axis:_,path:s},{axis:F,path:n}];return await Promise.all(o.map((async({axis:e,path:t})=>({axis:e,img:await tr(t)})))).then((t=>ar(e,...t.map((({img:e})=>e)))))}(fi,"/labs/street-light/assets/px.jpg","/labs/street-light/assets/nx.jpg","/labs/street-light/assets/py.jpg","/labs/street-light/assets/ny.jpg","/labs/street-light/assets/pz.jpg","/labs/street-light/assets/nz.jpg");const a=new pr({gpu:fi,cubeMap:ui,diffuseIntensity:.2,specularIntensity:.2,renderMesh:!1});ai=await(async()=>await ya({gpu:fi,dir:Ka,path:"street-floor-separete.gltf"}))(),pi.add(ai),ai.transform.children.forEach((e=>{e.type===b&&(e.castShadow=!0)})),(ai?.transform.children[0]).materials[0].uniforms.setValue("uMetallic",.5),(ai?.transform.children[0]).materials[0].uniforms.setValue("uRoughness",1),ii=await Ci(),ii.subscribeOnStart((()=>{ii.transform.position=new e(6,0,0),ii.transform.scale=e.fill(1.8)})),pi.add(ii),si=await Ci(),si.subscribeOnStart((()=>{si.transform.rotation=new Ft(0,180,0),si.transform.position=new e(-6,0,0),si.transform.scale=e.fill(1.8)})),pi.add(si),ni=await(async e=>{const t=(await ya({gpu:fi,dir:Ka,path:"sphere-32x32.gltf"})).transform.children[0];return t.castShadow=!0,t.material=e,t})(new Wa({emissiveColor:new Nt(3,3,3,1)})),ni.subscribeOnStart((({actor:t})=>{t.transform.setScaling(e.fill(.5))})),ni.onFixedUpdate=()=>{const t=function(t,r){const a=t.origin,i=t.dir,s=e.dot(t.dir,r.normal);if(Math.abs(s)<1e-4)return null;const n=r.point.clone().subVector(a),o=e.dot(n,r.normal)/s;if(o<0)return null;const u=i.clone().scale(o);return e.addVectors(a,u)}(Ti.viewpointToRay(new Gr(hi.normalizedInputPosition.x,1-hi.normalizedInputPosition.y)),new Ya(e.zero,e.up));if(t){const r=_r(t.x,-5,5),a=_r(t.z,-5,5),i=new e(r,1,a);ni.transform.setTranslation(i)}},oi=await Ri(Ja);const i=48,s=new ur({gpu:fi,attributes:[new Kt({name:ie.Position.toString(),data:new Float32Array(Ar.range(i).map((()=>{const e=6*Math.random()-4,t=.5*Math.random(),r=5.4*Math.random()-1.4;return[e,t,r,e,t,r,e,t,r,e,t,r]})).flat()),size:3}),new Kt({name:ie.Uv.toString(),data:new Float32Array(Ar.range(i).map((()=>[0,1,0,0,1,1,1,0])).flat()),size:2}),new Kt({name:ie.Color.toString(),data:new Float32Array(Ar.range(i).map((()=>{const e=150*Math.random()+50,t=75*Math.random()+25,r=Nt.fromRGB(e,e,e,t);return[...r.elements,...r.elements,...r.elements,...r.elements]})).flat()),size:4}),new Kt({name:"aBillboardSize",data:new Float32Array(Ar.range(i).map((()=>{const e=6.25*Math.random()+1.75;return[e,e,e,e]})).flat()),size:1}),new Kt({name:"aBillboardRateOffset",data:new Float32Array(Ar.range(i).map((()=>{const e=Math.random();return[e,e,e,e]})).flat()),size:1})],indices:Ar.range(i).map(((e,t)=>{const r=4*t;return[0+r,1+r,2+r,2+r,1+r,3+r]})).flat(),drawCount:288}),n=new Jt({vertexShader:"#version 300 es\n\n#pragma DEFINES\n\n#pragma ATTRIBUTES\n\nout vec2 vUv;\nout vec3 vWorldPosition;\nout vec3 vNormal;\n\nout vec4 vVertexColor;\nout vec4 vViewPosition;\nout vec4 vClipPosition;\n\nout float vParticleId;\n\n#pragma ENGINE_UNIFORMS\n#pragma TRANSFORM_VERTEX_UNIFORMS\n\nuniform vec2[4] uBillboardPositionConverters;\n\nvoid main() {\n    int particleId = int(mod(float(gl_VertexID), 4.));\n    float fParticleId = float(particleId);\n    vParticleId = fParticleId;\n\n    float t = 3.;\n    float rateOffset = mod(fParticleId, 4.) * .1;\n    float r = mod((((uTime + rateOffset) / t) + aBillboardRateOffset), 1.);\n\n    vec4 localPosition = vec4(aPosition, 1.);\n\n    localPosition.x += mix(0., 4., r) * mix(.4, .8, aBillboardRateOffset);\n    localPosition.z += mix(0., 2., r) * mix(-.4, -.8, aBillboardRateOffset);\n\n    // assign common varyings \n    vUv = aUv; \n    vVertexColor = aColor;\n    vVertexColor.a *= (smoothstep(0., .2, r) * (1. - smoothstep(.2, 1., r)));\n    \n    vec4 worldPosition = uWorldMatrix * localPosition;\n  \n    vWorldPosition = worldPosition.xyz;\n    \n    vec4 viewPosition = uViewMatrix * worldPosition;\n    viewPosition.xy += uBillboardPositionConverters[particleId] * aBillboardSize;\n    vViewPosition = viewPosition;\n    \n    vec4 clipPosition = uProjectionMatrix * viewPosition;\n \n    gl_Position = clipPosition;\n    \n    vClipPosition = clipPosition;\n}",fragmentShader:"#version 300 es\n\n#pragma DEFINES\n\nprecision highp float;\n\nin float vParticleId;\nin vec2 vUv;\nin vec4 vVertexColor;\nin vec4 vViewPosition;\nin vec4 vClipPosition;\n\nout vec4 outColor;\n// layout (location = 0) out vec4 outBaseColor;\n// layout (location = 1) out vec4 outNormalColor;\n\nuniform sampler2D uParticleMap;\nuniform sampler2D uDepthTexture;\nuniform float uNearClip;\nuniform float uFarClip;\n\n#pragma ENGINE_UNIFORMS\n#pragma DEPTH_FUNCTIONS\n\nvoid main() {\n    vec4 texColor = texture(uParticleMap, vUv);\n    vec3 baseColor = vVertexColor.xyz;\n    float alpha = texColor.x * vVertexColor.a;\n    \n    vec4 fadeColor = texture(\n        uParticleMap,\n        vUv + vec2(mod(uTime * .06 + float(vParticleId) * .1, 1.), 0.)\n    );\n    alpha *= fadeColor.x * 2.;\n    \n    // calc soft fade\n    \n    float rawDepth = texelFetch(uDepthTexture, ivec2(gl_FragCoord.xy), 0).x;\n    float sceneDepth = perspectiveDepthToLinearDepth(rawDepth, uNearClip, uFarClip);\n    // for debug\n    // outColor = vec4(vec3(sceneDepth), 1.);\n\n    float currentDepth = viewZToLinearDepth(vViewPosition.z, uNearClip, uFarClip);\n    // for debug\n    // outColor = vec4(vec3(currentDepth), 1.);\n    \n    float diffDepth = abs(sceneDepth) - abs(currentDepth);\n    float softFade = smoothstep(0., .02, diffDepth);\n    // for debug\n    // outColor = vec4(vec3(softFade), 1.);\n    \n    // result\n    \n    // outBaseColor = vec4(1., 0., 0., 1.);\n    // outColor = vec4(1., 0., 0., 1.);\n\n    float fadedAlpha = alpha * softFade;\n    if(fadedAlpha < .01) {\n        discard;\n    }\n\n    outColor = vec4(baseColor, fadedAlpha);\n    // outBaseColor = vec4(baseColor, fadedAlpha);\n    // outNormalColor = vec4(0., 0., 1., 1.); // dummy\n}\n        ",uniforms:[{name:"uParticleMap",type:oe,value:r},{name:"uBillboardPositionConverters",type:he,value:[new Gr(-1,1),new Gr(-1,-1),new Gr(1,1),new Gr(1,-1)]},{name:Ge,type:oe,value:null},{name:rt,type:ge,value:Ti.near},{name:at,type:ge,value:Ti.far}],blendType:c,depthWrite:!1,uniformBlockNames:[yt]}),o=new lr({geometry:s,material:n});pi.add(ni),pi.add(oi),pi.add(a),pi.add(o);const u=()=>{ti=ci.offsetWidth,ri=ci.offsetHeight,hi.setSize(ti,ri),xi.setSize(ti,ri)};xi.onBeforeStart=()=>{u(),window.addEventListener("resize",u),vi.fogPass.fogColor=Nt.black,vi.fogPass.fogDensity=.023,vi.fogPass.fogDensityAttenuation=.065,vi.fogPass.distanceFogStart=18,vi.fogPass.distanceFogPower=.29,vi.depthOfFieldPass.focusDistance=17.78,vi.depthOfFieldPass.focusRange=9.8,vi.depthOfFieldPass.bokehRadius=5.55,vi.bloomPass.bloomAmount=.26,vi.bloomPass.threshold=1.534,vi.bloomPass.tone=.46,yi.start()},xi.onBeforeUpdate=()=>{ei||function(){ei=new ja,ei.addSliderDebugger({label:"instance num",minValue:1,maxValue:Ja,initialValue:64,stepValue:1,onChange:e=>{Za.instanceNum=e}}),ei.addBorderSpacer(),ei.addToggleDebugger({label:"orbit controls enabled",initialValue:yi.enabled,onChange:e=>yi.enabled=e}),ei.addBorderSpacer(),ei.addToggleDebugger({label:"show buffers",initialValue:Ei.enabled,onChange:e=>{Ei.enabled=e,e?Ei.showDom():Ei.hideDom()}}),ei.addBorderSpacer();const e=ei.addGroup("directional light",!1);e.addSliderDebugger({label:"intensity",minValue:0,maxValue:4,stepValue:.001,initialValue:wi.intensity,onChange:e=>{wi.intensity=e}}),e.addSliderDebugger({label:"pos x",minValue:-10,maxValue:10,stepValue:.001,initialValue:wi.transform.position.x,onChange:e=>{wi.transform.position.x=e}}),e.addSliderDebugger({label:"pos y",minValue:0,maxValue:10,stepValue:.001,initialValue:wi.transform.position.y,onChange:e=>{wi.transform.position.y=e}}),e.addSliderDebugger({label:"pos z",minValue:-10,maxValue:10,stepValue:.001,initialValue:wi.transform.position.z,onChange:e=>{wi.transform.position.z=e}}),qa(bi,"spot light 1"),qa(Pi,"spot light 2"),ei.addBorderSpacer();const t=ei.addGroup("ssao",!1);t.addSliderDebugger({label:"ssao occlusion sample length",minValue:.01,maxValue:1,stepValue:.001,initialValue:vi.ambientOcclusionPass.occlusionSampleLength,onChange:e=>{vi.ambientOcclusionPass.occlusionSampleLength=e}}),t.addSliderDebugger({label:"ssao occlusion bias",minValue:1e-4,maxValue:.01,stepValue:1e-4,initialValue:vi.ambientOcclusionPass.occlusionBias,onChange:e=>{vi.ambientOcclusionPass.occlusionBias=e}}),t.addSliderDebugger({label:"ssao min distance",minValue:0,maxValue:.1,stepValue:.001,initialValue:vi.ambientOcclusionPass.occlusionMinDistance,onChange:e=>{vi.ambientOcclusionPass.occlusionMinDistance=e}}),t.addSliderDebugger({label:"ssao max distance",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.ambientOcclusionPass.occlusionMaxDistance,onChange:e=>{vi.ambientOcclusionPass.occlusionMaxDistance=e}}),t.addColorDebugger({label:"ssao color",initialValue:vi.ambientOcclusionPass.occlusionColor.getHexCoord(),onChange:e=>{vi.ambientOcclusionPass.occlusionColor=Nt.fromHex(e)}}),t.addSliderDebugger({label:"ssao occlusion power",minValue:.5,maxValue:4,stepValue:.01,initialValue:vi.ambientOcclusionPass.occlusionPower,onChange:e=>{vi.ambientOcclusionPass.occlusionPower=e}}),t.addSliderDebugger({label:"ssao occlusion strength",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.ambientOcclusionPass.occlusionStrength,onChange:e=>{vi.ambientOcclusionPass.occlusionStrength=e}}),t.addSliderDebugger({label:"ssao blend rate",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.ambientOcclusionPass.blendRate,onChange:e=>{vi.ambientOcclusionPass.blendRate=e}}),ei.addBorderSpacer();const r=ei.addGroup("light shaft",!1);r.addSliderDebugger({label:"blend rate",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.lightShaftPass.blendRate,onChange:e=>{vi.lightShaftPass.blendRate=e}}),r.addSliderDebugger({label:"pass scale",minValue:.001,maxValue:1,stepValue:.001,initialValue:vi.lightShaftPass.passScaleBase,onChange:e=>{vi.lightShaftPass.passScaleBase=e}}),r.addSliderDebugger({label:"ray step strength",minValue:.001,maxValue:.05,stepValue:.001,initialValue:vi.lightShaftPass.rayStepStrength,onChange:e=>{vi.lightShaftPass.rayStepStrength=e}}),ei.addBorderSpacer();const a=ei.addGroup("volumetric light",!1);a.addSliderDebugger({label:"ray step",initialValue:vi.volumetricLightPass.rayStep,minValue:.001,maxValue:1,stepValue:.001,onChange:e=>{vi.volumetricLightPass.rayStep=e}}),a.addSliderDebugger({label:"density multiplier",initialValue:vi.volumetricLightPass.densityMultiplier,minValue:.001,maxValue:10,stepValue:.001,onChange:e=>{vi.volumetricLightPass.densityMultiplier=e}}),a.addSliderDebugger({label:"jitter size x",initialValue:vi.volumetricLightPass.rayJitterSizeX,minValue:0,maxValue:1,stepValue:.001,onChange:e=>{vi.volumetricLightPass.rayJitterSizeX=e}}),a.addSliderDebugger({label:"jitter size y",initialValue:vi.volumetricLightPass.rayJitterSizeY,minValue:0,maxValue:1,stepValue:.001,onChange:e=>{vi.volumetricLightPass.rayJitterSizeY=e}}),a.addSliderDebugger({label:"blend rate",initialValue:vi.volumetricLightPass.blendRate,minValue:0,maxValue:1,stepValue:.001,onChange:e=>{vi.volumetricLightPass.blendRate=e}}),ei.addBorderSpacer();const i=ei.addGroup("fog",!1);i.addColorDebugger({label:"fog color",initialValue:vi.fogPass.fogColor.getHexCoord(),onChange:e=>{vi.fogPass.fogColor=Nt.fromHex(e)}}),i.addSliderDebugger({label:"density",minValue:0,maxValue:1,stepValue:1e-4,initialValue:vi.fogPass.fogDensity,onChange:e=>{vi.fogPass.fogDensity=e}}),i.addSliderDebugger({label:"attenuation",minValue:0,maxValue:1,stepValue:1e-4,initialValue:vi.fogPass.fogDensityAttenuation,onChange:e=>{vi.fogPass.fogDensityAttenuation=e}}),i.addSliderDebugger({label:"distance fog start",minValue:0,maxValue:Ti.far,stepValue:.01,initialValue:vi.fogPass.distanceFogStart,onChange:e=>{vi.fogPass.distanceFogStart=e}}),i.addSliderDebugger({label:"distance fog power",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.fogPass.distanceFogPower,onChange:e=>{vi.fogPass.distanceFogPower=e}}),ei.addBorderSpacer();const s=ei.addGroup("depth of field",!1);s.addSliderDebugger({label:"DoF focus distance",minValue:.1,maxValue:100,stepValue:.001,initialValue:vi.depthOfFieldPass.focusDistance,onChange:e=>{vi.depthOfFieldPass.focusDistance=e}}),s.addSliderDebugger({label:"DoF focus range",minValue:.1,maxValue:30,stepValue:.001,initialValue:vi.depthOfFieldPass.focusRange,onChange:e=>{vi.depthOfFieldPass.focusRange=e}}),s.addSliderDebugger({label:"DoF bokeh radius",minValue:.01,maxValue:10,stepValue:.001,initialValue:vi.depthOfFieldPass.bokehRadius,onChange:e=>{vi.depthOfFieldPass.bokehRadius=e}}),ei.addBorderSpacer();const n=ei.addGroup("bloom",!1);n.addSliderDebugger({label:"bloom amount",minValue:0,maxValue:4,stepValue:.001,initialValue:vi.bloomPass.bloomAmount,onChange:e=>{vi.bloomPass.bloomAmount=e}}),n.addSliderDebugger({label:"bloom threshold",minValue:0,maxValue:5,stepValue:.001,initialValue:vi.bloomPass.threshold,onChange:e=>{vi.bloomPass.threshold=e}}),n.addSliderDebugger({label:"bloom tone",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.bloomPass.tone,onChange:e=>{vi.bloomPass.tone=e}}),ei.addBorderSpacer();const o=ei.addGroup("streak",!1);o.addSliderDebugger({label:"threshold",minValue:0,maxValue:4,stepValue:.001,initialValue:vi.streakPass.threshold,onChange:e=>{vi.streakPass.threshold=e}}),o.addSliderDebugger({label:"vertical scale",minValue:0,maxValue:10,stepValue:.001,initialValue:vi.streakPass.verticalScale,onChange:e=>{vi.streakPass.verticalScale=e}}),o.addSliderDebugger({label:"horizontal scale",minValue:0,maxValue:2,stepValue:.001,initialValue:vi.streakPass.horizontalScale,onChange:e=>{vi.streakPass.horizontalScale=e}}),o.addSliderDebugger({label:"stretch",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.streakPass.stretch,onChange:e=>{vi.streakPass.stretch=e}}),o.addColorDebugger({label:"color",initialValue:vi.streakPass.color.getHexCoord(),onChange:e=>{vi.streakPass.color=Nt.fromHex(e)}}),o.addSliderDebugger({label:"intensity",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.streakPass.intensity,onChange:e=>{vi.streakPass.intensity=e}}),ei.addBorderSpacer();const u=ei.addGroup("ssr",!1);u.addSliderDebugger({label:"depth bias",minValue:.001,maxValue:.1,stepValue:.001,initialValue:vi.ssrPass.rayDepthBias,onChange:e=>{vi.ssrPass.rayDepthBias=e}}),u.addSliderDebugger({label:"ray nearest distance",minValue:.001,maxValue:1,stepValue:.001,initialValue:vi.ssrPass.rayNearestDistance,onChange:e=>{vi.ssrPass.rayNearestDistance=e}}),u.addSliderDebugger({label:"ray max distance",minValue:.001,maxValue:10,stepValue:.001,initialValue:vi.ssrPass.rayMaxDistance,onChange:e=>{vi.ssrPass.rayMaxDistance=e}}),u.addSliderDebugger({label:"ray thickness",minValue:.001,maxValue:1,stepValue:.001,initialValue:vi.ssrPass.reflectionRayThickness,onChange:e=>{vi.ssrPass.reflectionRayThickness=e}}),u.addSliderDebugger({label:"jitter size x",minValue:.001,maxValue:.1,stepValue:.001,initialValue:vi.ssrPass.reflectionRayJitterSizeX,onChange:e=>{vi.ssrPass.reflectionRayJitterSizeX=e}}),u.addSliderDebugger({label:"jitter size y",minValue:.001,maxValue:.1,stepValue:.001,initialValue:vi.ssrPass.reflectionRayJitterSizeY,onChange:e=>{vi.ssrPass.reflectionRayJitterSizeY=e}}),u.addSliderDebugger({label:"roughness power",minValue:0,maxValue:5,stepValue:.01,initialValue:vi.ssrPass.reflectionRoughnessPower,onChange:e=>{vi.ssrPass.reflectionRoughnessPower=e}}),u.addSliderDebugger({label:"fade min distance",minValue:.001,maxValue:10,stepValue:.001,initialValue:vi.ssrPass.reflectionFadeMinDistance,onChange:e=>{vi.ssrPass.reflectionFadeMinDistance=e}}),u.addSliderDebugger({label:"fade max distance",minValue:.001,maxValue:10,stepValue:.001,initialValue:vi.ssrPass.reflectionFadeMaxDistance,onChange:e=>{vi.ssrPass.reflectionFadeMaxDistance=e}}),u.addSliderDebugger({label:"edge fade factor min x",minValue:.001,maxValue:1,stepValue:.001,initialValue:vi.ssrPass.reflectionScreenEdgeFadeFactorMinX,onChange:e=>{vi.ssrPass.reflectionScreenEdgeFadeFactorMinX=e}}),u.addSliderDebugger({label:"edge fade factor max x",minValue:.001,maxValue:1,stepValue:.001,initialValue:vi.ssrPass.reflectionScreenEdgeFadeFactorMaxX,onChange:e=>{vi.ssrPass.reflectionScreenEdgeFadeFactorMaxX=e}}),u.addSliderDebugger({label:"edge fade factor min y",minValue:.001,maxValue:1,stepValue:.001,initialValue:vi.ssrPass.reflectionScreenEdgeFadeFactorMinY,onChange:e=>{vi.ssrPass.reflectionScreenEdgeFadeFactorMinY=e}}),u.addSliderDebugger({label:"edge fade factor max y",minValue:.001,maxValue:1,stepValue:.001,initialValue:vi.ssrPass.reflectionScreenEdgeFadeFactorMaxY,onChange:e=>{vi.ssrPass.reflectionScreenEdgeFadeFactorMaxY=e}}),u.addSliderDebugger({label:"additional rate",minValue:.01,maxValue:1,stepValue:.01,initialValue:vi.ssrPass.reflectionAdditionalRate,onChange:e=>{vi.ssrPass.reflectionAdditionalRate=e}}),ei.addBorderSpacer();ei.addGroup("chromatic aberration",!1).addSliderDebugger({label:"scale",minValue:0,maxValue:.1,stepValue:.001,initialValue:vi.chromaticAberrationPass.chromaticAberrationScale,onChange:e=>vi.chromaticAberrationPass.chromaticAberrationScale=e}),ei.addBorderSpacer();const l=ei.addGroup("vignette",!1);l.addSliderDebugger({label:"radius",minValue:0,maxValue:3,stepValue:.001,initialValue:vi.vignettePass.vignetteRadius,onChange:e=>vi.vignettePass.vignetteRadius=e}),l.addSliderDebugger({label:"power",minValue:.01,maxValue:8,stepValue:.001,initialValue:vi.vignettePass.vignettePower,onChange:e=>vi.vignettePass.vignettePower=e}),l.addSliderDebugger({label:"blend rate",minValue:0,maxValue:1,stepValue:.001,initialValue:vi.vignettePass.blendRate,onChange:e=>vi.vignettePass.blendRate=e}),ei.addBorderSpacer();ei.addGroup("fxaa",!1).addToggleDebugger({label:"fxaa pass enabled",initialValue:Mi.enabled,onChange:e=>Mi.enabled=e}),ci.appendChild(ei.domElement)}(),hi.update()},xi.onRender=e=>{vi.render(pi,Ti,{time:e})};const l=e=>{xi.run(e),requestAnimationFrame(l)};xi.start(),requestAnimationFrame(l)})();
